{"version":3,"file":"759.js","mappings":"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","sources":["webpack://WebComponents/./runestone/dragndrop/js/dragndrop-i18n.en.js","webpack://WebComponents/./runestone/dragndrop/js/dragndrop-i18n.pt-br.js","webpack://WebComponents/./runestone/dragndrop/js/dragndrop.js","webpack://WebComponents/./runestone/dragndrop/js/timeddnd.js"],"sourcesContent":["$.i18n().load({\n    en: {\n        msg_dragndrop_correct_answer: \"You are correct!\",\n        msg_dragndrop_incorrect_answer:\n            \"Incorrect. You got $1 correct and $2 incorrect out of $3. You left $4 unmatched.\",\n        msg_dragndrop_check_me: \"Check me\",\n        msg_dragndrop_reset: \"Reset\",\n    },\n});\n","$.i18n().load({\n    \"pt-br\": {\n        msg_dragndrop_correct_answer: \"Correto!\",\n        msg_dragndrop_incorrect_answer:\n            \"Incorreto. Você teve $1 correto(s) e $2 incorreto(s) de $3. Você deixou $4 em branco.\",\n        msg_dragndrop_check_me: \"Verificar\",\n        msg_dragndrop_reset: \"Resetar\",\n    },\n});\n","/*==========================================\n=======     Master dragndrop.js     ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone Drag n drop component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/6/15                ===\n===              Brad MIller             ===\n===                2/7/19                ===\n===               12/30/24               ===\n==========================================*/\n\n/*\n * Some terminology:\n * - draggable: the element that is being dragged\n * - dropzone: the element that is being dropped on\n * - premise: the element that is being dragged\n * - response: the element that is being dropped on\n * - category: each premis and response have a category.  Several premises can have the same category\n * and be dropped onto the same response.  If a premise has no response its category will not be in\n * the list of categories.\n *\n * Key variables:\n * - dragArray: an array of draggable elements\n * - dropArray: an array of dropzone elements\n * - categories: an array of all categories\n */\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"../css/dragndrop.less\";\nimport \"./dragndrop-i18n.en.js\";\nimport \"./dragndrop-i18n.pt-br.js\";\n//import \"./DragDropTouch.js\";\n\nexport default class DragNDrop extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <ul> element that will be replaced by new HTML\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.random = false;\n        if (this.origElem.hasAttribute(\"data-random\")) {\n            this.random = true;\n        }\n        this.feedback = \"\";\n        this.question = \"\";\n        this.populate(); // Populates this.responseArray, this.premiseArray, this.feedback and this.question\n        this.createNewElements();\n        this.caption = \"Drag-N-Drop\";\n        this.addCaption(\"runestone\");\n        if (typeof Prism !== \"undefined\") {\n            Prism.highlightAllUnder(this.containerDiv);\n        }\n    }\n\n    /*======================\n    === Update variables ===\n    ======================*/\n    populate() {\n        this.responseArray = [];\n        this.premiseArray = [];\n        for (let element of this.origElem.querySelectorAll(\n            \"[data-subcomponent='draggable']\"\n        )) {\n            let replaceSpan = document.createElement(\"span\");\n            replaceSpan.innerHTML = element.innerHTML;\n            replaceSpan.id = element.id;\n            replaceSpan.setAttribute(\"draggable\", \"true\");\n            replaceSpan.classList.add(\"draggable-drag\");\n            replaceSpan.classList.add(\"premise\");\n            replaceSpan.tabIndex = 0;\n            replaceSpan.setAttribute('role', 'button');\n            replaceSpan.dataset.category = this.getCategory(element);\n            replaceSpan.dataset.parent_id = this.divid;\n            this.premiseArray.push(replaceSpan);\n            this.setDragListeners(replaceSpan);\n        }\n        this.premiseArray = shuffleArray(this.premiseArray);\n        for (let element of this.origElem.querySelectorAll(\n            \"[data-subcomponent='dropzone']\"\n        )) {\n            let replaceSpan = document.createElement(\"span\");\n            replaceSpan.innerHTML = element.innerHTML;\n            replaceSpan.id = element\n                .getAttribute(\"for\")\n                .replace(\"drag\", \"drop\");\n            replaceSpan.classList.add(\n                \"draggable-drop\",\n                \"drop-label\",\n                \"response\"\n            );\n            replaceSpan.tabIndex = 0;\n            replaceSpan.setAttribute('role', 'button');\n            replaceSpan.dataset.category = this.getCategory(element);\n            replaceSpan.dataset.parent_id = this.divid;\n            this.responseArray.push(replaceSpan);\n            this.setDropListeners(replaceSpan);\n        }\n\n        this.question = this.origElem.querySelector(\n            \"[data-subcomponent='question']\"\n        ).innerHTML;\n        let feedback = this.origElem.querySelector(\n            \"[data-subcomponent='feedback']\"\n        );\n        if (feedback) {\n            this.feedback = feedback.innerHTML;\n        }\n    }\n\n    getCategory(elem) {\n        if (elem.dataset.category) {\n            return elem.dataset.category;\n        } else {\n            // if no category then use the for attribute or the id\n            // this is for backwards compatibility\n            if (elem.hasAttribute(\"for\")) {\n                return elem.getAttribute(\"for\");\n            } else {\n                return elem.id;\n            }\n        }\n    }\n    /*========================================\n    == Create new HTML elements and replace ==\n    ==      original element with them      ==\n    ========================================*/\n    createNewElements() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        this.containerDiv.classList.add(\"draggable-container\");\n        this.containerDiv.innerHTML = this.question;\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.dragDropWrapDiv = document.createElement(\"div\"); // Holds the draggables/dropzones, prevents feedback from bleeding in\n        this.dragDropWrapDiv.style.display = \"block\";\n        this.containerDiv.appendChild(this.dragDropWrapDiv);\n        this.draggableDiv = document.createElement(\"div\");\n        this.draggableDiv.classList.add(\"rsdraggable\", \"dragzone\");\n        this.addDragDivListeners();\n        this.dropZoneDiv = document.createElement(\"div\");\n        this.dropZoneDiv.classList.add(\"rsdraggable\");\n        this.dragDropWrapDiv.appendChild(this.draggableDiv);\n        this.dragDropWrapDiv.appendChild(this.dropZoneDiv);\n        this.createButtons();\n        this.checkServer(\"dragNdrop\", true);\n        if (eBookConfig.practice_mode) {\n            this.finishSettingUp();\n        }\n        self = this;\n        this.ivp = this.isValidPremise.bind(this);\n        self.queueMathJax(self.containerDiv);\n    }\n\n    finishSettingUp() {\n        this.appendReplacementSpans();\n        this.createFeedbackDiv();\n        this.origElem.parentNode.replaceChild(this.containerDiv, this.origElem);\n        if (!this.hasStoredDropzones) {\n            this.minheight = this.draggableDiv.offsetHeight;\n            // Ensure MathJax has completed before adjusting the zone widths\n            this.queueMathJax(this.containerDiv).then(() => {\n                this.adjustDragDropWidths();\n            });\n        }\n        this.draggableDiv.style.minHeight = this.minheight.toString() + \"px\";\n        if (this.dropZoneDiv.offsetHeight > this.minheight) {\n            this.dragDropWrapDiv.style.minHeight =\n                this.dropZoneDiv.offsetHeight.toString() + \"px\";\n        } else {\n            this.dragDropWrapDiv.style.minHeight =\n                this.minheight.toString() + \"px\";\n        }\n        this.draggableDiv.style.width = `${this.dragwidth}%`;\n        this.dropZoneDiv.style.width = `${this.dropwidth}%`;\n    }\n    addDragDivListeners() {\n        let self = this;\n        this.draggableDiv.addEventListener(\n            \"dragover\",\n            function (ev) {\n                ev.preventDefault();\n                if (this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                this.draggableDiv.classList.add(\"possibleDrop\");\n            }.bind(this)\n        );\n        this.draggableDiv.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    this.draggableDiv.classList.remove(\"possibleDrop\");\n                }\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    !this.draggableDiv.contains(draggedSpan) &&\n                    !this.strangerDanger(draggedSpan)\n                ) {\n                    // Make sure element isn't already there--prevents erros w/appending child\n                    this.draggableDiv.appendChild(draggedSpan);\n                    this.adjustDragDropWidths();\n                    this.minheight = this.draggableDiv.offsetHeight;\n                    this.dragDropWrapDiv.style.minHeight =\n                        this.minheight.toString() + \"px\";\n                }\n            }.bind(this)\n        );\n        this.draggableDiv.addEventListener(\n            \"dragleave\",\n            function (e) {\n                if (!this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                this.draggableDiv.classList.remove(\"possibleDrop\");\n            }.bind(this)\n        );\n    }\n    createButtons() {\n        this.buttonDiv = document.createElement(\"div\");\n        this.buttonDiv.classList.add(\"dnd-button-container\");\n        this.submitButton = document.createElement(\"button\"); // Check me button\n        this.submitButton.textContent = $.i18n(\"msg_dragndrop_check_me\");\n        this.submitButton.setAttribute(\"class\", \"btn btn-success drag-button\");\n        this.submitButton.setAttribute(\"name\", \"do answer\");\n        this.submitButton.setAttribute(\"type\", \"button\");\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.renderFeedback();\n            this.logCurrentAnswer();\n        }.bind(this);\n        this.resetButton = document.createElement(\"button\"); // Check me button\n        this.resetButton.textContent = $.i18n(\"msg_dragndrop_reset\");\n        this.resetButton.setAttribute(\n            \"class\",\n            \"btn btn-default drag-button drag-reset\"\n        );\n        this.resetButton.setAttribute(\"name\", \"do answer\");\n        this.resetButton.onclick = function () {\n            this.resetDraggables();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.buttonDiv.appendChild(this.resetButton);\n        this.containerDiv.appendChild(this.buttonDiv);\n    }\n    appendReplacementSpans() {\n        if (\n            this.answerState === undefined ||\n            Object.keys(this.answerState).length === 0\n        ) {\n            this.answerState = {};\n            for (let element of this.premiseArray) {\n                this.draggableDiv.appendChild(element);\n            }\n            for (let element of this.responseArray) {\n                this.dropZoneDiv.appendChild(element);\n            }\n        } else {\n            let placedPremises = [];\n            for (let response of this.responseArray) {\n                this.dropZoneDiv.appendChild(response);\n                if (this.answerState[response.id]) {\n                    for (let premise of this.answerState[response.id]) {\n                        placedPremises.push(premise);\n                        response.appendChild(this.findPremise(premise));\n                    }\n                }\n            }\n            for (let premise of this.premiseArray) {\n                if (placedPremises.indexOf(premise.id) == -1) {\n                    this.draggableDiv.appendChild(premise);\n                }\n            }\n        }\n    }\n\n    findPremise(id) {\n        for (let premise of this.premiseArray) {\n            if (premise.id == id) {\n                return premise;\n            }\n        }\n    }\n\n    setDragListeners(dgSpan) {\n        let self = this;\n        dgSpan.addEventListener(\"dragstart\", function (ev) {\n            ev.dataTransfer.setData(\"draggableID\", ev.target.id);\n        });\n        dgSpan.addEventListener(\"dragover\", function (ev) {\n            ev.preventDefault();\n        });\n        dgSpan.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    draggedSpan != ev.target &&\n                    !this.strangerDanger(draggedSpan)\n                ) {\n                    // Make sure element isn't already there--prevents errors w/appending child\n                    this.draggableDiv.appendChild(draggedSpan);\n                }\n            }.bind(this)\n        );\n\n        // Add keyboard navigation for selecting premises\n        dgSpan.addEventListener(\"keydown\", function (ev) {\n            if (ev.key === \"Enter\" || ev.key === \" \") {\n                ev.preventDefault();\n                if (!self.selectedPremise) {\n                    self.selectedPremise = dgSpan;\n                    dgSpan.classList.add(\"selected\");\n                } else {\n                    self.selectedPremise.classList.remove(\"selected\");\n                    self.selectedPremise = null;\n                }\n            }\n        });\n    }\n\n    setDropListeners(dpSpan) {\n        dpSpan.addEventListener(\n            \"dragover\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (ev.target.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                if (ev.target.classList.contains(\"draggable-drop\")) {\n                    ev.target.classList.add(\"possibleDrop\");\n                }\n            }.bind(this)\n        );\n        dpSpan.addEventListener(\"dragleave\", function (ev) {\n            self.isAnswered = true;\n            ev.preventDefault();\n            if (!ev.target.classList.contains(\"possibleDrop\")) {\n                return;\n            }\n            ev.target.classList.remove(\"possibleDrop\");\n        });\n        dpSpan.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (ev.target.classList.contains(\"possibleDrop\")) {\n                    ev.target.classList.remove(\"possibleDrop\");\n                }\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    ev.target.classList.contains(\"draggable-drop\") &&\n                    !this.strangerDanger(draggedSpan) &&\n                    !this.premiseArray.includes(ev.target) // don't drop on another premise!\n                ) {\n                    // Make sure element isn't already there--prevents errors w/appending child\n                    ev.target.appendChild(draggedSpan);\n                }\n                this.queueMathJax(this.containerDiv).then(() => {\n                    this.adjustDragDropWidths();\n                });\n            }.bind(this)\n        );\n\n        // Add keyboard navigation for dropping premises\n        dpSpan.addEventListener(\"keydown\", function (ev) {\n            if ((ev.key === \"Enter\" || ev.key === \" \") && self.selectedPremise) {\n                ev.preventDefault();\n                if (\n                    !self.strangerDanger(self.selectedPremise) &&\n                    !self.premiseArray.includes(dpSpan) // don't drop on another premise!\n                ) {\n                    dpSpan.appendChild(self.selectedPremise);\n                    self.selectedPremise.classList.remove(\"selected\");\n                    self.selectedPremise = null;\n                    self.queueMathJax(self.containerDiv).then(() => {\n                        self.adjustDragDropWidths();\n                    });\n                }\n            }\n        });\n    }\n\n    adjustDragDropWidths() {\n        // Temporarily minimize the dragzone width to the content\n        this.draggableDiv.style.width = \"fit-content\";\n\n        const dragzoneWidth = this.draggableDiv.offsetWidth;\n        const totalWidth = this.dragDropWrapDiv.offsetWidth;\n\n        let dragzonePercent = Math.ceil((dragzoneWidth / totalWidth) * 100);\n        dragzonePercent = Math.max(28, Math.min(dragzonePercent, 48));\n        const dropzonePercent = 100 - dragzonePercent - 4; // 4 accounts for zone padding\n\n        this.dragwidth = dragzonePercent;\n        this.dropwidth = dropzonePercent;\n\n        this.draggableDiv.style.width = `${dragzonePercent}%`;\n        this.dropZoneDiv.style.width = `${dropzonePercent}%`;\n    }\n\n    createFeedbackDiv() {\n        if (!this.feedBackDiv) {\n            this.feedBackDiv = document.createElement(\"div\");\n            this.feedBackDiv.id = this.divid + \"_feedback\";\n            this.feedBackDiv.setAttribute(\"aria-live\", \"polite\");\n            this.feedBackDiv.setAttribute(\"role\", \"status\");\n            this.containerDiv.appendChild(document.createElement(\"br\"));\n            this.containerDiv.appendChild(this.feedBackDiv);\n        }\n    }\n    /*=======================\n    == Auxiliary functions ==\n    =======================*/\n    /* leaving the name as is, because it reminds me of Isaiah! */\n    strangerDanger(testSpan) {\n        // Returns true if the test span doesn't belong to this instance of DragNDrop\n        if (testSpan.dataset.parent_id != this.divid) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /*==============================\n    == Reset button functionality ==\n    ==============================*/\n    resetDraggables() {\n        this.dropZoneDiv.innerHTML = \"\";\n        for (let response of this.responseArray) {\n            response.classList.remove(\"drop-incorrect\");\n            this.dropZoneDiv.appendChild(response);\n        }\n        this.draggableDiv.innerHTML = \"\";\n        shuffleArray(this.premiseArray);\n        for (let premise of this.premiseArray) {\n            this.draggableDiv.appendChild(premise);\n        }\n        this.answerState = {};\n        this.feedBackDiv.style.display = \"none\";\n        this.adjustDragDropWidths();\n        this.minheight = this.draggableDiv.offsetHeight;\n        this.dragDropWrapDiv.style.minHeight =\n            this.minheight.toString() + \"px\";\n        this.feedBackDiv.style.visibility = \"hidden\";\n    }\n    /*===========================\n    == Evaluation and feedback ==\n    ===========================*/\n    getAllCategories() {\n        this.categories = [];\n        for (let response of this.dropZoneDiv.childNodes) {\n            this.categories.push(response.dataset.category);\n        }\n        return this.categories;\n    }\n\n    checkCurrentAnswer() {\n        let categories = this.getAllCategories();\n        this.correct = true;\n        this.unansweredNum = 0;\n        this.incorrectNum = 0;\n        this.correctNum = 0;\n        this.dragNum = this.premiseArray.length;\n\n        for (let response of this.dropZoneDiv.childNodes) {\n            // ignore drop zone children that aren't premises\n            for (let premise of Array.from(response.childNodes).filter(\n                this.ivp\n            )) {\n                if (premise.dataset.category == response.dataset.category) {\n                    this.correctNum++;\n                } else {\n                    this.incorrectNum++;\n                }\n            }\n        }\n        for (let premise of Array.from(this.draggableDiv.childNodes).filter(\n            (node) => node.nodeType !== Node.TEXT_NODE\n        )) {\n            if (categories.indexOf(premise.dataset.category) == -1) {\n                this.correctNum++;\n            } else {\n                this.unansweredNum++;\n            }\n        }\n        this.percent = this.correctNum / this.premiseArray.length;\n        console.log(this.percent, this.incorrectNum, this.unansweredNum);\n        if (this.percent < 1.0) {\n            this.correct = false;\n        }\n        this.setLocalStorage({ correct: this.correct ? \"T\" : \"F\" });\n    }\n\n    isCorrectDrop(response) {\n        // Returns true if all premises in the response are in the correct category\n        // and all premises in the category are in the response\n        // used by renderFeedback\n        let correct = true;\n        let correctPlacements = 0;\n        for (let premise of Array.from(response.childNodes).filter(this.ivp)) {\n            if (premise.dataset.category != response.dataset.category) {\n                correct = false;\n            } else {\n                correctPlacements++;\n            }\n        }\n        let catCount = 0;\n        for (let premis of this.premiseArray) {\n            if (premis.dataset.category == response.dataset.category) {\n                catCount++;\n            }\n        }\n        return correct && correctPlacements == catCount;\n    }\n\n    isValidPremise(premise) {\n        if (this.premiseArray.includes(premise)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        let answer = JSON.stringify(this.answerState);\n        let data = {\n            event: \"dragNdrop\",\n            act: answer,\n            answer: answer,\n            min_height: Math.round(this.minheight),\n            drag_width: this.dragwidth,\n            drop_width: this.dropwidth,\n            div_id: this.divid,\n            correct: this.correct,\n            correctNum: this.correctNum,\n            dragNum: this.dragNum,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n    renderFeedback() {\n        for (let response of this.dropZoneDiv.childNodes) {\n            if (this.isCorrectDrop(response)) {\n                response.classList.remove(\"drop-incorrect\");\n            } else {\n                response.classList.add(\"drop-incorrect\");\n            }\n        }\n        if (!this.feedBackDiv) {\n            this.createFeedbackDiv();\n        }\n        this.feedBackDiv.style.visibility = \"visible\";\n        if (this.correct) {\n            var msgCorrect = $.i18n(\"msg_dragndrop_correct_answer\");\n            setTimeout(() => {\n                this.feedBackDiv.innerHTML = msgCorrect;\n            }, 10);\n            this.feedBackDiv.className = \"alert alert-info draggable-feedback\";\n\n        } else {\n            var msgIncorrect = $.i18n(\n                $.i18n(\"msg_dragndrop_incorrect_answer\"),\n                this.correctNum,\n                this.incorrectNum,\n                this.dragNum,\n                this.unansweredNum\n            );\n            // this.feedback comes from the author (a hint maybe)\n            setTimeout(() => {\n                this.feedBackDiv.innerHTML = msgIncorrect + \" \" + this.feedback;\n            }, 10);\n            this.feedBackDiv.className =\n                \"alert alert-danger draggable-feedback\";\n        }\n        this.queueMathJax(this.feedBackDiv);\n    }\n    /*===================================\n    === Checking/restoring from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        this.hasStoredDropzones = true;\n        this.minheight = data.min_height;\n        this.dragwidth = data.drag_width;\n        this.dropwidth = data.drop_width;\n        this.answerState = JSON.parse(data.answer);\n        this.correct = data.correct;\n        this.finishSettingUp();\n    }\n\n    checkLocalStorage() {\n        if (this.graderactive) {\n            return;\n        }\n        var storedObj;\n        this.hasStoredDropzones = false;\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                this.hasStoredDropzones = true;\n                try {\n                    storedObj = JSON.parse(ex);\n                    this.minheight = storedObj.min_height;\n                    this.dragwidth = storedObj.drag_width;\n                    this.dropwidth = storedObj.drop_width;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    this.hasStoredDropzones = false;\n                    this.finishSettingUp();\n                    return;\n                }\n                this.answerState = storedObj.answer;\n                if (this.useRunestoneServices) {\n                    // store answer in database\n                    let answer = JSON.stringify(this.answerState);\n                    this.logBookEvent({\n                        event: \"dragNdrop\",\n                        act: answer,\n                        answer: answer,\n                        min_height: Math.round(this.minheight),\n                        drag_width: this.dragwidth,\n                        drop_width: this.dropwidth,\n                        div_id: this.divid,\n                        correct: storedObj.correct,\n                    });\n                }\n            }\n        }\n        this.finishSettingUp();\n    }\n\n    setLocalStorage(data) {\n        if (data.answer === undefined) {\n            // If we didn't load from the server, we must generate the data\n            this.answerState = {};\n            for (let response of this.dropZoneDiv.childNodes) {\n                this.answerState[response.id] = [];\n                for (let premise of response.childNodes) {\n                    if (\n                        premise.nodeType !== Node.TEXT_NODE &&\n                        this.premiseArray.includes(premise)\n                    ) {\n                        this.answerState[response.id].push(premise.id);\n                    }\n                }\n            }\n        }\n        var timeStamp = new Date();\n        var correct = data.correct;\n        var storageObj = {\n            answer: this.answerState,\n            min_height: this.minheight,\n            timestamp: timeStamp,\n            correct: correct,\n            drag_width: this.dragwidth,\n            drop_width: this.dropwidth,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n\n    disableInteraction() {\n        this.resetButton.style.display = \"none\";\n        for (var i = 0; i < this.premiseArray.length; i++) {\n            // No more dragging\n            this.premiseArray[i].draggable = false;\n            this.premiseArray[i].style.cursor = \"initial\";\n        }\n    }\n}\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        // Generate a random index between 0 and i\n        const j = Math.floor(Math.random() * (i + 1));\n        // Swap elements at indices i and j\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\ndocument.addEventListener(\"runestone:login-complete\", function () {\n    const elements = document.querySelectorAll(\"[data-component=dragndrop]\");\n    elements.forEach((element) => {\n        const opts = {\n            orig: element,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if (!element.closest(\"[data-component=timedAssessment]\")) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                window.componentMap[element.id] = new DragNDrop(opts);\n            } catch (err) {\n                console.log(\n                    `Error rendering DragNDrop Problem ${element.id}: ${err}`\n                );\n            }\n        }\n    });\n});\n","\"use strict\";\n\nimport DragNDrop from \"./dragndrop.js\";\n\nexport default class TimedDragNDrop extends DragNDrop {\n    constructor(opts) {\n        super(opts);\n        this.finishSettingUp();\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        // Returns if the question was correct.    Used for timed assessment grading.\n        if (this.unansweredNum === this.dragPairArray.length) {\n            this.correct = null;\n        }\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    hideFeedback() {\n        $(this.feedBackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory[\"dragndrop\"] = function (opts) {\n    if (opts.timed) {\n        return new TimedDragNDrop(opts);\n    }\n    return new DragNDrop(opts);\n};\n"],"names":["$","i18n","load","en","msg_dragndrop_correct_answer","msg_dragndrop_incorrect_answer","msg_dragndrop_check_me","msg_dragndrop_reset","DragNDrop","constructor","opts","super","orig","this","origElem","divid","id","useRunestoneServices","random","hasAttribute","feedback","question","populate","createNewElements","caption","addCaption","Prism","highlightAllUnder","containerDiv","responseArray","premiseArray","element","querySelectorAll","replaceSpan","document","createElement","innerHTML","setAttribute","classList","add","tabIndex","dataset","category","getCategory","parent_id","push","setDragListeners","shuffleArray","getAttribute","replace","setDropListeners","querySelector","elem","appendChild","dragDropWrapDiv","style","display","draggableDiv","addDragDivListeners","dropZoneDiv","createButtons","checkServer","eBookConfig","practice_mode","finishSettingUp","self","ivp","isValidPremise","bind","queueMathJax","appendReplacementSpans","createFeedbackDiv","parentNode","replaceChild","hasStoredDropzones","minheight","offsetHeight","then","adjustDragDropWidths","minHeight","toString","width","dragwidth","dropwidth","addEventListener","ev","preventDefault","contains","isAnswered","remove","data","dataTransfer","getData","draggedSpan","getElementById","strangerDanger","e","buttonDiv","submitButton","textContent","onclick","checkCurrentAnswer","renderFeedback","logCurrentAnswer","resetButton","resetDraggables","undefined","answerState","Object","keys","length","placedPremises","response","premise","findPremise","indexOf","dgSpan","setData","target","key","selectedPremise","dpSpan","includes","dragzoneWidth","offsetWidth","totalWidth","dragzonePercent","Math","ceil","max","min","dropzonePercent","feedBackDiv","testSpan","visibility","getAllCategories","categories","childNodes","correct","unansweredNum","incorrectNum","correctNum","dragNum","Array","from","filter","node","nodeType","Node","TEXT_NODE","percent","console","log","setLocalStorage","isCorrectDrop","correctPlacements","catCount","premis","sid","answer","JSON","stringify","event","act","min_height","round","drag_width","drop_width","div_id","logBookEvent","msgCorrect","setTimeout","className","msgIncorrect","restoreAnswers","parse","checkLocalStorage","graderactive","storedObj","localStorage","ex","getItem","localStorageKey","err","message","removeItem","timeStamp","Date","storageObj","timestamp","setItem","disableInteraction","i","draggable","cursor","array","j","floor","forEach","closest","window","componentMap","TimedDragNDrop","renderTimedIcon","hideButtons","hide","component","timeIconDiv","timeIcon","attr","src","title","prepend","checkCorrectTimed","dragPairArray","hideFeedback","component_factory","timed"],"sourceRoot":""}