{"version":3,"file":"115.7e0a23b1119b8951.js","mappings":"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","sources":["webpack://WebComponents/./runestone/matching/js/timed_matching.js","webpack://WebComponents/./runestone/timed/js/timed.js","webpack://WebComponents/./runestone/shortanswer/js/shortanswer.js","webpack://WebComponents/./runestone/shortanswer/js/timed_shortanswer.js"],"sourcesContent":["import {MatchingProblem} from \"./matching.js\";\n\nexport default class TimedMatching extends MatchingProblem {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n        this.needsReinitialization = true;\n    }\n\n    hideButtons() {\n        this.gradeBtn.style.display = \"none\";\n        this.helpBtn.style.display = \"none\";\n    }\n\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components. The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        timeIcon.src = \"../_static/clock.png\";\n        timeIcon.style.width = \"15px\";\n        timeIcon.style.height = \"15px\";\n\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        component.prepend(timeIconDiv);\n    }\n\n    checkCorrectTimed() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n\n    hideFeedback() {\n        this.connList.style.display = \"none\";\n    }\n\n    reinitializeListeners() {\n        // maybe need to reinitialize the listeners\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory.matching = function (opts) {\n    if (opts.timed) {\n        return new TimedMatching(opts);\n    }\n    return new MatchingProblem(opts);\n};\n","/*==========================================\n========      Master timed.js     =========\n============================================\n===     This file contains the JS for    ===\n===     the Runestone timed component.   ===\n============================================\n===              Created By              ===\n===             Kirby Olson              ===\n===               6/11/15                ===\n==========================================*/\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport TimedFITB from \"../../fitb/js/timedfitb.js\";\nimport TimedMC from \"../../mchoice/js/timedmc.js\";\nimport TimedShortAnswer from \"../../shortanswer/js/timed_shortanswer.js\";\nimport ACFactory from \"../../activecode/js/acfactory.js\";\nimport TimedClickableArea from \"../../clickableArea/js/timedclickable\";\nimport TimedDragNDrop from \"../../dragndrop/js/timeddnd.js\";\nimport TimedParsons from \"../../parsons/js/timedparsons.js\";\nimport TimedMatching from \"../../matching/js/timed_matching.js\";\nimport SelectOne from \"../../selectquestion/js/selectone\";\nimport \"../css/timed.less\";\n\n// Timed constructor\nexport default class Timed extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig;\n        this.origElem = orig; // the entire element of this timed assessment and all of its children\n        this.divid = orig.id;\n        this.children = this.origElem.childNodes;\n        this.visited = [];\n        this.timeLimit = 0;\n        this.limitedTime = false;\n        if (!isNaN($(this.origElem).data(\"time\"))) {\n            this.timeLimit = parseInt($(this.origElem).data(\"time\"), 10) * 60; // time in seconds to complete the exam\n            this.startingTime = this.timeLimit;\n            this.limitedTime = true;\n        }\n        this.showFeedback = true;\n        if (this.origElem.hasAttribute(\"data-no-feedback\")) {\n            this.showFeedback = false;\n        }\n        // check for attribute data-show-feedback = yes\n        if (this.origElem.hasAttribute(\"data-show-feedback\")) {\n            if (this.origElem.getAttribute(\"data-show-feedback\") === \"yes\") {\n                this.showFeedback = true;\n            } else {\n                this.showFeedback = false;\n            }\n        }\n        this.showResults = false;\n        if (this.origElem.hasAttribute(\"data-result\")) {\n            this.showResults = false;\n        }\n        this.random = false;\n        if (this.origElem.hasAttribute(\"data-random\")) {\n            this.random = true;\n        }\n        this.showTimer = true;\n        if (this.origElem.hasAttribute(\"data-no-timer\")) {\n            this.showTimer = false;\n        }\n        if (this.origElem.hasAttribute(\"data-timer\")) {\n            if (\n                this.origElem.getAttribute(\"data-timer\") === \"yes\"\n            ) {\n                this.showTimer = true;\n            } else {\n                this.showTimer = false;\n            }\n        }\n        this.fullwidth = false;\n        if (this.origElem.hasAttribute(\"data-fullwidth\")) {\n            this.fullwidth = true;\n        }\n        this.nopause = false;\n        if (this.origElem.hasAttribute(\"data-no-pause\")) {\n            this.nopause = true;\n        }\n        if (this.origElem.hasAttribute(\"data-pause\")) {\n            if (this.origElem.getAttribute(\"data-pause\") === \"yes\") {\n                this.nopause = false;\n            } else {\n                this.nopause = true;\n            }\n        }\n        eBookConfig.enableScratchAC = false;\n        this.running = 0;\n        this.paused = 0;\n        this.done = 0;\n        this.taken = 0;\n        this.score = 0;\n        this.incorrect = 0;\n        this.correctStr = \"\";\n        this.incorrectStr = \"\";\n        this.skippedStr = \"\";\n        this.skipped = 0;\n        this.currentQuestionIndex = 0; // Which question is currently displaying on the page\n        this.renderedQuestionArray = []; // list of all problems\n        this.getNewChildren();\n        // One small step to eliminate students from doing view source\n        // this won't stop anyone with determination but may prevent casual peeking\n        if (!eBookConfig.enableDebug) {\n            document.body.oncontextmenu = function () {\n                return false;\n            };\n        }\n        this.checkAssessmentStatus().then(\n            function () {\n                this.renderTimedAssess();\n            }.bind(this)\n        );\n    }\n\n    getNewChildren() {\n        this.newChildren = [];\n        let runestoneChildren = this.origElem.querySelectorAll(\".runestone\");\n        for (var i = 0; i < runestoneChildren.length; i++) {\n            this.newChildren.push(runestoneChildren[i]);\n        }\n    }\n\n    async checkAssessmentStatus() {\n        // Has the user taken this exam?  Inquiring minds want to know\n        // If a user has not taken this exam then we want to make sure\n        // that if a question has been seen by the student before we do\n        // not populate previous answers.\n        let sendInfo = {\n            div_id: this.divid,\n            course_name: eBookConfig.course,\n        };\n        console.log(sendInfo);\n        if (eBookConfig.useRunestoneServices) {\n            let request = new Request(\n                `${eBookConfig.new_server_prefix}/assessment/tookTimedAssessment`,\n                {\n                    method: \"POST\",\n                    headers: this.jsonHeaders,\n                    body: JSON.stringify(sendInfo),\n                }\n            );\n            let response = await fetch(request);\n            let data = await response.json();\n            data = data.detail;\n            this.taken = data.tookAssessment;\n            this.assessmentTaken = this.taken;\n            if (!this.taken) {\n                localStorage.clear();\n            }\n            console.log(\"done with check status\");\n            return response;\n        } else {\n            this.taken = false;\n            this.assessmentTaken = false;\n            return Promise.resolve();\n        }\n    }\n\n    /*===============================\n    === Generating new Timed HTML ===\n    ===============================*/\n    async renderTimedAssess() {\n        console.log(\"rendering timed \");\n        // create renderedQuestionArray returns a promise\n        //\n        this.createRenderedQuestionArray();\n        if (this.random) {\n            this.randomizeRQA();\n        }\n        this.renderContainer();\n        this.renderTimer();\n        await this.renderControlButtons();\n        // If we decide to disable cut/copy/paste, uncomment the line below        \n        // this.disableCutCopyPaste();\n        this.containerDiv.appendChild(this.timedDiv); // This can't be appended in renderContainer because then it renders above the timer and control buttons.\n        if (this.renderedQuestionArray.length > 1) this.renderNavControls();\n        this.renderSubmitButton();\n        this.renderFeedbackContainer();\n        this.useRunestoneServices = eBookConfig.useRunestoneServices;\n        // Replace intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n        // check if already taken and if so show results\n        this.styleExamElements(); // rename to renderPossibleResults\n        this.checkServer(\"timedExam\", true);\n    }\n\n    disableCutCopyPaste() {\n        document.addEventListener(\"cut\", function (e) {\n            e.preventDefault();\n        });\n        document.addEventListener(\"copy\", function (e) {\n            e.preventDefault();\n        });\n        document.addEventListener(\"paste\", function (e) {\n            e.preventDefault();\n        });\n    }\n\n    renderContainer() {\n        this.containerDiv = document.createElement(\"div\"); // container for the entire Timed Component\n        if (this.fullwidth) {\n            // allow the container to fill the width - barb\n            $(this.containerDiv).attr({\n                style: \"max-width:none\",\n            });\n        }\n        this.containerDiv.classList.add(\"runestone-sphinx\");\n        this.containerDiv.id = this.divid;\n        this.timedDiv = document.createElement(\"div\"); // div that will hold the questions for the timed assessment\n        this.navDiv = document.createElement(\"div\"); // For navigation control\n        $(this.navDiv).attr({\n            style: \"text-align:center\",\n        });\n        this.flagDiv = document.createElement(\"div\"); // div that will hold the \"Flag Question\" button\n        $(this.flagDiv).attr({\n            style: \"text-align: center\",\n        });\n        this.switchContainer = document.createElement(\"div\");\n        this.switchContainer.classList.add(\"switchcontainer\");\n        this.switchDiv = document.createElement(\"div\"); // is replaced by the questions\n        this.timedDiv.appendChild(this.navDiv);\n        this.timedDiv.appendChild(this.flagDiv); // add flagDiv to timedDiv, which holds components for navigation and questions for timed assessment\n        this.timedDiv.appendChild(this.switchContainer);\n        this.switchContainer.appendChild(this.switchDiv);\n        $(this.timedDiv).attr({\n            id: \"timed_Test\",\n            style: \"display:none\",\n        });\n    }\n\n    renderTimer() {\n        this.wrapperDiv = document.createElement(\"div\");\n        this.timerContainer = document.createElement(\"P\");\n        this.wrapperDiv.id = this.divid + \"-startWrapper\";\n        this.timerContainer.id = this.divid + \"-output\";\n        this.wrapperDiv.appendChild(this.timerContainer);\n        this.showTime();\n    }\n\n    renderControlButtons() {\n        this.controlDiv = document.createElement(\"div\");\n        $(this.controlDiv).attr({\n            id: \"controls\",\n            style: \"text-align: center\",\n        });\n        this.startBtn = document.createElement(\"button\");\n        this.pauseBtn = document.createElement(\"button\");\n        $(this.startBtn).attr({\n            class: \"btn btn-success\",\n            id: \"start\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.startBtn.textContent = \"Start\";\n        this.startBtn.addEventListener(\n            \"click\",\n            async function () {\n                $(this.finishButton).hide(); // hide the finish button for now\n                $(this.flagButton).show();\n                let mess = document.createElement(\"p\");\n                mess.innerHTML =\n                    \"<strong>Warning: You will not be able to continue the exam if you close this tab, close the window, or navigate away from this page!</strong>  Make sure you click the Finish Exam button when you are done to submit your work!\";\n                this.controlDiv.appendChild(mess);\n                mess.classList.add(\"examwarning\");\n                await this.renderTimedQuestion();\n                this.startAssessment();\n            }.bind(this),\n            false\n        );\n        $(this.pauseBtn).attr({\n            class: \"btn btn-default\",\n            id: \"pause\",\n            disabled: \"true\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.pauseBtn.textContent = \"Pause\";\n        this.pauseBtn.addEventListener(\n            \"click\",\n            function () {\n                this.pauseAssessment();\n            }.bind(this),\n            false\n        );\n        if (!this.taken) {\n            this.controlDiv.appendChild(this.startBtn);\n        }\n        if (!this.nopause) {\n            this.controlDiv.appendChild(this.pauseBtn);\n        }\n        this.containerDiv.appendChild(this.wrapperDiv);\n        this.containerDiv.appendChild(this.controlDiv);\n    }\n\n    renderNavControls() {\n        // making \"Prev\" button\n        this.pagNavList = document.createElement(\"ul\");\n        $(this.pagNavList).addClass(\"pagination\");\n        this.leftContainer = document.createElement(\"li\");\n        this.leftNavButton = document.createElement(\"button\");\n        this.leftNavButton.innerHTML = \"&#8249; Prev\";\n        $(this.leftNavButton).attr(\"aria-label\", \"Previous\");\n        $(this.leftNavButton).attr(\"tabindex\", \"0\");\n        $(this.leftNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"prev\");\n        $(this.leftNavButton).css(\"cursor\", \"pointer\");\n        this.leftContainer.appendChild(this.leftNavButton);\n        this.pagNavList.appendChild(this.leftContainer);\n        // making \"Flag Question\" button\n        this.flaggingPlace = document.createElement(\"ul\");\n        $(this.flaggingPlace).addClass(\"pagination\");\n        this.flagContainer = document.createElement(\"li\");\n        this.flagButton = document.createElement(\"button\");\n        $(this.flagButton).addClass(\"flagBtn\");\n        this.flagButton.innerHTML = \"Flag Question\"; // name on button\n        $(this.flagButton).attr(\"aria-labelledby\", \"Flag\");\n        $(this.flagButton).attr(\"tabindex\", \"5\");\n        $(this.flagButton).attr(\"role\", \"button\");\n        $(this.flagButton).attr(\"id\", \"flag\");\n        $(this.flagButton).css(\"cursor\", \"pointer\");\n        this.flagContainer.appendChild(this.flagButton); // adding button to container\n        this.flaggingPlace.appendChild(this.flagContainer); // adding container to flaggingPlace\n        // making \"Next\" button\n        this.rightContainer = document.createElement(\"li\");\n        this.rightNavButton = document.createElement(\"button\");\n        $(this.rightNavButton).attr(\"aria-label\", \"Next\");\n        $(this.rightNavButton).attr(\"tabindex\", \"0\");\n        $(this.rightNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"next\");\n        this.rightNavButton.innerHTML = \"Next &#8250;\";\n        $(this.rightNavButton).css(\"cursor\", \"pointer\");\n        this.rightContainer.appendChild(this.rightNavButton);\n        this.pagNavList.appendChild(this.rightContainer);\n        this.ensureButtonSafety();\n        this.navDiv.appendChild(this.pagNavList);\n        this.flagDiv.appendChild(this.flaggingPlace); // adds flaggingPlace to the flagDiv\n        this.break = document.createElement(\"br\");\n        this.navDiv.appendChild(this.break);\n        // render the question number jump buttons\n        this.qNumList = document.createElement(\"ul\");\n        $(this.qNumList).attr(\"id\", \"pageNums\");\n        this.qNumWrapperList = document.createElement(\"ul\");\n        $(this.qNumWrapperList).addClass(\"pagination\");\n        var tmpLi, tmpA;\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            tmpLi = document.createElement(\"li\");\n            tmpA = document.createElement(\"a\");\n            tmpA.innerHTML = i + 1;\n            $(tmpA).css(\"cursor\", \"pointer\");\n            if (i === 0) {\n                $(tmpLi).addClass(\"active\");\n            }\n            tmpLi.appendChild(tmpA);\n            this.qNumWrapperList.appendChild(tmpLi);\n        }\n        this.qNumList.appendChild(this.qNumWrapperList);\n        this.navDiv.appendChild(this.qNumList);\n        this.navBtnListeners();\n        this.flagBtnListener(); // listens for click on flag button\n        $(this.flagButton).hide();\n    }\n\n    // when moving off of a question in an active exam:\n    // 1. show that the question has been seen, or mark it broken if it is in error.\n    // 2. check and log the current answer\n    async navigateAway() {\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"broken_exam\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"broken\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"exam_ended\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"toolate\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].question\n                .isAnswered\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"answered\");\n            await this.renderedQuestionArray[\n                this.currentQuestionIndex\n            ].question.checkCurrentAnswer();\n            if (!this.done) {\n                await this.renderedQuestionArray[\n                    this.currentQuestionIndex\n                ].question.logCurrentAnswer();\n            }\n        }\n    }\n    async handleNextPrev(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        var target = $(event.target).text();\n        if (target.match(/Next/)) {\n            // checks given text to match \"Next\"\n            if ($(this.rightContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex++;\n        } else if (target.match(/Prev/)) {\n            // checks given text to match \"Prev\"\n            if ($(this.leftContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex--;\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).hasClass(\"flagcolor\")\n        ) {\n            // checking for class\n            this.flagButton.innerHTML = \"Unflag Question\"; // changes text on button\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\"; // changes text on button\n        }\n    }\n\n    async handleFlag(event) {\n        // called when flag button is clicked\n        var target = $(event.target).text();\n        if (target.match(/Flag Question/)) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"flagcolor\"); // class will change color of question block\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).removeClass(\"flagcolor\"); // will restore current color of question block\n            this.flagButton.innerHTML = \"Flag Question\"; // also sets name back\n        }\n    }\n\n    async handleNumberedNav(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n\n        var target = $(event.target).text();\n        let oldIndex = this.currentQuestionIndex;\n        this.currentQuestionIndex = parseInt(target) - 1;\n        if (this.currentQuestionIndex > this.renderedQuestionArray.length) {\n            console.log(`Error: bad index for ${target}`);\n            this.currentQuestionIndex = oldIndex;\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\" // checking for flagcolor class\n            ).hasClass(\"flagcolor\")\n        ) {\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\";\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n    }\n\n    // set up events for navigation\n    navBtnListeners() {\n        // Next and Prev Listener\n        this.pagNavList.addEventListener(\n            \"click\",\n            this.handleNextPrev.bind(this),\n            false\n        );\n\n        // Numbered Listener\n        this.qNumList.addEventListener(\n            \"click\",\n            this.handleNumberedNav.bind(this),\n            false\n        );\n    }\n\n    // set up event for flag\n    flagBtnListener() {\n        this.flaggingPlace.addEventListener(\n            \"click\",\n            this.handleFlag.bind(this), // calls this to take action\n            false\n        );\n    }\n\n    renderSubmitButton() {\n        this.buttonContainer = document.createElement(\"div\");\n        $(this.buttonContainer).attr({\n            style: \"text-align:center\",\n        });\n        this.finishButton = document.createElement(\"button\");\n        $(this.finishButton).attr({\n            id: \"finish\",\n            class: \"btn btn-primary\",\n        });\n        this.finishButton.textContent = \"Finish Exam\";\n        this.finishButton.addEventListener(\n            \"click\",\n            async function () {\n                let skipped =\n                    this.renderedQuestionArray.filter((x) => !x.question.isAnswered).length;\n                let skipstr = skipped > 0 ? `You have skipped ${skipped} question(s).` : \"\";\n                if (\n                    window.confirm(\n                        `${skipstr} Clicking OK means you are ready to submit your answers and are finished with this assessment.`\n                    )\n                ) {\n                    await this.finishAssessment();\n                    $(this.flagButton).hide();\n                }\n            }.bind(this),\n            false\n        );\n        this.controlDiv.appendChild(this.finishButton);\n        $(this.finishButton).hide();\n        this.timedDiv.appendChild(this.buttonContainer);\n    }\n    ensureButtonSafety() {\n        if (this.currentQuestionIndex === 0) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.rightContainer).removeClass(\"disabled\");\n            }\n            $(this.leftContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex >=\n            this.renderedQuestionArray.length - 1\n        ) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.leftContainer).removeClass(\"disabled\");\n            }\n            $(this.rightContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex > 0 &&\n            this.currentQuestionIndex < this.renderedQuestionArray.length - 1\n        ) {\n            $(this.rightContainer).removeClass(\"disabled\");\n            $(this.leftContainer).removeClass(\"disabled\");\n        }\n    }\n    renderFeedbackContainer() {\n        this.scoreDiv = document.createElement(\"P\");\n        if (this.taken) {\n            this.scoreDiv.innerHTML = \"<h2>You have already taken this exam</h2>\";\n            this.scoreDiv.style.display = \"block\";\n        } else {\n            this.scoreDiv.id = this.divid + \"results\";\n            this.scoreDiv.style.display = \"none\";\n        }\n        this.containerDiv.appendChild(this.scoreDiv);\n    }\n\n    createRenderedQuestionArray() {\n        // this finds all the assess questions in this timed assessment\n        // We need to make a list of all the questions up front so we can set up navigation\n        // but we do not want to render the questions until the student has navigated\n        // Also adds them to this.renderedQuestionArray\n\n        // todo:  This needs to be updated to account for the runestone div wrapper.\n\n        // To accommodate the selectquestion type -- which is async! we need to wrap\n        // all of this in a promise, so that we don't continue to render the timed\n        // exam until all of the questions have been realized.\n        var opts;\n        for (var i = 0; i < this.newChildren.length; i++) {\n            var tmpChild = this.newChildren[i];\n            opts = {\n                state: \"prepared\",\n                orig: tmpChild,\n                question: {},\n                useRunestoneServices: eBookConfig.useRunestoneServices,\n                timed: true,\n                assessmentTaken: this.taken,\n                timedWrapper: this.divid,\n                initAttempts: 0,\n            };\n            if ($(tmpChild).children(\"[data-component]\").length > 0) {\n                tmpChild = $(tmpChild).children(\"[data-component]\")[0];\n                opts.orig = tmpChild;\n            }\n            if ($(tmpChild).is(\"[data-component]\")) {\n                this.renderedQuestionArray.push(opts);\n            }\n        }\n    }\n\n    randomizeRQA() {\n        var currentIndex = this.renderedQuestionArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.renderedQuestionArray[currentIndex];\n            this.renderedQuestionArray[currentIndex] =\n                this.renderedQuestionArray[randomIndex];\n            this.renderedQuestionArray[randomIndex] = temporaryValue;\n        }\n    }\n\n    async renderTimedQuestion() {\n        if (this.currentQuestionIndex >= this.renderedQuestionArray.length) {\n            // sometimes the user clicks in the event area for the qNumList\n            // But misses a number in that case the text is the concatenation\n            // of all the numbers in the list!\n            return;\n        }\n        // check the renderedQuestionArray to see if it has been rendered.\n        let opts = this.renderedQuestionArray[this.currentQuestionIndex];\n        let currentQuestion;\n        if (\n            opts.state === \"prepared\" ||\n            opts.state === \"forreview\" ||\n            (opts.state === \"broken_exam\" && opts.initAttempts < 3)\n        ) {\n            let tmpChild = opts.orig;\n            if ($(tmpChild).is(\"[data-component=selectquestion]\")) {\n                if (this.done && opts.state == \"prepared\") {\n                    this.renderedQuestionArray[\n                        this.currentQuestionIndex\n                    ].state = \"exam_ended\";\n                } else {\n                    // SelectOne is async and will replace itself in this array with\n                    // the actual selected question\n                    opts.rqa = this.renderedQuestionArray;\n                    let newq = new SelectOne(opts);\n                    this.renderedQuestionArray[this.currentQuestionIndex] = {\n                        question: newq,\n                    };\n                    try {\n                        await newq.initialize();\n                        if (opts.state == \"broken_exam\") {\n                            // remove the broken class from this question if we get here.\n                            $(\n                                `ul#pageNums > ul > li:eq(${this.currentQuestionIndex})`\n                            ).removeClass(\"broken\");\n                        }\n                    } catch (e) {\n                        opts.state = \"broken_exam\";\n                        this.renderedQuestionArray[this.currentQuestionIndex] =\n                            opts;\n                        console.log(\n                            `Error initializing question: Details ${e}`\n                        );\n                    }\n                }\n            } else if ($(tmpChild).is(\"[data-component]\")) {\n                let componentKind = $(tmpChild).data(\"component\");\n                this.renderedQuestionArray[this.currentQuestionIndex] = {\n                    question: window.component_factory[componentKind](opts),\n                    state: opts.state,\n                };\n            }\n        } else if (opts.state === \"broken_exam\") {\n            return;\n        }\n\n        currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        if (opts.state === \"forreview\") {\n            await currentQuestion.component_ready_promise;\n            await currentQuestion.checkCurrentAnswer();\n            currentQuestion.renderFeedback();\n            currentQuestion.disableInteraction();\n        }\n\n        if (!this.visited.includes(this.currentQuestionIndex)) {\n            this.visited.push(this.currentQuestionIndex);\n            if (\n                this.visited.length === this.renderedQuestionArray.length &&\n                !this.done\n            ) {\n                $(this.finishButton).show();\n            }\n        }\n\n        if (currentQuestion.containerDiv) {\n            if (\n                currentQuestion.containerDiv.classList.contains(\"runestone\") ==\n                false\n            ) {\n                currentQuestion.containerDiv.classList.add(\"runestone\");\n            }\n            $(this.switchDiv).replaceWith(currentQuestion.containerDiv);\n            this.switchDiv = currentQuestion.containerDiv;\n        }\n\n        // If the timed component has listeners, those might need to be reinitialized\n        // This flag will only be set in the elements that need it--it will be undefined in the others and thus evaluate to false\n        if (currentQuestion.needsReinitialization) {\n            currentQuestion.reinitializeListeners(this.taken);\n        }\n    }\n\n    /*=================================\n    === Timer and control Functions ===\n    =================================*/\n    handlePrevAssessment() {\n        $(this.startBtn).hide();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        $(this.finishButton).attr(\"disabled\", true);\n        this.running = 0;\n        this.done = 1;\n        // showFeedback sand showResults should both be true before we show the\n        // questions and their state of correctness.\n        if (this.showResults && this.showFeedback) {\n            $(this.timedDiv).show();\n            this.restoreAnsweredQuestions(); // do not log these results\n        } else {\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n    }\n    startAssessment() {\n        if (!this.taken) {\n            $(\"#relations-next\").hide(); // hide the next page button for now\n            $(\"#relations-prev\").hide(); // hide the previous button for now\n            $(this.startBtn).hide();\n            $(this.pauseBtn).attr(\"disabled\", false);\n            if (this.running === 0 && this.paused === 0) {\n                this.running = 1;\n                this.lastTime = Date.now();\n                $(this.timedDiv).show();\n                this.increment();\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"start\",\n                    div_id: this.divid,\n                });\n                var timeStamp = new Date();\n                var storageObj = {\n                    answer: [0, 0, this.renderedQuestionArray.length, 0],\n                    timestamp: timeStamp,\n                };\n                localStorage.setItem(\n                    this.localStorageKey(),\n                    JSON.stringify(storageObj)\n                );\n            }\n            $(window).on(\n                \"beforeunload\",\n                function (event) {\n                    // this actual value gets ignored by newer browsers\n                    if (this.done) {\n                        return;\n                    }\n                    event.preventDefault();\n                    event.returnValue =\n                        \"Are you sure you want to leave?  Your work will be lost! And you will need your instructor to reset the exam!\";\n                    return \"Are you sure you want to leave?  Your work will be lost!\";\n                }.bind(this)\n            );\n            window.addEventListener(\n                \"pagehide\",\n                async function (event) {\n                    if (!this.done) {\n                        await this.finishAssessment();\n                        console.log(\"Exam exited by leaving page\");\n                    }\n                }.bind(this)\n            );\n        } else {\n            this.handlePrevAssessment();\n        }\n    }\n    pauseAssessment() {\n        if (this.done === 0) {\n            if (this.running === 1) {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"pause\",\n                    div_id: this.divid,\n                });\n                this.running = 0;\n                this.paused = 1;\n                this.pauseBtn.innerHTML = \"Resume\";\n                $(this.timedDiv).hide();\n            } else {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"resume\",\n                    div_id: this.divid,\n                });\n                this.running = 1;\n                this.paused = 0;\n                this.increment();\n                this.pauseBtn.innerHTML = \"Pause\";\n                $(this.timedDiv).show();\n            }\n        }\n    }\n\n    showTime() {\n        if (this.showTimer) {\n            var mins = Math.floor(this.timeLimit / 60);\n            var secs = Math.floor(this.timeLimit) % 60;\n            var minsString = mins;\n            var secsString = secs;\n            if (mins < 10) {\n                minsString = \"0\" + mins;\n            }\n            if (secs < 10) {\n                secsString = \"0\" + secs;\n            }\n            var beginning = \"Time Remaining    \";\n            if (!this.limitedTime) {\n                beginning = \"Time Taken    \";\n            }\n            var timeString = beginning + minsString + \":\" + secsString;\n            if (this.done || this.taken) {\n                var minutes = Math.floor(this.timeTaken / 60);\n                var seconds = Math.floor(this.timeTaken % 60);\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                timeString = \"Time taken: \" + minutes + \":\" + seconds;\n            }\n            this.timerContainer.innerHTML = timeString;\n            var timeTips = document.getElementsByClassName(\"timeTip\");\n            for (var i = 0; i <= timeTips.length - 1; i++) {\n                timeTips[i].title = timeString;\n            }\n        } else {\n            $(this.timerContainer).hide();\n        }\n    }\n\n    increment() {\n        // if running (not paused) and not taken\n        if (this.running === 1 && !this.taken) {\n            setTimeout(\n                function () {\n                    // When a browser loses focus, setTimeout may not be called on the\n                    // schedule expected.  Browsers are free to save power by lengthening\n                    // the interval to some longer time.  So we cannot just subtract 1\n                    // from the timeLimit we need to measure the elapsed time from the last\n                    // call to the current call and subtract that number of seconds.\n                    let currentTime = Date.now();\n                    if (this.limitedTime) {\n                        // If there's a time limit, count down to 0\n                        this.timeLimit =\n                            this.timeLimit -\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    } else {\n                        // Else count up to keep track of how long it took to complete\n                        this.timeLimit =\n                            this.timeLimit +\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    }\n                    this.lastTime = currentTime;\n                    localStorage.setItem(\n                        eBookConfig.email + \":\" + this.divid + \"-time\",\n                        this.timeLimit\n                    );\n                    this.showTime();\n                    if (this.timeLimit > 0) {\n                        this.increment();\n                        // ran out of time\n                    } else {\n                        $(this.startBtn).attr({\n                            disabled: \"true\",\n                        });\n                        $(this.finishButton).attr({\n                            disabled: \"true\",\n                        });\n                        this.running = 0;\n                        this.done = 1;\n                        if (!this.taken) {\n                            this.taken = true;\n                            // embed the message in the page -- an alert actually prevents\n                            // the answers from being submitted and if a student closes their\n                            // laptop then the answers will not be submitted ever!  Even when they\n                            // reopen the laptop their session cookie is likely invalid.\n                            let mess = document.createElement(\"h1\");\n                            mess.innerHTML =\n                                \"Sorry but you ran out of time. Your answers are being submitted\";\n                            this.controlDiv.appendChild(mess);\n                            this.finishAssessment();\n                        }\n                    }\n                }.bind(this),\n                1000\n            );\n        }\n    }\n\n    styleExamElements() {\n        // Checks if this exam has been taken before\n        $(this.timerContainer).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(this.scoreDiv).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(\".tooltipTime\").css({\n            margin: \"0\",\n            padding: \"0\",\n            \"background-color\": \"black\",\n            color: \"white\",\n        });\n    }\n\n    async finishAssessment() {\n        $(\"#relations-next\").show(); // show the next page button for now\n        $(\"#relations-prev\").show(); // show the previous button for now\n        if (!this.showFeedback) {\n            // bje - changed from showResults\n            $(this.timedDiv).hide();\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n        this.findTimeTaken();\n        this.running = 0;\n        this.done = 1;\n        this.taken = 1;\n        await this.finalizeProblems();\n        this.checkScore();\n        this.displayScore();\n        this.storeScore();\n        this.logScore();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        this.finishButton.disabled = true;\n        $(window).off(\"beforeunload\");\n        // turn off the pagehide listener\n        let assignment_id = this.divid;\n        setTimeout(function () {\n            jQuery.ajax({\n                url: eBookConfig.app + \"/assignments/student_autograde\",\n                type: \"POST\",\n                dataType: \"JSON\",\n                data: {\n                    assignment_id: assignment_id,\n                    is_timed: true,\n                },\n                success: function (retdata) {\n                    if (retdata.success == false) {\n                        console.log(retdata.message);\n                    } else {\n                        console.log(\"Autograder completed\");\n                    }\n                },\n            });\n        }, 2000);\n    }\n\n    // finalizeProblems\n    // ----------------\n    async finalizeProblems() {\n        // Because we have submitted each question as we navigate we only need to\n        // send the final version of the question the student is on when they press the\n        // finish exam button.\n\n        var currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        await currentQuestion.checkCurrentAnswer();\n        await currentQuestion.logCurrentAnswer();\n        currentQuestion.renderFeedback();\n        currentQuestion.disableInteraction();\n\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            let currentQuestion = this.renderedQuestionArray[i];\n            // set the state to forreview so we know that feedback may be appropriate\n            if (currentQuestion.state !== \"broken_exam\") {\n                currentQuestion.state = \"forreview\";\n                currentQuestion.question.disableInteraction();\n            }\n        }\n\n        if (!this.showFeedback) {\n            this.hideTimedFeedback();\n        }\n    }\n\n    // restoreAnsweredQuestions\n    // ------------------------\n    restoreAnsweredQuestions() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i];\n            if (currentQuestion.state === \"prepared\") {\n                currentQuestion.state = \"forreview\";\n            }\n        }\n    }\n\n    // hideTimedFeedback\n    // -----------------\n    hideTimedFeedback() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i].question;\n            currentQuestion.hideFeedback();\n        }\n    }\n\n    // checkScore\n    // ----------\n    // This is a simple all or nothing score of one point per question for\n    // that includes our best guess if a question was skipped.\n    checkScore() {\n        this.correctStr = \"\";\n        this.skippedStr = \"\";\n        this.incorrectStr = \"\";\n        // Gets the score of each problem\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var correct =\n                this.renderedQuestionArray[i].question.checkCorrectTimed();\n            if (correct == \"T\") {\n                this.score++;\n                this.correctStr = this.correctStr + (i + 1) + \", \";\n            } else if (correct == \"F\") {\n                this.incorrect++;\n                this.incorrectStr = this.incorrectStr + (i + 1) + \", \";\n            } else if (correct === null || correct === \"I\") {\n                this.skipped++;\n                this.skippedStr = this.skippedStr + (i + 1) + \", \";\n            } else {\n                // ignored question; just do nothing\n            }\n        }\n        // remove extra comma and space at end if any\n        if (this.correctStr.length > 0)\n            this.correctStr = this.correctStr.substring(\n                0,\n                this.correctStr.length - 2\n            );\n        else this.correctStr = \"None\";\n        if (this.skippedStr.length > 0)\n            this.skippedStr = this.skippedStr.substring(\n                0,\n                this.skippedStr.length - 2\n            );\n        else this.skippedStr = \"None\";\n        if (this.incorrectStr.length > 0)\n            this.incorrectStr = this.incorrectStr.substring(\n                0,\n                this.incorrectStr.length - 2\n            );\n        else this.incorrectStr = \"None\";\n    }\n    findTimeTaken() {\n        if (this.limitedTime) {\n            this.timeTaken = this.startingTime - this.timeLimit;\n        } else {\n            this.timeTaken = this.timeLimit;\n        }\n    }\n    storeScore() {\n        var storage_arr = [];\n        storage_arr.push(\n            this.score,\n            this.correctStr,\n            this.incorrect,\n            this.incorrectStr,\n            this.skipped,\n            this.skippedStr,\n            this.timeTaken\n        );\n        var timeStamp = new Date();\n        var storageObj = JSON.stringify({\n            answer: storage_arr,\n            timestamp: timeStamp,\n        });\n        localStorage.setItem(this.localStorageKey(), storageObj);\n    }\n    // _`timed exam endpoint parameters`\n    //----------------------------------\n    logScore() {\n        this.logBookEvent({\n            event: \"timedExam\",\n            act: \"finish\",\n            div_id: this.divid,\n            correct: this.score,\n            incorrect: this.incorrect,\n            skipped: this.skipped,\n            time_taken: this.timeTaken,\n        });\n    }\n    shouldUseServer(data) {\n        // We override the RunestoneBase version because there is no \"correct\" attribute, and there are 2 possible localStorage schemas\n        // --we also want to default to local storage because it contains more information specifically which questions are correct, incorrect, and skipped.\n        var storageDate;\n        if (localStorage.length === 0) return true;\n        var storageObj = localStorage.getItem(this.localStorageKey());\n        if (storageObj === null) return true;\n        try {\n            var storedData = JSON.parse(storageObj).answer;\n            if (storedData.length == 4) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[1] &&\n                    data.skipped == storedData[2] &&\n                    data.timeTaken == storedData[3]\n                )\n                    return true;\n            } else if (storedData.length == 7) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[2] &&\n                    data.skipped == storedData[4] &&\n                    data.timeTaken == storedData[6]\n                ) {\n                    return false; // In this case, because local storage has more info, we want to use that if it's consistent\n                }\n            }\n            storageDate = new Date(JSON.parse(storageObj[1]).timestamp);\n        } catch (err) {\n            // error while parsing; likely due to bad value stored in storage\n            console.log(err.message);\n            localStorage.removeItem(this.localStorageKey());\n            return true;\n        }\n        var serverDate = new Date(data.timestamp);\n        if (serverDate < storageDate) {\n            this.logScore();\n            return false;\n        }\n        return true;\n    }\n\n    checkLocalStorage() {\n        var len = localStorage.length;\n        if (len > 0) {\n            if (localStorage.getItem(this.localStorageKey()) !== null) {\n                this.taken = 1;\n                this.restoreAnswers(\"\");\n            } else {\n                this.taken = 0;\n            }\n        } else {\n            this.taken = 0;\n        }\n    }\n    async restoreAnswers(data) {\n        this.taken = 1;\n        var tmpArr;\n        if (data === \"\") {\n            try {\n                tmpArr = JSON.parse(\n                    localStorage.getItem(this.localStorageKey())\n                ).answer;\n            } catch (err) {\n                // error while parsing; likely due to bad value stored in storage\n                console.log(err.message);\n                localStorage.removeItem(this.localStorageKey());\n                this.taken = 0;\n                return;\n            }\n        } else {\n            // Parse results from the database\n            tmpArr = [\n                parseInt(data.correct),\n                parseInt(data.incorrect),\n                parseInt(data.skipped),\n                parseInt(data.time_taken),\n                data.reset,\n            ];\n            this.setLocalStorage(tmpArr);\n        }\n        if (tmpArr.length == 1) {\n            // Exam was previously reset\n            this.reset = true;\n            this.taken = 0;\n            return;\n        }\n        if (tmpArr.length == 4) {\n            // Accidental Reload OR Database Entry\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 5) {\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 7) {\n            // Loaded Completed Exam\n            this.score = tmpArr[0];\n            this.correctStr = tmpArr[1];\n            this.incorrect = tmpArr[2];\n            this.incorrectStr = tmpArr[3];\n            this.skipped = tmpArr[4];\n            this.skippedStr = tmpArr[5];\n            this.timeTaken = tmpArr[6];\n        } else {\n            // Set localStorage in case of \"accidental\" reload\n            this.score = 0;\n            this.incorrect = 0;\n            this.skipped = this.renderedQuestionArray.length;\n            this.timeTaken = 0;\n        }\n        if (this.taken) {\n            if (this.skipped === this.renderedQuestionArray.length) {\n                this.showFeedback = false;\n            }\n            this.handlePrevAssessment();\n        }\n        await this.renderTimedQuestion();\n        this.displayScore();\n        this.showTime();\n    }\n    setLocalStorage(parsedData) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: parsedData,\n            timestamp: timeStamp,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n    displayScore() {\n        if (this.showResults) {\n            var scoreString = \"\";\n            var numQuestions;\n            var percentCorrect;\n            // if we have some information\n            if (\n                this.correctStr.length > 0 ||\n                this.incorrectStr.length > 0 ||\n                this.skippedStr.length > 0\n            ) {\n                scoreString = `Num Correct: ${this.score}. Questions: ${this.correctStr}<br>Num Wrong: ${this.incorrect}. Questions: ${this.incorrectStr}<br>Num Skipped: ${this.skipped}. Questions: ${this.skippedStr}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString +=\n                    \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            } else {\n                scoreString = `Num Correct: ${this.score}<br>Num Wrong: ${this.incorrect}<br>Num Skipped: ${this.skipped}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString +=\n                    \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            }\n            this.highlightNumberedList();\n        } else {\n            $(this.scoreDiv).html(\n                \"Thank you for taking the exam.  Your answers have been recorded.\"\n            );\n            this.scoreDiv.style.display = \"block\";\n        }\n    }\n    highlightNumberedList() {\n        var correctCount = this.correctStr;\n        var incorrectCount = this.incorrectStr;\n        var skippedCount = this.skippedStr;\n        correctCount = correctCount.replace(/ /g, \"\").split(\",\");\n        incorrectCount = incorrectCount.replace(/ /g, \"\").split(\",\");\n        skippedCount = skippedCount.replace(/ /g, \"\").split(\",\");\n        $(function () {\n            var numberedBtns = $(\"ul#pageNums > ul > li\");\n            if (numberedBtns.hasClass(\"answered\")) {\n                numberedBtns.removeClass(\"answered\");\n            }\n            for (var i = 0; i < correctCount.length; i++) {\n                var test = parseInt(correctCount[i]) - 1;\n                numberedBtns\n                    .eq(parseInt(correctCount[i]) - 1)\n                    .addClass(\"correctCount\");\n            }\n            for (var j = 0; j < incorrectCount.length; j++) {\n                numberedBtns\n                    .eq(parseInt(incorrectCount[j]) - 1)\n                    .addClass(\"incorrectCount\");\n            }\n            for (var k = 0; k < skippedCount.length; k++) {\n                numberedBtns\n                    .eq(parseInt(skippedCount[k]) - 1)\n                    .addClass(\"skippedCount\");\n            }\n        });\n    }\n}\n\n/*=======================================================\n=== Function that calls the constructors on page load ===\n=======================================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=timedAssessment]\").each(function (index) {\n        window.componentMap[this.id] = new Timed({\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        });\n    });\n});\n","/*==========================================\n=======    Master shortanswer.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone shortanswer component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/2/15                ===\n===              Brad Miller             ===\n===                2019                  ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./../css/shortanswer.css\";\n\nexport default class ShortAnswer extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        if (opts) {\n            var orig = opts.orig; // entire <p> element that will be replaced by new HTML\n            this.useRunestoneServices =\n                opts.useRunestoneServices || eBookConfig.useRunestoneServices;\n            this.origElem = orig;\n            this.divid = orig.id;\n            this.question = this.origElem.innerHTML;\n            this.optional = false;\n            this.attachURL = opts.attachURL;\n            if ($(this.origElem).is(\"[data-optional]\")) {\n                this.optional = true;\n            }\n            if ($(this.origElem).is(\"[data-mathjax]\")) {\n                this.mathjax = true;\n            }\n            this.mathjax = true;\n            if ($(this.origElem).is(\"[data-attachment]\")) {\n                this.attachment = true;\n            }\n            this.placeholder =\n                $(this.origElem).data(\"placeholder\") ||\n                \"Write your answer here\";\n            this.renderHTML();\n            this.caption = \"shortanswer\";\n            this.addCaption(\"runestone\");\n            this.checkServer(\"shortanswer\", true);\n            if (typeof Prism !== \"undefined\") {\n                Prism.highlightAllUnder(this.containerDiv);\n            }\n            if (this.attachment) {\n                this.getAttachmentName();\n            }\n        }\n    }\n\n    renderHTML() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newForm = document.createElement(\"form\");\n        this.newForm.id = this.divid + \"_journal\";\n        this.newForm.name = this.newForm.id;\n        this.newForm.action = \"\";\n        this.containerDiv.appendChild(this.newForm);\n        this.fieldSet = document.createElement(\"fieldset\");\n        this.newForm.appendChild(this.fieldSet);\n        this.firstLegendDiv = document.createElement(\"div\");\n        this.firstLegendDiv.innerHTML = this.question;\n        $(this.firstLegendDiv).addClass(\"journal-question\");\n        this.fieldSet.appendChild(this.firstLegendDiv);\n        this.jInputDiv = document.createElement(\"div\");\n        this.jInputDiv.id = this.divid + \"_journal_input\";\n        this.fieldSet.appendChild(this.jInputDiv);\n        this.jOptionsDiv = document.createElement(\"div\");\n        $(this.jOptionsDiv).addClass(\"journal-options\");\n        this.jInputDiv.appendChild(this.jOptionsDiv);\n        this.jTextArea = document.createElement(\"textarea\");\n        let self = this;\n        this.jTextArea.onchange = function () {\n            self.isAnswered = true;\n        };\n        this.jTextArea.id = this.divid + \"_solution\";\n        $(this.jTextArea).attr(\"aria-label\", \"textarea\");\n        this.jTextArea.placeholder = this.placeholder;\n        $(this.jTextArea).css(\"display:inline, width:530px\");\n        $(this.jTextArea).addClass(\"form-control\");\n        this.jTextArea.rows = 4;\n        this.jTextArea.cols = 50;\n        this.jOptionsDiv.appendChild(this.jTextArea);\n        this.jTextArea.onchange = function () {\n            this.isAnswered = true;\n            if (this.isTimed) {\n                this.feedbackDiv.innerHTML = \"Your answer is automatically saved.\";\n            } else {\n                this.feedbackDiv.innerHTML = \"Your answer has not been saved yet!\";\n            }\n            $(this.feedbackDiv).removeClass(\"alert-success\");\n            $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        }.bind(this);\n        this.fieldSet.appendChild(document.createElement(\"br\"));\n        if (this.mathjax) {\n            this.renderedAnswer = document.createElement(\"div\");\n            $(this.renderedAnswer).addClass(\"latexoutput\");\n            this.fieldSet.appendChild(this.renderedAnswer);\n        }\n        this.buttonDiv = document.createElement(\"div\");\n        this.fieldSet.appendChild(this.buttonDiv);\n        this.submitButton = document.createElement(\"button\");\n        $(this.submitButton).addClass(\"btn btn-success\");\n        this.submitButton.type = \"button\";\n        this.submitButton.textContent = \"Save\";\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.randomSpan = document.createElement(\"span\");\n        this.randomSpan.innerHTML = \"Instructor's Feedback\";\n        this.fieldSet.appendChild(this.randomSpan);\n        this.otherOptionsDiv = document.createElement(\"div\");\n        $(this.otherOptionsDiv).css(\"padding-left:20px\");\n        $(this.otherOptionsDiv).addClass(\"journal-options\");\n        this.fieldSet.appendChild(this.otherOptionsDiv);\n        // add a feedback div to give user feedback\n        this.feedbackDiv = document.createElement(\"div\");\n        //$(this.feedbackDiv).addClass(\"bg-info form-control\");\n        //$(this.feedbackDiv).css(\"width:530px, background-color:#eee, font-style:italic\");\n        $(this.feedbackDiv).css(\"width:530px, font-style:italic\");\n        this.feedbackDiv.id = this.divid + \"_feedback\";\n        this.feedbackDiv.innerHTML = \"You have not answered this question yet.\";\n        $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        //this.otherOptionsDiv.appendChild(this.feedbackDiv);\n        this.fieldSet.appendChild(this.feedbackDiv);\n        if (this.attachment) {\n            let attachDiv = document.createElement(\"div\")\n            this.attachDiv = attachDiv;\n            if (this.graderactive) {\n                // If in grading mode make a button to create a popup with the image\n                let viewButton = document.createElement(\"button\")\n                viewButton.type = \"button\"\n                viewButton.innerHTML = \"View Attachment\"\n                viewButton.onclick = this.viewFile.bind(this);\n                attachDiv.appendChild(viewButton);\n            } else {\n                // Otherwise make a button for the student to select a file to upload.\n                this.fileUpload = document.createElement(\"input\")\n                this.fileUpload.type = \"file\";\n                this.fileUpload.id = `${this.divid}_fileme`;\n                attachDiv.appendChild(this.fileUpload);\n            }\n            this.containerDiv.appendChild(attachDiv);\n        }\n        //this.fieldSet.appendChild(document.createElement(\"br\"));\n        $(this.origElem).replaceWith(this.containerDiv);\n        // This is a stopgap measure for when MathJax is not loaded at all.  There is another\n        // more difficult case that when MathJax is loaded asynchronously we will get here\n        // before MathJax is loaded.  In that case we will need to implement something\n        // like `the solution described here <https://stackoverflow.com/questions/3014018/how-to-detect-when-mathjax-is-fully-loaded>`_\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(this.containerDiv);\n        }\n    }\n\n    renderMath(value) {\n        if (this.mathjax) {\n            value = value.replace(/\\$\\$(.*?)\\$\\$/g, \"\\\\[ $1 \\\\]\");\n            value = value.replace(/\\$(.*?)\\$/g, \"\\\\( $1 \\\\)\");\n            value = value.replace(/\\n/g, \"<br/>\"); // add line breaks\n            $(this.renderedAnswer).html(value);\n            this.queueMathJax(this.renderedAnswer);\n        }\n    }\n\n    async checkCurrentAnswer() {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n    }\n\n    async logCurrentAnswer(sid) {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"shortanswer\",\n            act: value,\n            answer: value,\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n        if (this.attachment) {\n            await this.uploadFile();\n        }\n    }\n\n    renderFeedback() {\n        this.feedbackDiv.innerHTML = \"Your answer has been saved.\";\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n    setLocalStorage(data) {\n        if (!this.graderactive) {\n            let key = this.localStorageKey();\n            localStorage.setItem(key, JSON.stringify(data));\n        }\n    }\n    checkLocalStorage() {\n        // Repopulates the short answer text\n        // which was stored into local storage.\n        var answer = \"\";\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    var storedData = JSON.parse(ex);\n                    answer = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                let solution = $(\"#\" + this.divid + \"_solution\");\n                solution.text(answer);\n                this.renderMath(answer);\n                this.feedbackDiv.innerHTML =\n                    \"Your current saved answer is shown above.\";\n                $(this.feedbackDiv).removeClass(\"alert-danger\");\n                $(this.feedbackDiv).addClass(\"alert alert-success\");\n            }\n        }\n    }\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        this.answer = data.answer;\n        this.jTextArea.value = this.answer;\n        this.renderMath(this.answer);\n\n        let p = document.createElement(\"p\");\n        this.jInputDiv.appendChild(p);\n        var tsString = \"\";\n        if (data.timestamp) {\n            tsString = new Date(data.timestamp).toLocaleString();\n        } else {\n            tsString = \"\";\n        }\n        $(p).text(tsString);\n        if (data.last_answer) {\n            this.current_answer = \"ontime\";\n            let toggle_answer_button = document.createElement(\"button\");\n            toggle_answer_button.type = \"button\";\n            $(toggle_answer_button).text(\"Show Late Answer\");\n            $(toggle_answer_button).addClass(\"btn btn-warning\");\n            $(toggle_answer_button).css(\"margin-left\", \"5px\");\n\n            $(toggle_answer_button).click(\n                function () {\n                    var display_timestamp, button_text;\n                    if (this.current_answer === \"ontime\") {\n                        this.jTextArea.value = data.last_answer;\n                        this.answer = data.last_answer;\n                        display_timestamp = new Date(\n                            data.last_timestamp\n                        ).toLocaleString();\n                        button_text = \"Show on-Time Answer\";\n                        this.current_answer = \"late\";\n                    } else {\n                        this.jTextArea.value = data.answer;\n                        this.answer = data.answer;\n                        display_timestamp = tsString;\n                        button_text = \"Show Late Answer\";\n                        this.current_answer = \"ontime\";\n                    }\n                    this.renderMath(this.answer);\n                    $(p).text(`Submitted: ${display_timestamp}`);\n                    $(toggle_answer_button).text(button_text);\n                }.bind(this)\n            );\n\n            this.buttonDiv.appendChild(toggle_answer_button);\n        }\n        let feedbackStr = \"Your current saved answer is shown above.\";\n        if (typeof data.score !== \"undefined\") {\n            feedbackStr = `Score: ${data.score}`;\n        }\n        if (data.comment) {\n            feedbackStr += ` -- ${data.comment}`;\n        }\n        this.feedbackDiv.innerHTML = feedbackStr;\n\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n\n    disableInteraction() {\n        this.jTextArea.disabled = true;\n    }\n\n    async getAttachmentName() {\n        // Get the attachment name from the /ns/assessment/has_attachment endpoint\n        let requestUrl = `/ns/assessment/has_attachment/${this.divid}`;\n        if (this.sid) {\n            requestUrl += `?sid=${this.sid}`;\n        }\n        const response = await fetch(requestUrl);\n        if (!response.ok) {\n            console.error(\"Error fetching attachment name:\", response.statusText);\n            return null;\n        }\n        const obj = await response.json();\n            if (obj.detail.hasAttachment) {\n            // Return the S3 key for the attachment\n            let filename = obj.detail.hasAttachment;\n            // filename is everthing after the last slash\n            filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n            let fmess = document.createElement(\"span\");\n            fmess.innerHTML = `Attachment: ${filename}`;\n            this.attachDiv.appendChild(fmess);\n        }\n    }\n\n    async uploadFile() {\n        const files = this.fileUpload.files\n        // get the suffix from the file name\n        const fileName = files[0].name;\n        const suffix = fileName.split('.').pop();\n        // if the suffix is not in the list of allowed suffixes, return\n        if (!['jpg', 'jpeg', 'png', 'gif', 'pdf'].includes(suffix)) {\n            alert(\"File type not allowed. Please upload a jpg, jpeg, png, gif, or pdf file.\");\n            return;\n        }\n        // if the file size is greater than 5MB, return\n        if (files[0].size > 5 * 1024 * 1024) {\n            alert(\"File size exceeds 5MB limit. Please upload a smaller file.\");\n            return;\n        }\n        const data = new FormData()\n        if (this.fileUpload.files.length > 0) {\n            data.append('file', files[0])\n            fetch(`/ns/logger/upload/${this.divid}`, {\n                method: 'POST',\n                body: data\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                })\n                .catch(error => {\n                    console.error(error)\n                })\n        }\n    }\n\n    viewFile() {\n        // Get the URL from the S3 API -- saved when we display in grader mode\n        if (this.attachURL) {\n            //window.open(this.attachURL, \"_blank\");\n            //<embed src=\"example.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n            //switch to \n            const image_window = window.open(\"\", \"_blank\")\n            if (this.attachURL.indexOf('.pdf?') !== -1) {\n                const embed = image_window.document.createElement(\"object\");\n                embed.setAttribute(\"data\", this.attachURL);\n                embed.setAttribute(\"type\", \"application/pdf\");\n                embed.setAttribute(\"width\", \"800px\");\n                embed.setAttribute(\"height\", \"1040px\");\n                image_window.document.body.appendChild(embed);\n                let alt = image_window.document.createElement(\"a\");\n                alt.setAttribute(\"href\", this.attachURL);\n                alt.innerText = \"Download PDF\";\n                embed.appendChild(alt);\n            }\n            else {\n                const img = image_window.document.createElement(\"img\");\n                img.setAttribute(\"src\", this.attachURL);\n                img.setAttribute(\"style\", \"width:100%; height:auto;\");\n                image_window.document.body.appendChild(img);\n            }\n        } else {\n            alert(\"No attachment for this student.\")\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=shortanswer]\").each(function () {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                window.componentMap[this.id] = new ShortAnswer({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ShortAnswer Problem ${this.id}\n                Details: ${err}`);\n            }\n        }\n    });\n});\n","import ShortAnswer from \"./shortanswer.js\";\n\nexport default class TimedShortAnswer extends ShortAnswer {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.isTimed = true;\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        return \"I\"; // we ignore this in the grading\n    }\n    hideFeedback() {\n        $(this.feedbackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.shortanswer = function (opts) {\n    if (opts.timed) {\n        return new TimedShortAnswer(opts);\n    }\n    return new ShortAnswer(opts);\n};\n"],"names":["TimedMatching","MatchingProblem","constructor","opts","super","this","renderTimedIcon","containerDiv","hideButtons","needsReinitialization","gradeBtn","style","display","helpBtn","component","timeIconDiv","document","createElement","timeIcon","src","width","height","className","title","appendChild","prepend","checkCorrectTimed","correct","hideFeedback","connList","reinitializeListeners","window","component_factory","matching","timed","Timed","orig","origElem","divid","id","children","childNodes","visited","timeLimit","limitedTime","isNaN","$","data","parseInt","startingTime","showFeedback","hasAttribute","getAttribute","showResults","random","showTimer","fullwidth","nopause","eBookConfig","enableScratchAC","running","paused","done","taken","score","incorrect","correctStr","incorrectStr","skippedStr","skipped","currentQuestionIndex","renderedQuestionArray","getNewChildren","enableDebug","body","oncontextmenu","checkAssessmentStatus","then","renderTimedAssess","bind","newChildren","runestoneChildren","querySelectorAll","i","length","push","sendInfo","div_id","course_name","course","console","log","useRunestoneServices","request","Request","new_server_prefix","method","headers","jsonHeaders","JSON","stringify","response","fetch","json","detail","tookAssessment","assessmentTaken","localStorage","clear","Promise","resolve","createRenderedQuestionArray","randomizeRQA","renderContainer","renderTimer","renderControlButtons","timedDiv","renderNavControls","renderSubmitButton","renderFeedbackContainer","replaceWith","styleExamElements","checkServer","disableCutCopyPaste","addEventListener","e","preventDefault","attr","classList","add","navDiv","flagDiv","switchContainer","switchDiv","wrapperDiv","timerContainer","showTime","controlDiv","startBtn","pauseBtn","class","tabindex","role","textContent","async","finishButton","hide","flagButton","show","mess","innerHTML","renderTimedQuestion","startAssessment","disabled","pauseAssessment","tmpLi","tmpA","pagNavList","addClass","leftContainer","leftNavButton","rightNavButton","css","flaggingPlace","flagContainer","rightContainer","ensureButtonSafety","break","qNumList","qNumWrapperList","navBtnListeners","flagBtnListener","navigateAway","state","question","isAnswered","checkCurrentAnswer","logCurrentAnswer","handleNextPrev","event","target","text","match","hasClass","j","removeClass","handleFlag","handleNumberedNav","oldIndex","buttonContainer","filter","x","skipstr","confirm","finishAssessment","scoreDiv","tmpChild","timedWrapper","initAttempts","is","temporaryValue","randomIndex","currentIndex","Math","floor","currentQuestion","rqa","newq","initialize","componentKind","component_ready_promise","renderFeedback","disableInteraction","includes","contains","handlePrevAssessment","restoreAnsweredQuestions","lastTime","Date","now","increment","logBookEvent","act","timeStamp","storageObj","answer","timestamp","setItem","localStorageKey","on","returnValue","mins","secs","minsString","secsString","beginning","timeString","minutes","timeTaken","seconds","timeTips","getElementsByClassName","setTimeout","currentTime","email","margin","border","padding","color","findTimeTaken","finalizeProblems","checkScore","displayScore","storeScore","logScore","off","assignment_id","jQuery","ajax","url","app","type","dataType","is_timed","success","retdata","message","hideTimedFeedback","substring","storage_arr","time_taken","shouldUseServer","storageDate","getItem","storedData","parse","err","removeItem","checkLocalStorage","restoreAnswers","tmpArr","reset","setLocalStorage","parsedData","numQuestions","scoreString","toFixed","html","highlightNumberedList","correctCount","incorrectCount","skippedCount","replace","split","numberedBtns","eq","k","each","index","componentMap","ShortAnswer","optional","attachURL","mathjax","attachment","placeholder","renderHTML","caption","addCaption","Prism","highlightAllUnder","getAttachmentName","newForm","name","action","fieldSet","firstLegendDiv","jInputDiv","jOptionsDiv","jTextArea","self","onchange","rows","cols","isTimed","feedbackDiv","renderedAnswer","buttonDiv","submitButton","onclick","randomSpan","otherOptionsDiv","attachDiv","graderactive","viewButton","viewFile","fileUpload","MathJax","queueMathJax","renderMath","value","getElementById","val","sid","uploadFile","key","ex","p","tsString","toLocaleString","last_answer","current_answer","toggle_answer_button","click","display_timestamp","button_text","last_timestamp","feedbackStr","comment","requestUrl","ok","error","statusText","obj","hasAttachment","filename","lastIndexOf","fmess","files","suffix","pop","alert","size","FormData","append","catch","image_window","open","indexOf","embed","setAttribute","alt","innerText","img","closest","TimedShortAnswer","shortanswer"],"sourceRoot":""}