// Numbas version: exam_results_page_options
{"name": "Chapter 10 Exercises", "metadata": {"description": "<p>End of chapter exercises for <a href=\"http://engineeringstatics.org\"><em>Engineering Statics: Open and Interactive</em></a>&nbsp;</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "duration": 0, "percentPass": 0, "showQuestionGroupNames": true, "shuffleQuestionGroups": false, "showstudentname": true, "question_groups": [{"name": "Common Shapes", "pickingStrategy": "all-ordered", "pickQuestions": 1, "questionNames": ["Basic Shapes from the MOI Table", "Rectangles", "", "Rectangles and triangles", "Semi and quarter circles"], "variable_overrides": [[], [], [], [], []], "questions": [{"name": "Moment of Inertia: Basic Shapes from the MOI Table", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/moi.png", "/srv/numbas/media/question-resources/moi.png"], ["question-resources/PastedGraphic-1.png", "/srv/numbas/media/question-resources/PastedGraphic-1.png"], ["question-resources/basicShapes.ggb", "/srv/numbas/media/question-resources/basicShapes.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["area moment of inertia", "Area moment of inertia", "Mechanics", "mechanics", "Statics", "statics", "table of properties"], "metadata": {"description": "<p>Use a table of properties to find the Area Moment of inertia for simple shapes: rectangle, triangle, circle, semicircle, and quarter circle.</p>\n<p>&nbsp;The parallel axis theorem is not required for any of these shapes. &nbsp;One situation requires subtracting a triangle from a rectangle however.</p>\n<p>Distinguish between centroidal and non-centroidal moments of inertia.</p>", "licence": "Creative Commons Attribution-ShareAlike 4.0 International"}, "statement": "<p>{geogebra_applet('ndkfbkp9',['b': b, 'h': h, 'i': index, 'Z': Z])}</p>\n<p>&nbsp;A {shape} ({dimensions})&nbsp;and its centroid are&nbsp;shown.</p>", "advice": "<p></p>\n<p>Use the information in the table below.</p>\n<p><img src=\"resources/question-resources/moi.png\" width=\"364\" height=\"1017\"/></p>", "rulesets": {}, "variables": {"b": {"name": "b", "group": "inputs", "definition": "random(-8..8 except 0)", "description": "<p>horizontal dimension of rectangles and triangles</p>", "templateType": "anything"}, "h": {"name": "h", "group": "inputs", "definition": "random(-8..8 except 0)", "description": "<p>vertical dimension of rectangles and triangles</p>", "templateType": "anything"}, "r": {"name": "r", "group": "inputs", "definition": "b", "description": "<p>radius of circle or semicircles.</p>", "templateType": "anything"}, "index": {"name": "index", "group": "inputs", "definition": "random(1..14)", "description": "<p>selects the shape -- see resources for diagram</p>", "templateType": "anything"}, "shape": {"name": "shape", "group": "Description", "definition": "if(index=1,'circle',if(index<=4,'rectangle',if(index <=10,'triangle',if(index<=12,'semicircle','quarter-circle'))))", "description": "", "templateType": "anything"}, "dimensions": {"name": "dimensions", "group": "Description", "definition": "if(isCircular,\n  \"$r = \\\\var{abs(b units) }$\",\n  \"$\\\\var{abs(b units)} \\\\times \\\\var{abs(h units)}$\"\n) ", "description": "", "templateType": "anything"}, "isCircular": {"name": "isCircular", "group": "Description", "definition": "index = 1 or  index > 10", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "inputs", "definition": "qty(random(['in', 'ft', 'mm', 'cm','m']))", "description": "", "templateType": "anything"}, "Ix": {"name": "Ix", "group": "Solution", "definition": "siground([ 0,pir4/4, \n  bh3/3, bh3/12, bh3/3, \n  bh3/12, bh3/12, bh3/36, bh3/36, bh3/12,bh3/36,\n  pir4/8,pir4/8,\n  pir4/16,pir4/16][index],4)", "description": "<p>0 is placeholder for zero-indexed array.</p>", "templateType": "anything"}, "PIR4": {"name": "PIR4", "group": "Solution", "definition": "pi r^4 * units * units * units * units", "description": "", "templateType": "anything"}, "bh3": {"name": "bh3", "group": "Solution", "definition": "abs(b h^3) * units * units * units * units", "description": "", "templateType": "anything"}, "hb3": {"name": "hb3", "group": "Solution", "definition": "abs(h b^3) * units * units * units * units", "description": "", "templateType": "anything"}, "Iy": {"name": "Iy", "group": "Solution", "definition": "siground([0, pir4/4,\n  hb3/3, hb3/3, hb3/12,\n  hb3/4, hb3/12, hb3/4, hb3/12, hb3/36, hb3/36,\n  pir4/8,pir4/8,\n  pir4/16,pir4/16][index],4)", "description": "", "templateType": "anything"}, "centroidalaxis": {"name": "centroidalaxis", "group": "Solution", "definition": "[[],both,neither, x, y, neither, neither, x, x, y, both, x, y, neither, neither][index]\n  ", "description": "<p>marking matrix for centroidal axis [x,y,both,neither]&nbsp;</p>", "templateType": "anything"}, "x": {"name": "x", "group": "Solution", "definition": "[10,0,0,0]", "description": "", "templateType": "anything"}, "y": {"name": "y", "group": "Solution", "definition": "[0,10,0,0]", "description": "", "templateType": "anything"}, "both": {"name": "both", "group": "Solution", "definition": "[0,0,10,0]", "description": "", "templateType": "anything"}, "neither": {"name": "neither", "group": "Solution", "definition": "[0,0,0,10]", "description": "", "templateType": "anything"}, "applet": {"name": "applet", "group": "Ungrouped variables", "definition": "\"applet()\"", "description": "<p>disabled calling the javascript applet</p>", "templateType": "anything"}, "Z": {"name": "Z", "group": "inputs", "definition": "8", "description": "<p>ZOOM</p>", "templateType": "anything"}}, "variablesTest": {"condition": "abs(b)> 2 and abs(h) > 2", "maxRuns": 100}, "ungrouped_variables": ["applet"], "variable_groups": [{"name": "inputs", "variables": ["h", "r", "b", "index", "units", "Z"]}, {"name": "Description", "variables": ["shape", "dimensions", "isCircular"]}, {"name": "Solution", "variables": ["Ix", "PIR4", "bh3", "hb3", "Iy", "centroidalaxis", "x", "y", "both", "neither"]}], "functions": {"NotUsed": {"parameters": [], "type": "ggbapplet", "language": "javascript", "definition": "// Create the worksheet. \n// This function returns an object with a container `element` and a `promise` resolving to a GeoGebra applet.\nvar params = {\n  filename: 'resources/question-resources/basicShapes.ggb',\n  width: 250,\n  height: 250\n}\n\nvar result = Numbas.extensions.geogebra.createGeogebraApplet(params);\n\n// Once the applet has loaded, run some commands to manipulate the worksheet.\nresult.promise.then(function(d) {\n  var app = d.app;\n  question.applet = d;\n  \n   function setGGBPoint(g_name, n_name = g_name) {\n    // moves point in GGB to location of Numbas Vector Variable\n    // g_name = geogebra point, n_name = numbas vector\n    var pt = question.scope.evaluate(n_name).value\n    app.setFixed(g_name,false,false);\n    app.setCoords(g_name, pt[0], pt[1]);\n    app.setFixed(g_name,true,true);\n  }\n  \n   function setGGBNumber(g_name, n_name = g_name) {\n    // Sets number in GGB to a Numbas Variable\n    var n = question.scope.evaluate(n_name).value;\n    app.setValue(g_name,n);\n  }\n  \n  app.setValue(\"Z\",5);  //zoom\n  setGGBNumber(\"b\");\n  setGGBNumber(\"h\");\n  setGGBNumber(\"i\",\"index\")\n\n});\n\n// This function returns the result of `createGeogebraApplet` as an object \n// with the JME data type 'ggbapplet', which can be substituted into the question's content.\nreturn new Numbas.jme.types.ggbapplet(result);"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the moment of inertia of the {shape} with respect to the $x$ and $y$ axis.</p>\n<p>$I_x$ = &nbsp; [[0]]&nbsp;$I_y$ =&nbsp;[[1]]</p>\n<p>Are either&nbsp;of these values <em>centroidal</em> moments of inertia?</p>\n<p>[[2]]</p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "Ix", "marks": "20", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix", "right": "0.2", "close": "1.0", "C1": "80", "C2": "80", "C3": "60"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "Iy", "marks": "20", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy", "right": "0.2", "close": "1.0", "C1": "80", "C2": "80", "C3": "60"}}, {"type": "1_n_2", "useCustomName": true, "customName": "centroidal", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "minMarks": 0, "maxMarks": 0, "shuffleChoices": false, "displayType": "radiogroup", "displayColumns": "1", "showCellAnswerState": true, "choices": ["$I_x$", "$I_y$", "Both", "Neither"], "matrix": "centroidalaxis"}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Moment of Inertia: rectangles", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Area moment of inertia", "area moment of inertia", "Mechanics", "mechanics", "moment of inertia", "second moment of area", "statics", "Statics"], "metadata": {"description": "<p>Find moment of inertia wrt the <em>x</em>- and <em>y</em>- axes for a shape made up of two rectangles.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('b3fxtwx6',[['A',A],['B',B]])}</p>\n<p>Use the formula below for the moment of inertia of a rectangle about an axis passing through its base to find the moment of inertia of the composite shape about both the <em>x</em>- and <em>y</em>- axes. &nbsp;Grid units are [{unit}].&nbsp;\\[I = \\dfrac{b h^3}{3}\\]</p>", "advice": "<p>To find $I_x$ consider the shape to be made of&nbsp;a&nbsp;&nbsp;$ (\\var{b_1}&nbsp;\\times&nbsp;\\var{h_1})$ rectangle and a&nbsp;$(\\var{b_2}&nbsp;\\times&nbsp;\\var{h_2})$&nbsp;{if(removed_x,'removed','')} rectangle.</p>\n<p>$&nbsp;\\quad I_x = \\dfrac{&nbsp;(\\var{b_1}) (\\var{h_1})^3}{3} \\, &nbsp;\\var{if(removed_x, '&ndash;' , '+')} \\,\\dfrac{&nbsp;(\\var{b_2}) (\\var{h_2})^3}{3} = \\var{siground(ix units, 4)} \\\\$</p>\n<p>To find $I_y$ consider the shape to be made of&nbsp;a&nbsp;&nbsp;$ (\\var{b_3}&nbsp;\\times&nbsp;\\var{h_3})$ rectangle and a&nbsp;$(\\var{b_4}&nbsp;\\times&nbsp;\\var{h_4})$ {if(removed_y,'removed','')} rectangle.</p>\n<p>$\\quad I_y = \\dfrac{&nbsp;(\\var{b_3}) (\\var{h_3})^3}{3} \\, &nbsp;\\var{if(removed_y, '&ndash;' , '+')} \\,\\dfrac{&nbsp;(\\var{b_4}) (\\var{h_4})^3}{3}= \\var{siground(Iy units,4)}$</p>", "rulesets": {}, "variables": {"Iy": {"name": "Iy", "group": "Unnamed group", "definition": "MOI(b_3,h_3) + if(removed_y,-1,1) MOI(b_4,h_4)", "description": "", "templateType": "anything"}, "removed_x": {"name": "removed_x", "group": "Unnamed group", "definition": "not(add)", "description": "<p>remove</p>", "templateType": "anything"}, "add": {"name": "add", "group": "Ungrouped variables", "definition": "random(true,false)", "description": "", "templateType": "anything"}, "h_2": {"name": "h_2", "group": "Unnamed group", "definition": "B[1]", "description": "", "templateType": "anything"}, "b_4": {"name": "b_4", "group": "Unnamed group", "definition": "abs(b[1]-A[1])", "description": "", "templateType": "anything"}, "removed_y": {"name": "removed_y", "group": "Unnamed group", "definition": "add and (B[1]>A[1])", "description": "", "templateType": "anything"}, "h_4": {"name": "h_4", "group": "Unnamed group", "definition": "A[0]", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "Ungrouped variables", "definition": "vector(random(1..10),random(1..10))", "description": "", "templateType": "anything"}, "h_1": {"name": "h_1", "group": "Unnamed group", "definition": "A[1]", "description": "", "templateType": "anything"}, "unit": {"name": "unit", "group": "Ungrouped variables", "definition": "random('in', 'cm', 'ft', 'm')", "description": "", "templateType": "anything"}, "Ix": {"name": "Ix", "group": "Unnamed group", "definition": "MOI(b_1,h_1) + if(removed_x,-1,1) MOI(b_2,h_2)", "description": "", "templateType": "anything"}, "b_3": {"name": "b_3", "group": "Unnamed group", "definition": "B[1]", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "Ungrouped variables", "definition": "qty(1,unit+'^4')", "description": "", "templateType": "anything"}, "b_1": {"name": "b_1", "group": "Unnamed group", "definition": "A[0]", "description": "", "templateType": "anything"}, "h_3": {"name": "h_3", "group": "Unnamed group", "definition": "B[0]", "description": "", "templateType": "anything"}, "B": {"name": "B", "group": "Ungrouped variables", "definition": "vector(random(1..10),random(1..10))", "description": "", "templateType": "anything"}, "b_2": {"name": "b_2", "group": "Unnamed group", "definition": "abs(B[0]-A[0])", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "if(add, B[0]>A[0], B[0]<A[0] and B[1] < A[1]) and A[1] <> B[1]", "maxRuns": 100}, "ungrouped_variables": ["A", "B", "add", "unit", "units"], "variable_groups": [{"name": "Unnamed group", "variables": ["b_1", "h_1", "b_2", "h_2", "b_3", "h_3", "b_4", "h_4", "Ix", "removed_x", "removed_y", "Iy"]}], "functions": {"MOI": {"parameters": [["b", "number"], ["h", "number"]], "type": "number", "language": "jme", "definition": "b * h * h * h /3"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$I_x$ =&nbsp;[[0]] $\\qquad I_y = $&nbsp;[[1]]</p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$I_x$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix units", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$I_y$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy units", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Parallel Axis Theorem: common shapes", "extensions": ["geogebra"], "custom_part_types": [], "resources": [["question-resources/MOI_table.pdf", "/srv/numbas/media/question-resources/MOI_table.pdf"], ["question-resources/MOI_table.png", "/srv/numbas/media/question-resources/MOI_table.png"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Mechanics", "mechanics", "moment of inertia", "parallel axis theorem", "second moment of area", "Statics", "statics"], "metadata": {"description": "<p>Write expressions for the moment of inertia of simple shapes about various axes.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('j25dzmbq', [[\"A\",A],[\"shape\",index +1],[\"axis\",axis],[\"reference\",ref]])}</p>\n<p>Write an expression for the&nbsp;moment of inertia&nbsp;with respect to the {if(axis=1,\"centroidal \",\"\")}<em>x</em> axis for&nbsp;the {shape} with {description}. &nbsp;</p>", "advice": "<p>Some cases are found in the table below. &nbsp;For others use the parallel axis theorem.</p>\n<p>\\[I = \\bar{I} + A d^2\\]</p>\n<p>&nbsp;where:</p>\n<p style=\"padding-left: 30px;\">$\\bar{I}$ is the centroidal moment of inertia, i.e.,&nbsp;the moment of inertia of the shape with respect to an axis which is parallel to the desired axis and passes throught the shape's centroid.</p>\n<p style=\"padding-left: 30px;\">$A$ is the area of the shape.</p>\n<p style=\"padding-left: 30px;\">$d$ is the distance between the desired axis and the parallel centroidal axis.</p>\n<p style=\"padding-left: 30px;\"></p>\n<p style=\"padding-left: 30px;\"></p>\n<p><img src=\"resources/question-resources/MOI_table.png\" width=\"300\" height=\"732\" style=\"display: block; margin-left: auto; margin-right: auto;\"/></p>\n<p></p>\n<p></p>\n<p></p>", "rulesets": {}, "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true}, "constants": [], "variables": {"distances": {"name": "distances", "group": "Ungrouped variables", "definition": "let(d,string(down),u,string(up),[[\"0\",\"0\",\"0\",\"0\"],\n  [d,d,d,d],\n  [u,u,u,u],\n  [\"0\",\"c\",\"c+(\"+d+\")\",\"c-(\"+u+\")\"],\n  [\"0\",\"c\",\"c-\"+d,\"c+\"+u]])", "description": "", "templateType": "anything", "can_override": false}, "names": {"name": "names", "group": "Ungrouped variables", "definition": "[\"rectangle\",\"triangle\",\"circle\",\"semicircle\",\"quarter circle\"]", "description": "", "templateType": "anything", "can_override": false}, "ref": {"name": "ref", "group": "Ungrouped variables", "definition": "if(axis>3,random(1..3),0)", "description": "<p>The reference axis,&nbsp;needed for axis 4 and 5. &nbsp;</p>\n<p>1 centroid</p>\n<p>2 bottom of shape</p>\n<p>3 top of shape</p>", "templateType": "anything", "can_override": false}, "shape": {"name": "shape", "group": "parts", "definition": "names[index]", "description": "", "templateType": "anything", "can_override": false}, "index": {"name": "index", "group": "Ungrouped variables", "definition": "random(0..4)", "description": "<p>rectangle, triangle, circle, semicircle, quarter circle</p>", "templateType": "anything", "can_override": false}, "area": {"name": "area", "group": "parts", "definition": "expression(areas[index])", "description": "", "templateType": "anything", "can_override": false}, "areas": {"name": "areas", "group": "Ungrouped variables", "definition": "[\"b*h\", \"b h / 2\", \"pi r^2\", \"pi r^2 /2\" , \"pi r^2 /4\"]", "description": "", "templateType": "anything", "can_override": false}, "maximums": {"name": "maximums", "group": "Ungrouped variables", "definition": "[\"h/2\",\n  if(quadrant<2,\"2 h/3\",\"h/3\")\n  ,\"r\",\n  if(quadrant=0,\"(r-(4 r)/(3 pi))\",if(quadrant=2,\"(4 r)/(3 pi)\",\"r\")),\n  if(quadrant<=1,\"(r-(4 r)/(3 pi))\", \"(4 r)/(3 pi)\")]", "description": "<p>Distance from centroid to the top of the shape.</p>\n<p></p>\n<p>maximums = {abs(y(A) / 2), Max(2 / 3 y(A), (-y(A)) / 3), radius, If(quadrant \u225f 0, radius - ybar, quadrant \u225f 1, radius, quadrant \u225f 2, ybar, quadrant \u225f 3, radius), If(quadrant &le; 1, radius - ybar, ybar)}</p>", "templateType": "anything", "can_override": false}, "quadrant": {"name": "quadrant", "group": "parts", "definition": "if(A[0]>0 and A[1]>0,0,\n  if(A[0]<0 and A[1] > 0, 1,\n    if(A[0]<0 and A[1]<0,2,3)))", "description": "<p>Calculates which quadrant point A is in. &nbsp;Needed to determine orientation of the triangle, semi and quarter circles.</p>", "templateType": "anything", "can_override": false}, "even_quadrant": {"name": "even_quadrant", "group": "Ungrouped variables", "definition": "mod(quadrant,2)=0 ", "description": "<p>usefull utility</p>", "templateType": "anything", "can_override": false}, "Ibars": {"name": "Ibars", "group": "Ungrouped variables", "definition": "[\"b*h^3/12\",\n  \"b*h^3/36\", \n  \"pi r^4/4\", \n  if(even_quadrant,\"0.1098 r^4\",\"pi r^4/8\"),\n  \"0.0549 r^4\"]", "description": "", "templateType": "anything", "can_override": false}, "minimums": {"name": "minimums", "group": "Ungrouped variables", "definition": "[\"h/2\",\n  if(quadrant<2,\"h/3\",\"2 h/3\")\n  ,\"r\",\n  if(quadrant=0,\"(4 r)/(3 pi)\",if(quadrant=2,\"r-(4 r)/(3 pi)\",\"r\")),\n  if(quadrant<=1,\"(4 r)/(3 pi)\", \"r-(4 r)/(3 pi)\")]", "description": "<p>distance from centroid to bottom of the shape</p>", "templateType": "anything", "can_override": false}, "Ibar": {"name": "Ibar", "group": "parts", "definition": "expression(Ibars[index])", "description": "", "templateType": "anything", "can_override": false}, "axis": {"name": "axis", "group": "Ungrouped variables", "definition": "random(1..5)", "description": "<p>1 through centroid</p>\n<p>2 bottom of shape</p>\n<p>3 top of shape</p>\n<p>4 below shape</p>\n<p>5 above shape</p>", "templateType": "anything", "can_override": false}, "down": {"name": "down", "group": "parts", "definition": "expression(minimums[index])", "description": "<p>distance from centroid to bottom of shape</p>", "templateType": "anything", "can_override": false}, "up": {"name": "up", "group": "parts", "definition": "expression(maximums[index])", "description": "", "templateType": "anything", "can_override": false}, "d": {"name": "d", "group": "parts", "definition": "expression(distances[axis-1][ref])", "description": "", "templateType": "anything", "can_override": false}, "description": {"name": "description", "group": "parts", "definition": "if(index<2,\"base  <i>b</i> and height <i>h</i>\", \"radius <i>r</i>\")", "description": "", "templateType": "anything", "can_override": false}, "Ix": {"name": "Ix", "group": "parts", "definition": "(string(Ibar) + \"+ \" + string(area) + \"*(\"+ string(d) + \")^2\")", "description": "", "templateType": "anything", "can_override": false}, "A": {"name": "A", "group": "Ungrouped variables", "definition": "vector(random([2,3],[3,2],[-3,2],[-2,3])) random(-1,1)\n", "description": "", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["A", "index", "axis", "ref", "names", "areas", "Ibars", "maximums", "even_quadrant", "minimums", "distances"], "variable_groups": [{"name": "parts", "variables": ["shape", "area", "description", "Ibar", "up", "quadrant", "down", "d", "Ix"]}], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$\\var{if(axis=1,latex(\"\\\\bar\\{I\\}_x\"), latex(\"I_x\"))}= $&nbsp;[[0]]</p>\n<p>Note: If your answer produces an error message,&nbsp;try&nbsp;putting an asterisk&nbsp;before&nbsp;parentheses, like so:&nbsp;<code>b h * (h/2)^2&nbsp;</code></p>\n<p></p>\n<p><span data-jme-visible=\"false\">\\[I_x=\\simplify{{expression(Ix)}}\\]</span></p>\n<p></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "MOI", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{expression(Ix)}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": true, "singleLetterVariables": true, "allowUnknownFunctions": false, "implicitFunctionComposition": false, "caseSensitive": false, "valuegenerators": []}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Parallel Axis Theorem: rectangles and triangles", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/triangle-rectangle.ggb", "/srv/numbas/media/question-resources/triangle-rectangle.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["area moment of inertia", "Area moment of inertia", "mechanics", "Mechanics", "parallel axis theorem", "second moment of area", "Statics", "statics"], "metadata": {"description": "<p>Use the parallel axis theorem to find the area moment of inertia of a triangle and a rectangle about various axes.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('qqws9ffu', [['R1',R1],['R2',R2],['T1',T1],['T2',T2]])}</p>\n<p>Determine the moment of inertia of&nbsp;the rectangle and the triangle about the axes specified using the parallel axis theorem when necessary. &nbsp;1 grid square = 1&nbsp;{units}.</p>", "advice": "<p><strong>For the x-axis</strong></p>\n<p><strong>Rectangle:</strong></p>\n<p style=\"padding-left: 30px;\">$b = \\var{R_b} \\qquad h = \\var{R_h} \\qquad A = b \\cdot h = \\var{R_area}$</p>\n<p style=\"padding-left: 30px;\">$\\bar{I}_x = \\frac{1}{12}b h^3 = \\var{display(R_Ibarx')}$</p>\n<p style=\"padding-left: 30px;\">$I_x = \\bar{I}_x + A d^2$ where&nbsp;$d$ is the distance from the x-axis to the centroid of the rectangle:&nbsp;$d =\\var{qty(abs(R_c[1]),units)}$</p>\n<p style=\"padding-left: 30px;\">$I_x = \\var{display(R_ibarx')}&nbsp;+ (\\var{R_area})&nbsp;(\\var{qty(abs(R_c[1]),units)})^2 = \\var{display(R_Ix)}$</p>\n<p><strong>Triangle:</strong></p>\n<p style=\"padding-left: 30px;\">$b = \\var{T_b} \\qquad h = \\var{T_h} \\qquad A = b \\cdot h/2 = \\var{T_area}$</p>\n<p style=\"padding-left: 30px;\">$\\bar{I}_x = \\frac{1}{36}b h^3 = \\var{display(T_Ibarx')}$</p>\n<p style=\"padding-left: 30px;\">$I_x = \\bar{I}_x + A d^2$ where $d$ is the distance from the x-axis to the centroid of the triangle: $d =\\var{qty(abs(T_c[1]),units)}$</p>\n<p style=\"padding-left: 30px;\">$I_x = \\var{display(T_ibarx')} + (\\var{T_area}) (\\var{qty(abs(T_c[1]),units)})^2 = \\var{display(T_Ix)}$</p>\n<p><strong>For the y-axis</strong></p>\n<p style=\"padding-left: 30px;\">Follow a similar procedure to find the moments of inertia with respect to the <em>y</em>-axis.</p>\n<p style=\"padding-left: 30px;\"><strong>Rectangle:</strong> $I_y&nbsp;&nbsp;= \\bar{I}_y + A d^2 = \\var{display(R_ibary')}&nbsp;+ (\\var{R_area})&nbsp;(\\var{qty(abs(R_c[0]),units)})^2 = \\var{display(R_Iy)}$</p>\n<p style=\"padding-left: 30px;\"><strong>Triangle:</strong>&nbsp; &nbsp; $I_y &nbsp;= \\bar{I}_y + A d^2 = \\var{display(T_ibary')} + (\\var{T_area}) (\\var{qty(abs(T_c[0]),units)})^2 = \\var{display(T_Iy)}$</p>", "rulesets": {}, "variables": {"T_b": {"name": "T_b", "group": "derived ", "definition": "qty(abs(T1[0]-T2[0]),units)", "description": "", "templateType": "anything"}, "T_h": {"name": "T_h", "group": "derived ", "definition": "qty(abs(T1[1]-T2[1]) ,units)", "description": "", "templateType": "anything"}, "R2": {"name": "R2", "group": "inputs", "definition": "R1 + random(-1,1) vector(random(3..8),random(3..8))\n", "description": "", "templateType": "anything"}, "R_c": {"name": "R_c", "group": "derived ", "definition": "R1 + (R2-R1)/2", "description": "<p>centroid</p>", "templateType": "anything"}, "R_xbar": {"name": "R_xbar", "group": "answers", "definition": "qty(R_c[0], units)\n", "description": "", "templateType": "anything"}, "R_Ibarx'": {"name": "R_Ibarx'", "group": "answers", "definition": "r_b r_h r_h r_h/12", "description": "", "templateType": "anything"}, "T1": {"name": "T1", "group": "inputs", "definition": "vector(random(-10..10),random(-10..10))", "description": "", "templateType": "anything"}, "R_area": {"name": "R_area", "group": "answers", "definition": "R_b R_h", "description": "", "templateType": "anything"}, "debug": {"name": "debug", "group": "inputs", "definition": "false", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "inputs", "definition": "'in'", "description": "", "templateType": "anything"}, "T_Ix": {"name": "T_Ix", "group": "answers", "definition": "T_ibarx' + T_area T_ybar T_ybar", "description": "", "templateType": "anything"}, "R_b": {"name": "R_b", "group": "derived ", "definition": "qty(abs(R1[0]-R2[0]) ,units)", "description": "", "templateType": "anything"}, "T_Ibarx'": {"name": "T_Ibarx'", "group": "answers", "definition": "t_b t_h t_h t_h/36", "description": "", "templateType": "anything"}, "T2": {"name": "T2", "group": "inputs", "definition": "T1 + random(-1,1) vector(random(3,6,9),random(3,6,9))\n\n", "description": "", "templateType": "anything"}, "R_Ibary'": {"name": "R_Ibary'", "group": "answers", "definition": "r_h r_b r_b r_b/12", "description": "", "templateType": "anything"}, "T_Ibary'": {"name": "T_Ibary'", "group": "answers", "definition": "t_h t_b t_b t_b/36", "description": "<p>s</p>", "templateType": "anything"}, "R1": {"name": "R1", "group": "inputs", "definition": "vector(random(-10..10),random(-10..10))", "description": "", "templateType": "anything"}, "R_Iy": {"name": "R_Iy", "group": "answers", "definition": "R_ibary' + R_area R_xbar R_xbar", "description": "", "templateType": "anything"}, "R_ybar": {"name": "R_ybar", "group": "answers", "definition": "qty(R_c[1], units) ", "description": "", "templateType": "anything"}, "T_c": {"name": "T_c", "group": "derived ", "definition": "T1 + (T2-T1)/3", "description": "", "templateType": "anything"}, "T_xbar": {"name": "T_xbar", "group": "answers", "definition": "qty(T_c[0], units) ", "description": "", "templateType": "anything"}, "T_area": {"name": "T_area", "group": "answers", "definition": "T_b T_h / 2\n", "description": "", "templateType": "anything"}, "T_Iy": {"name": "T_Iy", "group": "answers", "definition": "T_ibary' + T_area T_xbar T_xbar", "description": "", "templateType": "anything"}, "R_Ix": {"name": "R_Ix", "group": "answers", "definition": "R_ibarx' + R_area R_ybar R_ybar", "description": "", "templateType": "anything"}, "T_ybar": {"name": "T_ybar", "group": "answers", "definition": "qty(T_c[1], units) ", "description": "", "templateType": "anything"}, "version": {"name": "version", "group": "inputs", "definition": "random('x','y')", "description": "<p>v</p>", "templateType": "anything"}, "R_h": {"name": "R_h", "group": "derived ", "definition": "qty(abs(R1[1]-R2[1]) ,units)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "not some(map(d=0,d,[R_c[0],R_c[1],T_c[0],T_c[1]]))\n// this prevents a centroid from landing on either axis", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "inputs", "variables": ["R1", "R2", "T1", "T2", "units", "version", "debug"]}, {"name": "derived ", "variables": ["R_b", "R_h", "T_b", "T_h", "R_c", "T_c"]}, {"name": "answers", "variables": ["R_area", "T_area", "R_xbar", "R_ybar", "T_xbar", "T_ybar", "R_Ibarx'", "R_Ibary'", "T_Ibary'", "T_Ibarx'", "R_Ix", "R_Iy", "T_Ix", "T_Iy"]}], "functions": {"display": {"parameters": [["q", "quantity"]], "type": "quantity", "language": "jme", "definition": "string(siground(q,4))"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p style=\"text-align: left;\">Find the area and centroidal coordinates of the rectangle.</p>\n<p style=\"text-align: left;\">$A$ = &nbsp;[[0]]&nbsp; &nbsp;$\\bar{x}$ = [[1]]&nbsp; &nbsp; $\\bar{y}$ =&nbsp;[[2]]</p>\n<p style=\"text-align: left;\"><span data-jme-visible=\"debug\">$A = \\var{R_area} \\qquad &nbsp; \\bar{x} = \\var{R_xbar} \\qquad \\bar{y} = \\var{R_ybar}$</span></p>\n<p style=\"text-align: left;\"></p>", "gaps": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "2", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_area", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "2", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_xbar", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "2", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_ybar", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p style=\"text-align: left;\">Find the centroidal moments of inertia&nbsp;for the rectangle:</p>\n<p style=\"text-align: left;\">$\\bar{I}_{x'} = $ [[0]]&nbsp; &nbsp;$\\qquad \\bar{I}_{y'} =$ [[1]]&nbsp;</p>\n<p style=\"text-align: left;\"><span data-jme-visible=\"debug\">{display(R_ibarx')}&nbsp;{display(R_ibary')}</span></p>\n<p style=\"text-align: left;\"></p>", "gaps": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "3", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_ibarx'", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "3", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_ibary'", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p style=\"text-align: left;\">Apply the parallel axis theorem:</p>\n<p style=\"text-align: left;\">$I = \\bar{I} + A d^2 $</p>\n<p style=\"text-align: left;\">to&nbsp;find the moments of inertia with respect to the <em>x</em>- and <em>y</em>- axes for the rectangle&nbsp;.</p>\n<p>$I_x =$ [[0]]&nbsp;&nbsp;$\\qquad I_y =$ [[1]]&nbsp;</p>\n<p><span data-jme-visible=\"debug\">{display(R_iy)}&nbsp;{display(R_ix)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_Ix", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_Iy", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Use a similar process to&nbsp;find the moment of inertia of the triangle with respect to the <em>{version}</em>-axis.</p>\n<p>$I_\\var{version}$ =&nbsp;[[0]] &nbsp;<span data-jme-visible=\"debug\">{display(if(version='x',T_Ix,T_Iy))}</span></p>\n<p></p>", "gaps": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "if(version='x',T_Ix,T_Iy)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Parallel Axis Theorem: semi and quarter circles", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Area moment of inertia", "area moment of inertia", "mechancs", "moment of inertia", "parallel axis theorem", "Statics", "statics"], "metadata": {"description": "<p>Find the moment of inertia of semi and quarter circles using the parallel axis theorem.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('emjtbcxv',ggb_points)}</p>\n<p>Determine the moment of inertia and radius of gyration about the <em>{axis}-</em>axis&nbsp;for&nbsp;the {lower(names[pts[0]])} and the {lower(names[pts[1]])}&nbsp;.</p>\n<p>Grid units are [{units}].&nbsp;</p>\n<p></p>\n<table data-jme-visible=\"debug\">\n<tbody>\n<tr>\n<td><span>axis</span></td>\n<td><span>radius</span></td>\n<td><span>area</span></td>\n<td><span>ibar</span></td>\n<td><span>d</span></td>\n<td><span>I</span></td>\n<td>Centroid</td>\n</tr>\n<tr>\n<td><span>x</span></td>\n<td><span>{r[\"A\"]}</span></td>\n<td><span>{area[\"A\"]}</span></td>\n<td><span>{ibarx[\"A\"]}</span></td>\n<td><span>{d[\"x\"][\"A\"]}</span></td>\n<td><span>{Ix[\"A\"]}</span></td>\n<td>{siground(Centroid[\"A\"],3)}</td>\n</tr>\n<tr>\n<td><span>y</span></td>\n<td><span>{r[\"A\"]}</span></td>\n<td><span>{area[\"A\"]}</span></td>\n<td><span>{ibary[\"A\"]}</span></td>\n<td><span>{d[\"y\"][\"A\"]}</span></td>\n<td><span>{Iy[\"A\"]}</span></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p></p>\n<table data-jme-visible=\"debug\">\n<tbody>\n<tr>\n<td><span>axis</span></td>\n<td><span>radius</span></td>\n<td><span>area</span></td>\n<td><span>ibar</span></td>\n<td><span>d</span></td>\n<td><span>I</span></td>\n<td>Centroid</td>\n</tr>\n<tr>\n<td><span>x</span></td>\n<td><span>{r[\"B\"]}</span></td>\n<td><span>{area[\"B\"]}</span></td>\n<td><span>{ibarx[\"B\"]}</span></td>\n<td><span>{d[\"x\"][\"B\"]}</span></td>\n<td><span>{Ix[\"B\"]}</span></td>\n<td>{siground(Centroid[\"B\"],3)}</td>\n</tr>\n<tr>\n<td><span>y</span></td>\n<td><span>{r[\"B\"]}</span></td>\n<td><span>{area[\"B\"]}</span></td>\n<td><span>{ibary[\"B\"]}</span></td>\n<td><span>{d[\"y\"][\"B\"]}</span></td>\n<td><span>{Iy[\"B\"]}</span></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p></p>\n<table data-jme-visible=\"debug\">\n<tbody>\n<tr>\n<td><span>axis</span></td>\n<td><span>radius</span></td>\n<td><span>area</span></td>\n<td><span>ibar</span></td>\n<td><span>d</span></td>\n<td><span>I</span></td>\n<td>Centroid</td>\n</tr>\n<tr>\n<td><span>x</span></td>\n<td><span>{r[\"C\"]}</span></td>\n<td><span>{area[\"C\"]}</span></td>\n<td><span>{ibarx[\"C\"]}</span></td>\n<td><span>{d[\"x\"][\"C\"]}</span></td>\n<td><span>{Ix[\"C\"]}</span></td>\n<td>{siground(Centroid[\"C\"],3)}</td>\n</tr>\n<tr>\n<td><span>y</span></td>\n<td><span>{r[\"C\"]}</span></td>\n<td><span>{area[\"C\"]}</span></td>\n<td><span>{ibary[\"C\"]}</span></td>\n<td><span>{d[\"y\"][\"C\"]}</span></td>\n<td><span>{Iy[\"C\"]}</span></td>\n<td></td>\n</tr>\n</tbody>\n</table>", "advice": "<div data-jme-visible=\"&quot;A&quot; in pts[0..2]\">\n<p><strong>For the circle:</strong></p>\n<p style=\"padding-left: 60px;\">$r = \\var{q(r[\"A\"],units)} \\qquad A = \\pi r^2 = \\var{q(area[\"A\"],units+'^2')}$</p>\n<p style=\"padding-left: 60px;\">$\\bar{x} =\\var{q(centroid[\"A\"][0],units)}&nbsp;\\qquad \\bar{y} = \\var{q(centroid[\"A\"][1],units)}$</p>\n<p style=\"padding-left: 30px;\">Place a {if(axis=\"x\", \"horizontal\", \"vertical\" )} axis through the centroid of the {names[\"A\"]}. &nbsp;The centroidal moment of inertia&nbsp;with respect to this axis is:</p>\n<p style=\"padding-left: 60px;\">$\\bar{I} &nbsp;= \\dfrac{\\pi r^4}{4} = \\var{q(Ibar[axis][\"A\"],units+'^4')}$</p>\n<p style=\"padding-left: 30px;\">and the&nbsp;distance between the parallel axes is:</p>\n<p style=\"padding-left: 60px;\">$d =&nbsp;\\var{q(abs(d[axis][\"A\"]),units)}$</p>\n<p style=\"padding-left: 30px;\">Applying the parallel axis theorem and the definition of radius of gyration:</p>\n<p style=\"padding-left: 60px;\">$I_{\\var{axis}} = \\bar{I} + A d^2 = \\var{q(I'[axis][\"A\"],units+'^4')}$</p>\n<p style=\"padding-left: 60px;\">$k_{\\var{axis}} = \\sqrt{\\dfrac{I_{\\var{axis}}}{A}} = \\var{q(k[axis][\"A\"],units)}$</p>\n<p style=\"padding-left: 60px;\"></p>\n</div>\n<div data-jme-visible=\"&quot;B&quot; in pts[0..2]\">\n<p><strong>For the semi-circle:</strong></p>\n<p style=\"padding-left: 60px;\">$r = \\var{q(r[\"B\"],units)} \\qquad A = \\dfrac{\\pi r^2}{2} = \\var{q(area[\"B\"],units+'^2')}$</p>\n<p style=\"padding-left: 60px;\">$\\bar{x} = \\var{latex( offset(0,centers[\"B\"], radii[\"B\"]))} \\var{q(centroid[\"B\"][0],units)}&nbsp;\\qquad&nbsp;\\bar{y} = \\var{latex( offset(1,centers[\"B\"], radii[\"B\"]))} \\var{q(centroid[\"B\"][1],units)}$</p>\n<p style=\"padding-left: 30px;\">Place a {if(axis=\"x\", \"horizontal\", \"vertical\" )} axis through the centroid of the {names[\"B\"]}. &nbsp;The centroidal moment of inertia&nbsp;with respect to this axis is:</p>\n<p style=\"padding-left: 60px;\">$\\bar{I} &nbsp;=\\var{ if(orientation=axis,latex(\"0.1098 r^4\"),latex(\"\\\\dfrac\\{\\\\pi r^4\\}\\{8\\}\")) }= \\var{q(Ibar[axis][\"B\"],units+'^4')}$</p>\n<p style=\"padding-left: 30px;\">and the&nbsp;distance between the parallel axes is:</p>\n<p style=\"padding-left: 60px;\">$d =&nbsp;\\var{q(abs(d[axis][\"B\"]),units)}$</p>\n<p style=\"padding-left: 30px;\">Applying the parallel axis theorem and the definition of radius of gyration:</p>\n<p style=\"padding-left: 60px;\">$I_{\\var{axis}} = \\bar{I} + A d^2 = \\var{q(I'[axis][\"B\"],units+'^4')}$</p>\n<p style=\"padding-left: 60px;\">$k_{\\var{axis}} = \\sqrt{\\dfrac{I_{\\var{axis}}}{A}} = \\var{q(k[axis][\"B\"],units)}$</p>\n<p style=\"padding-left: 60px;\"></p>\n</div>\n<div data-jme-visible=\"&quot;C&quot; in pts[0..2]\">\n<p><strong>For the quarter-circle:</strong></p>\n<p style=\"padding-left: 60px;\">$r = \\var{q(r[\"C\"],units)} \\qquad A = \\dfrac{\\pi r^2}{4} = \\var{q(area[\"C\"],units+'^2')}$</p>\n<p style=\"padding-left: 60px;\">$\\bar{x} =&nbsp;\\var{latex( offset(0,centers[\"C\"], radii[\"C\"]))} \\var{q(centroid[\"C\"][0],units)}&nbsp;\\qquad&nbsp;\\bar{y} =\\var{latex( offset(1,centers[\"C\"], radii[\"C\"]))} \\var{q(centroid[\"C\"][1],units)}$</p>\n<p style=\"padding-left: 30px;\">Place a {if(axis=\"x\", \"horizontal\", \"vertical\" )} axis through the centroid of the {names[\"C\"]}. &nbsp;The centroidal moment of inertia&nbsp;with respect to this axis is:</p>\n<p style=\"padding-left: 60px;\">$\\bar{I} &nbsp;= 0.0549 r^4= \\var{q(Ibar[axis][\"C\"],units+'^4')}$</p>\n<p style=\"padding-left: 30px;\">and the&nbsp;distance between the parallel axes is:</p>\n<p style=\"padding-left: 60px;\">$d =&nbsp;\\var{q(abs(d[axis][\"C\"]),units)}$</p>\n<p style=\"padding-left: 30px;\">Applying the parallel axis theorem and the definition of radius of gyration:</p>\n<p style=\"padding-left: 60px;\">$I_{\\var{axis}} = \\bar{I} + A d^2 = \\var{q(I'[axis][\"C\"],units+'^4')}$</p>\n<p style=\"padding-left: 60px;\">$k_{\\var{axis}} = \\sqrt{\\dfrac{I_{\\var{axis}}}{A}} = \\var{q(k[axis][\"C\"],units)}$</p>\n</div>", "rulesets": {}, "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true}, "constants": [], "variables": {"area": {"name": "area", "group": "calculated", "definition": "[\"A\": pi r[\"A\"]^2, \"B\": pi r[\"B\"]^2/2, \"C\": pi r[\"C\"]^2 / 4]", "description": "", "templateType": "anything", "can_override": false}, "I0": {"name": "I0", "group": "Unnamed group", "definition": "qty(I'[axis][pts[0]],units+\"^4\")", "description": "", "templateType": "anything", "can_override": false}, "ky": {"name": "ky", "group": "calculated", "definition": "dict(map([p,sqrt(Iy[p]/area[p])], p, sort(pts)))", "description": "", "templateType": "anything", "can_override": false}, "Iy": {"name": "Iy", "group": "calculated", "definition": "dict(map([p,Ibary[p] + Area[p] * \n      d[\"y\"][p]^2],p,sort(pts)))", "description": "", "templateType": "anything", "can_override": false}, "k1": {"name": "k1", "group": "Unnamed group", "definition": "qty(k[axis][pts[1]],units)", "description": "", "templateType": "anything", "can_override": false}, "Ibar": {"name": "Ibar", "group": "calculated", "definition": "[\"x\":Ibarx,\"y\":Ibary]", "description": "", "templateType": "anything", "can_override": false}, "kx": {"name": "kx", "group": "calculated", "definition": "dict(map([p,sqrt(Ix[p]/area[p])], p, sort(pts)))", "description": "", "templateType": "anything", "can_override": false}, "Ibarx": {"name": "Ibarx", "group": "calculated", "definition": "[\"A\": pi r[\"A\"]^4 /4, \"B\": if(orientation=\"x\",0.1098 r[\"B\"]^4, pi r[\"B\"]^4/8), \"C\": 0.0549 r[\"C\"]^4]", "description": "", "templateType": "anything", "can_override": false}, "I1": {"name": "I1", "group": "Unnamed group", "definition": "qty(I'[axis][pts[1]],units+\"^4\")", "description": "", "templateType": "anything", "can_override": false}, "Ibary": {"name": "Ibary", "group": "calculated", "definition": "[\"A\": pi r[\"A\"]^4 /4, \"B\": if(orientation=\"x\",pi r[\"B\"]^4/8,0.1098 r[\"B\"]^4), \"C\": 0.0549 r[\"C\"]^4]", "description": "", "templateType": "anything", "can_override": false}, "centers": {"name": "centers", "group": "Ungrouped variables", "definition": "dict(map([p,\n      vector(random(-6..6),random(-5..5))],p,pts))", "description": "<p>randomly located center points for the shapes</p>", "templateType": "anything", "can_override": false}, "k0": {"name": "k0", "group": "Unnamed group", "definition": "qty(k[axis][pts[0]],units)", "description": "", "templateType": "anything", "can_override": false}, "radii": {"name": "radii", "group": "Ungrouped variables", "definition": "[\"A\":centers[\"A\"] + random(1..5) * vector(0,1), \"B\":centers[\"B\"] + random(1..5)  * vector(random([1,0],[-1,0],[0,-1],[0,1])), \"C\":centers[\"C\"] + random(1..5) / sqrt(2) * vector(random([1,1],[-1,1],[-1,-1],[-1,1]))]", "description": "<p>This is a point which defines the radius. &nbsp;The centroid is on a line passing through center and this point.</p>\n<p>The actual radius is the distance between center and radii.</p>\n<p></p>", "templateType": "anything", "can_override": false}, "names": {"name": "names", "group": "Ungrouped variables", "definition": "[\"A\":\"Circle\",\"B\":\"Semi-circle\",\"C\":\"Quarter-circle\"]\n", "description": "<p>the names of the shapes</p>", "templateType": "anything", "can_override": false}, "centroid": {"name": "centroid", "group": "calculated", "definition": "[\"A\": centers[\"A\"], \"B\": centers[\"B\"] + 4 (radii[\"B\"] - centers[\"B\"]) /3 /pi, \"C\": centers[\"C\"] +   4 sqrt(2) (radii[\"C\"] - centers[\"C\"]) /3 /pi]", "description": "<p>need sqrt(2) for quarter circle because of the way radii is defined</p>", "templateType": "anything", "can_override": false}, "axis": {"name": "axis", "group": "Ungrouped variables", "definition": "random('x','y')", "description": "<p>random choice for question&nbsp;</p>", "templateType": "anything", "can_override": false}, "I'": {"name": "I'", "group": "calculated", "definition": "[\"x\":Ix,\"y\":Iy]", "description": "<p>Cant call it I because I is a reserved variable</p>", "templateType": "anything", "can_override": false}, "k": {"name": "k", "group": "calculated", "definition": "[\"x\":kx,\"y\":ky]", "description": "", "templateType": "anything", "can_override": false}, "units": {"name": "units", "group": "Ungrouped variables", "definition": "random('in','cm','ft','mm')", "description": "", "templateType": "anything", "can_override": false}, "d": {"name": "d", "group": "calculated", "definition": "[\"x\": dict(map([p,centroid[p][1]],p,sort(pts))), \"y\": dict(map([p,centroid[p][0]],p,sort(pts)))]", "description": "<p>d[\"x\"] gives distance from the&nbsp;y-axis</p>\n<p>This is the value needed for parallel axis theorem when calculating I_x</p>", "templateType": "anything", "can_override": false}, "Ix": {"name": "Ix", "group": "calculated", "definition": "dict(map([p,Ibarx[p] + Area[p] * \n      d[\"x\"][p]^2],p,sort(pts)))", "description": "", "templateType": "anything", "can_override": false}, "orientation": {"name": "orientation", "group": "calculated", "definition": "if(centers[\"B\"][0] = radii[\"B\"][0],\"x\",\"y\")", "description": "<p>This determines which axis the semicircle's diameter is parallel to.</p>", "templateType": "anything", "can_override": false}, "debug": {"name": "debug", "group": "Ungrouped variables", "definition": "false", "description": "", "templateType": "anything", "can_override": false}, "pts": {"name": "pts", "group": "Ungrouped variables", "definition": "shuffle([\"A\",\"B\",\"C\"])", "description": "<p>this is where the randomizing of the shapes occurs.</p>", "templateType": "anything", "can_override": false}, "ggb_points": {"name": "ggb_points", "group": "Ungrouped variables", "definition": "map([p,centers[p]],p,pts) +\nmap(['R'+p,radii[p]],p,pts)[0..2]+\nmap(['R'+p,centers[p]],p,pts)[2..3]", "description": "<p>The problem is about two shapes randomly selected, which are the first two values in the pts array.</p>\n<p>The first map is the center coordinates for all three shapes.</p>\n<p>the second map is the random radii for the first two shapes,</p>\n<p>The last map&nbsp;sets the radius of the third&nbsp;shapes to its center, which hides it in GGB.</p>\n<p></p>\n<p>map([p,centers[p]],p,pts) +<br />map(['R'+p,radii[p]],p,pts)[0..2]+<br />map(['R'+p,centers[p]],p,pts)[2..3]</p>", "templateType": "anything", "can_override": false}, "r": {"name": "r", "group": "calculated", "definition": "dict(map([p,round(abs(centers[p]-radii[p]))],p,pts))", "description": "<p>the radii of the three shapes</p>", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["pts", "axis", "ggb_points", "names", "centers", "radii", "units", "debug"], "variable_groups": [{"name": "calculated", "variables": ["r", "area", "centroid", "Ibarx", "Iy", "Ibary", "Ix", "ky", "kx", "Ibar", "k", "I'", "d", "orientation"]}, {"name": "Unnamed group", "variables": ["I0", "I1", "k0", "k1"]}], "functions": {"": {"parameters": [], "type": "number", "language": "jme", "definition": ""}, "q": {"parameters": [["q", "number"], ["u", "string"]], "type": "string", "language": "jme", "definition": "siground(qty(q,u),4)"}, "offset": {"parameters": [["way", "number"], ["c", "vector"], ["d", "vector"]], "type": "string", "language": "jme", "definition": "let(dir,sign(d[way]-c[way]),r,siground(abs(c-d),3),\n    if(dir=0,'', c[way] + \"\\\\textrm{ \" + units + \"\\} \" + if(dir=1,\"+\",\"-\") + \n\"\\\\dfrac\\{4r\\}\\{3\\\\pi\\} =\"))"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "{names[pts[0]]}", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$I_\\var{axis}$ = &nbsp;[[0]] &nbsp; $k_\\var{axis}$ = &nbsp;[[1]] &nbsp;</p>\n<p><span data-jme-visible=\"debug\">{siground(I0,4)}</span> <span data-jme-visible=\"debug\">{siground(k0,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "I", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "I0", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "k", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "k0", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "{names[pts[1]]}", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$I_\\var{axis}$ = &nbsp;[[0]] &nbsp; $k_\\var{axis}$ = &nbsp;[[1]] &nbsp;</p>\n<p><span data-jme-visible=\"debug\">{siground(I1,4)}</span> <span data-jme-visible=\"debug\">{siground(k1,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "I", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "I1", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "k", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": false, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "k1", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}]}, {"name": "Composite Shape", "pickingStrategy": "all-ordered", "pickQuestions": 1, "questionNames": ["Triangle and rectangles", "Composite shape: U or T", "Semicircle and hole", "", "Box beam"], "variable_overrides": [[], [], [], [], []], "questions": [{"name": "Moment of inertia of composite shape - triangle and rectangles", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Area moment of inertia", "area moment of inertia", "Mechanics", "mechanics", "moment of inertia", "radius of gyration", "Statics", "statics"], "metadata": {"description": "<p>Find moment of inertia of a composite shape consisting of a rectangle and two triangles with respect to the <em>x</em>-axis. Shapes rest on the x-axis so the parallel axis theorem is not required.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('wsef7939',[['A',A],['B',B],['C',C]])}</p>\n<p>Consider the composite shape&nbsp;shown. &nbsp;Grid units are [{units}].</p>\n<p>Determine the total area of the shape, and its&nbsp;Moment of Inertia and Radius of Gyration with respect to the <em>x</em>-axis.</p>\n<p></p>", "advice": "<p><strong></strong>Consider the shape to be made of three parts.</p>\n<ol>\n<li>$\\qquad&nbsp;\\var{b1} \\times \\var{h1}$ rectangle.</li>\n<li>$\\qquad \\var{b2} \\times \\var{h2}$ triangle.</li>\n<li>$\\qquad \\var{b3} \\times \\var{h3}$&nbsp;<strong>{if(removed,'negative','')}&nbsp;</strong>triangle.</li>\n</ol>\n<p><strong>Area:</strong></p>\n<p>$A_1 = b_1 h_1 = \\var{A1}$ <strong>&nbsp;</strong></p>\n<p>$A_2 = \\frac{1}{2} b_2 h_2= \\var{A2}$<strong>&nbsp;</strong></p>\n<p>$A_3 = \\frac{1}{2}&nbsp;b_3 h_3= \\var{A3}$ &nbsp;<strong>{if(removed,'Removed','')}</strong></p>\n<p>$A = \\Sigma A_i &nbsp;= \\var{A_t}$</p>\n<p><strong>Moment of inertia wrt&nbsp;x-axis:</strong></p>\n<p>$\\begin{align}I_x &amp;= \\Sigma I_x \\\\&nbsp;&amp;= \\frac{b_1 h_1^3}{3} + \\frac{b_2 h_2^3&nbsp;}{12} +&nbsp;\\var{if(removed,'&ndash;','')} \\frac{b_3 h_3^3}{12}\\\\&amp;= (\\var{siground(I1x,4)}) + &nbsp;(\\var{siground(I2x,4)}) + (\\var{if(removed,'&ndash;','')}\\var{ siground(I3x,4)})\\\\&amp;= \\var{siground(I_t,4)}\\end{align}$</p>\n<p><strong>Radius of gyration&nbsp;wrt x-axis:</strong></p>\n<p>$k_x = \\sqrt{\\dfrac{I_x}{A}} &nbsp;= \\var{siground(kx,4)}$</p>", "rulesets": {}, "variables": {"A_t": {"name": "A_t", "group": "derived geometry", "definition": "A1+ A2 + if(removed,-1,1) A3", "description": "", "templateType": "anything"}, "A2": {"name": "A2", "group": "derived geometry", "definition": "B2 H2 /2", "description": "", "templateType": "anything"}, "h2": {"name": "h2", "group": "derived geometry", "definition": "qty(B[1],units)", "description": "<p>part 2 left triangle</p>", "templateType": "anything"}, "expression": {"name": "expression", "group": "derived geometry", "definition": "random([\n  \"\\\\frac\\{1\\}\\{2\\}\",\n  \"\\\\sin(x)\",\n  \"2 + \\\\hat\\{x\\}\"\n])", "description": "", "templateType": "anything"}, "b2": {"name": "b2", "group": "derived geometry", "definition": "qty(abs(C[0]),units)\n", "description": "<p>base of left triangle &nbsp;x(c) is always &lt; 0</p>", "templateType": "anything"}, "A3": {"name": "A3", "group": "derived geometry", "definition": "B3 h3/2", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "inputs", "definition": "random('in','ft','mm','cm','m')", "description": "", "templateType": "anything"}, "I3x": {"name": "I3x", "group": "answers", "definition": "(b3 * h3 * h3 * h3)/12", "description": "", "templateType": "anything"}, "C": {"name": "C", "group": "inputs", "definition": "vector(random(-9..-1),0)", "description": "<p>this point determines the triangle to the left of the y axis</p>", "templateType": "anything"}, "debug": {"name": "debug", "group": "inputs", "definition": "false", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "inputs", "definition": "vector(random(C[0]..10 except B[0] ),random(1..B[1]))", "description": "<p>This points sets the coordinates of the second triangle, at (x,0) and (x(b),y)</p>", "templateType": "anything"}, "I1x": {"name": "I1x", "group": "answers", "definition": "b1 * h1 * h1 * h1/3", "description": "", "templateType": "anything"}, "b1": {"name": "b1", "group": "derived geometry", "definition": "qty(B[0],units)", "description": "<p>base of rectangle 1</p>", "templateType": "anything"}, "I_t": {"name": "I_t", "group": "answers", "definition": "I1x + I2x + if(removed,-1,1) I3x", "description": "<p>total moment of inertia wrt x axis</p>", "templateType": "anything"}, "B": {"name": "B", "group": "inputs", "definition": "vector(random(1..8),random(1..9))", "description": "<p>top right corner of the rectangle</p>", "templateType": "anything"}, "kx": {"name": "kx", "group": "answers", "definition": "qty(sqrt(scalar(I_t/A_t)),units)", "description": "", "templateType": "anything"}, "h3": {"name": "h3", "group": "derived geometry", "definition": "qty(A[1],units)", "description": "", "templateType": "anything"}, "h1": {"name": "h1", "group": "derived geometry", "definition": "qty(B[1],units)", "description": "<p>height of rectangle 1</p>\n<p></p>", "templateType": "anything"}, "axis": {"name": "axis", "group": "inputs", "definition": "random('x','y')", "description": "", "templateType": "anything"}, "I2x": {"name": "I2x", "group": "answers", "definition": "(b2 * h2 * h2 * h2)/12\n", "description": "", "templateType": "anything"}, "A1": {"name": "A1", "group": "derived geometry", "definition": "B1 H1", "description": "<p>area of rectangle 1</p>", "templateType": "anything"}, "removed": {"name": "removed", "group": "derived geometry", "definition": "if(A[0]<B[0],true,false)", "description": "", "templateType": "anything"}, "b3": {"name": "b3", "group": "derived geometry", "definition": "qty(abs(B[0]-A[0]),units)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "inputs", "variables": ["A", "B", "C", "units", "debug", "axis"]}, {"name": "derived geometry", "variables": ["h1", "b2", "h2", "b3", "h3", "b1", "removed", "A1", "A2", "A3", "A_t", "expression"]}, {"name": "answers", "variables": ["I1x", "I2x", "I3x", "I_t", "kx"]}], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "Area", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p></p>\n<p>$A$ =&nbsp;[[0]]&nbsp;&nbsp; <span data-jme-visible=\"debug\">{A_t}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "Area", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "abs(A_t)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Moment of Inertia", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p></p>\n<p>$I_x =$&nbsp;[[0]]&nbsp;<span data-jme-visible=\"debug\">{siground(I_t,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$I_x$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "I_t", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Radius of gyration", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$k_x =$&nbsp;[[0]]&nbsp; <span data-jme-visible=\"debug\">{siground(kx,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$k_x$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "kx", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Moment of inertia of a composite shape: U or T", "extensions": ["geogebra", "quantities", "weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["mechanics", "Mechanics", "moment of inerta", "parallel axis theorem", "second moment of area", "Statics", "statics"], "metadata": {"description": "<p>Calculate the moment of inertia of a composite shape consiting of two rectangles about the <em>x</em> or <em>y</em>-axis. &nbsp;Parallel axis theorem is often required.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>A composite shape is drawn to scale below. &nbsp;Grid units are [{units}].</p>\n<p>{geogebra_applet('ez5xyd5w',[['A',A],['B',B]])}</p>\n<div data-jme-visible=\"debug\">\n<p><strong>Dimensions:</strong></p>\n<p>Rectangle 1: $b_1 = \\var{b1} \\qquad h_1 = \\var{h1}$</p>\n<p>Rectangle 2: &nbsp;$b_2 = \\var{b2}\\qquad h_2 = \\var{h2}$&nbsp;<strong>{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p><strong>Area:</strong></p>\n<p>$A_1 = b_1 h_1 = \\var{A1}$ <strong>&nbsp;</strong></p>\n<p>$A_2 = b_2 h_2 = \\var{A2}$<strong>&nbsp;{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$A_t = A_1 + A_2 = \\var{A1} + &nbsp;\\var{if(B[1]&lt;A[1],'&ndash;','')} \\var{A2} = \\var{A_t}$</p>\n<p><strong>For the <em>x</em>-axis:</strong></p>\n<p>$I_{1x} = \\frac{1}{3}b_1 h_1^3 = \\var{siground(I1x,4)}$</p>\n<p>$I_{2x} = \\bar{I} + A d^2 =&nbsp;&nbsp;\\frac{1}{12} (\\var{B2}) (\\var{H2})^3 +(\\var{A2}) (\\var{dx})^2&nbsp;= \\var{siground(I2x,4)}&nbsp;$ &nbsp;<strong>{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$I_x = I_{1x} +&nbsp;I_{2x} = \\var{siground(I1x,4)} +&nbsp;&nbsp;\\var{if(B[1]&lt;A[1],'&ndash;','')} &nbsp;\\var{siground(I2x,4)} = \\var{siground(I_tx,4)}$</p>\n<p>$k_x = \\sqrt{\\frac{I_x}{A}} &nbsp;= \\var{siground(kx,4)}$</p>\n<p><strong>For the centroidal&nbsp;<em>y'</em>-axis:</strong></p>\n<p>$I_{1y'} = \\frac{1}{12}h_1 b_1^3 &nbsp;= \\var{siground(I1y,4)}$</p>\n<p>$I_{2y'} = \\frac{1}{12}h_2 b_2^3 &nbsp;=&nbsp;\\var{siground(I2y,4)} $ <strong>{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$\\bar{I}_{y'} = I_{1y'} + I_{2y'} = \\var{siground(I1y,4)} + \\var{if(B[1]&lt;A[1],'&ndash;','')} \\var{siground(I2y,4)} = \\var{siground(Ibar_y',4)}$</p>\n<p><strong>For the <em>y</em>-axis, using the parallel axis theorem:</strong></p>\n<p>$I_y = \\bar{I}_{y'}+ A d^2 = \\var{siground(Ibar_y',4)} + (\\var{A_t}) (\\var{dy})^2 = &nbsp;\\var{siground(I_ty,4)}$</p>\n<p>$k_y = \\sqrt{\\frac{I_y}{A}} &nbsp;= \\var{siground(ky,4)}$</p>\n</div>", "advice": "<p><strong>Dimensions:</strong></p>\n<p>$b_1 = \\var{b1} \\qquad h_1 = \\var{h1}\\\\b_2 = \\var{b2}\\qquad h_2 = \\var{h2}$</p>\n<p><strong>Area:</strong></p>\n<p>$A_1 = b_1 h_1 = \\var{A1}$ <strong>&nbsp;</strong></p>\n<p>$A_2 = b_2 h_2 = \\var{A2}$<strong>&nbsp;{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$A_t = A_1 + A_2 = \\var{A1} + &nbsp;\\var{if(B[1]&lt;A[1],'&ndash;','')} \\var{A2} = \\var{A_t}$</p>\n<p><strong>For the <em>x</em>-axis:</strong></p>\n<div data-jme-visible=\"axis='x'\">\n<p>$I_{1x} = \\frac{1}{3}b_1 h_1^3 = \\var{siground(I1x,4)}$</p>\n<p>$I_{2x} = \\bar{I} + A d^2 =&nbsp;&nbsp;\\frac{1}{12} (\\var{B2}) (\\var{H2})^3 +(\\var{A2}) (\\var{dx})^2&nbsp;= \\var{siground(I2x,4)}&nbsp;$ &nbsp;<strong>{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$I_x = I_{1x} +&nbsp;I_{2x} = \\var{siground(I1x,4)} +&nbsp;&nbsp;\\var{if(B[1]&lt;A[1],'&ndash;','')} &nbsp;\\var{siground(I2x,4)} = \\var{siground(I_tx,4)}$</p>\n<p>$k_x = \\sqrt{\\frac{I_x}{A}} &nbsp;= \\var{siground(kx,4)}$</p>\n</div>\n<div data-jme-visible=\"axis='y'\">\n<p><strong>For the centroidal&nbsp;<em>y'</em>-axis:</strong></p>\n<p>$I_{1y'} = \\frac{1}{12}h_1 b_1^3 &nbsp;= \\var{siground(I1y,4)}$</p>\n<p>$I_{2y'} = \\frac{1}{12}h_2 b_2^3 &nbsp;=&nbsp;\\var{siground(I2y,4)} $ <strong>{if(B[1]&lt;A[1],'Removed','')}</strong></p>\n<p>$\\bar{I}_{y'} = I_{1y'} + I_{2y'} = \\var{siground(I1y,4)} + \\var{if(B[1]&lt;A[1],'&ndash;','')} \\var{siground(I2y,4)} = \\var{siground(Ibar_y',4)}$</p>\n<p><strong>For the <em>y</em>-axis, using the parallel axis theorem:</strong></p>\n<p>$I_y = \\bar{I}_{y'}+ A d^2 = \\var{siground(Ibar_y',4)} + (\\var{A_t}) (\\var{dy})^2 = &nbsp;\\var{siground(I_ty,4)}$</p>\n<p>$k_y = \\sqrt{\\frac{I_y}{A}} &nbsp;= \\var{siground(ky,4)}$</p>\n</div>", "rulesets": {}, "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true}, "constants": [], "variables": {"A": {"name": "A", "group": "inputs", "definition": "vector(random(0.5..6#0.5),random(1..9))", "description": "<p>This point is at the half width of rectangle 1</p>", "templateType": "anything", "can_override": false}, "b1": {"name": "b1", "group": "Ungrouped variables", "definition": "qty(2 A[0],units)", "description": "<p>base of rectangle 1</p>", "templateType": "anything", "can_override": false}, "I2y": {"name": "I2y", "group": "Ungrouped variables", "definition": " h2 b2 b2 b2/12", "description": "", "templateType": "anything", "can_override": false}, "units": {"name": "units", "group": "inputs", "definition": "random('in','ft','mm','cm','m')", "description": "", "templateType": "anything", "can_override": false}, "debug": {"name": "debug", "group": "inputs", "definition": "false", "description": "", "templateType": "anything", "can_override": false}, "A_t": {"name": "A_t", "group": "Ungrouped variables", "definition": "A1+ if(B[1]>A[1],1,-1) A2", "description": "", "templateType": "anything", "can_override": false}, "b2": {"name": "b2", "group": "Ungrouped variables", "definition": "qty(2 B[0],units)\n", "description": "<p>base of rectangle 2</p>", "templateType": "anything", "can_override": false}, "dy": {"name": "dy", "group": "Ungrouped variables", "definition": "qty(max(A[0],B[0]),units)", "description": "<p>half width of shape - distance from centroid to y axis.</p>", "templateType": "anything", "can_override": false}, "ky": {"name": "ky", "group": "Ungrouped variables", "definition": "qty(sqrt(scalar(I_ty/A_t)),units)", "description": "", "templateType": "anything", "can_override": false}, "I_tx": {"name": "I_tx", "group": "Ungrouped variables", "definition": "I1x + if(B[1]>A[1],1,-1) I2x", "description": "<p>total moment of inertia wrt</p>", "templateType": "anything", "can_override": false}, "Ibar_y'": {"name": "Ibar_y'", "group": "Ungrouped variables", "definition": "I1y +  if(B[1]>A[1],1,-1) I2y", "description": "", "templateType": "anything", "can_override": false}, "h2": {"name": "h2", "group": "Ungrouped variables", "definition": "qty(abs(A[1]-B[1]),units)", "description": "<p>height of rectangle 2</p>", "templateType": "anything", "can_override": false}, "I_ty": {"name": "I_ty", "group": "Ungrouped variables", "definition": "( I1y + if(B[1]>A[1],1,-1) I2y ) + A_t dy dy", "description": "<p>I_bar_y + A&nbsp;d^2</p>", "templateType": "anything", "can_override": false}, "dx": {"name": "dx", "group": "Ungrouped variables", "definition": "qty((A[1]+B[1])/2,units)", "description": "<p>distance to centroid of rectangle 2 for parallel axis theorem</p>", "templateType": "anything", "can_override": false}, "kx": {"name": "kx", "group": "Ungrouped variables", "definition": "qty(sqrt(scalar(I_tx/A_t)),units)", "description": "", "templateType": "anything", "can_override": false}, "B": {"name": "B", "group": "inputs", "definition": "vector(random(0.5..6#0.5),random(1..9))", "description": "<p>This point is at the half width of rectangle 2.</p>", "templateType": "anything", "can_override": false}, "A1": {"name": "A1", "group": "Ungrouped variables", "definition": "B1 H1", "description": "<p>area of rectangle 1</p>", "templateType": "anything", "can_override": false}, "I2x": {"name": "I2x", "group": "Ungrouped variables", "definition": "(b2 * h2 * h2 * h2)/12 + A2 dx dx\n", "description": "<p>distance up to centroid of rectangle 2</p>", "templateType": "anything", "can_override": false}, "axis": {"name": "axis", "group": "inputs", "definition": "random('x','y')", "description": "", "templateType": "anything", "can_override": false}, "h1": {"name": "h1", "group": "Ungrouped variables", "definition": "qty(A[1],units)", "description": "<p>height of rectangle 1</p>\n<p></p>", "templateType": "anything", "can_override": false}, "I1x": {"name": "I1x", "group": "Ungrouped variables", "definition": "b1 * h1 * h1 * h1/3", "description": "", "templateType": "anything", "can_override": false}, "I1y": {"name": "I1y", "group": "Ungrouped variables", "definition": "(h1 b1 b1 b1)/12", "description": "", "templateType": "anything", "can_override": false}, "A2": {"name": "A2", "group": "Ungrouped variables", "definition": "B2 H2 ", "description": "", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "not(B[0]>A[0] and B[1]<A[1]) and \nnot(B[0]=A[0] or B[1] = A[1]) and\nmod(2 A[0],2) = mod(2 B[0],2)", "maxRuns": 100}, "ungrouped_variables": ["b1", "h1", "b2", "h2", "I1x", "I1y", "I2x", "I2y", "I_tx", "I_ty", "dx", "dy", "A1", "A2", "A_t", "kx", "ky", "Ibar_y'"], "variable_groups": [{"name": "inputs", "variables": ["A", "B", "units", "debug", "axis"]}], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "Area", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the total area of the shape.</p>\n<p>$A$ =&nbsp;[[0]]&nbsp;&nbsp; <span data-jme-visible=\"debug\">{A_t}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "A", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "abs(A_t)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Moment of Inertia", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the moment of inertia of the shape with respect to the <em>{axis}</em>-axis.</p>\n<p>$I_\\var{axis} =$&nbsp;[[0]] &nbsp;<span data-jme-visible=\"debug\">{siground(if(axis='x',I_tx,I_ty),4)}</span></p>\n<p></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$I_\\var{axis} $", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "if(axis='x',I_tx,I_ty)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Radius of gyration", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the radius of gyration of the shape with respect to the <i>{axis}</i>-axis.</p>\n<p>$k_\\var{axis} =$&nbsp;[[0]]&nbsp;<span data-jme-visible=\"debug\"> {siground(if(axis='x',kx,ky),4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$k_\\var{axis}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "if(axis='x',kx,ky)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Moment of inertia: semicircle and hole", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["first moment of area", "Mechanics", "mechanics", "moment of inertia", "parallel axis theorem", "semicircle", "statics", "Statics"], "metadata": {"description": "<p>Find moment of inertia of a shape which requires the use of the parallel axis theorem for a semicircle.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('fqywxznp',{ggbArgs})}</p>\n<p>Determine the moment of inertia and radius of gyration of the composite shape with respect to&nbsp;the <em>x</em>- and <em>y</em>-axes&nbsp;knowing that $b$ = {b}, $h$ = {h}, $r_o$ = {r_o}, and $r_i$ = {display(r_i)}.</p>", "advice": "<p><strong>Number the parts:</strong> &nbsp;</p>\n<p style=\"padding-left: 30px;\">Part 1 rectangle: $b$ = {b}, $h$ = {h}.</p>\n<p style=\"padding-left: 30px;\">Part 2 semicircle: &nbsp;$r_o$ = {r_o}.</p>\n<p style=\"padding-left: 30px;\">Part 3 circular hole: $r_i$ = {display(r_i)}.</p>\n<p><strong>Calculate the areas:</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} A_1 &amp;= b h &amp; A_2 &amp;= &nbsp;\\tfrac{1}{2}\\pi r_o^2 &amp;A_3 &amp;= \\pi r_i^2&amp;A&amp;=A_1 +A_2 - A_3\\\\&amp;=\\var{display(A1)} &amp;&amp;=\\var{display(A2)} &amp;&amp;=\\var{display(A3)}&amp;&amp;=\\var{display(A)}\\\\&amp;&amp;\\end{align}$</p>\n<p><strong>Calculate the moment of inertia with respect to the <em>x</em>-axis.</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\\\{I_1}_x&nbsp;&amp;= \\tfrac{1}{3} b h^3 \\\\&amp;= &nbsp;\\tfrac{1}{3}( \\var{b})(\\var{h})^3 \\\\&amp;= \\var{display(Ix1)} \\\\\\\\{I_x}_2 &amp;= [\\bar{I} + A &nbsp;d^2]_2\\\\ &nbsp;&amp;= 0.1098 r_o^4 + \\left(\\frac{\\pi r_o^2}{2}\\right) \\left(h + \\frac{4 r_o}{3 \\pi}\\right)^2\\\\&amp;= \\var{display(Ibarx2)} + (\\var{display(A2)}) (\\var{display(d2)})^2\\\\&amp;=\\var{display(Ix2)}&nbsp;\\\\\\\\ {I_x}_3 &amp;= [\\bar{I} + A &nbsp;d^2]_3&nbsp;\\\\ &nbsp;&amp;= \\frac{\\pi&nbsp;r_i^4}{4} &nbsp;+ \\left(\\pi r_i^2\\right) \\left(h \\right)^2\\\\&amp;= \\var{display(Ibarx3)} + (\\var{display(A3)}) (\\var{display(h)})^2\\\\&amp;=\\var{display(Ix3)}\\\\\\\\I_x &amp;= {I_x}_1+{I_x}_2-{I_x}_3\\\\&amp;=\\var{display(Ix1)}+\\var{display(Ix2)}-\\var{display(Ix3)}\\\\&amp;=\\var{display(Ix)}\\end{align}$</p>\n<p><strong>Calculate the moment of inertia with respect to the <em>y</em>-axis.</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\\\{I_y}_1 &amp;= \\tfrac{1}{3} h&nbsp;b^3 \\\\&amp;= \\tfrac{1}{3}( \\var{h})(\\var{b})^3 \\\\&amp;= \\var{display(Iy1)} \\\\\\\\{I_y}_2 &amp;= [\\bar{I} + A d^2]_2\\\\ &amp;= \\frac{\\pi&nbsp;r_o^4}{8} + \\left(\\frac{\\pi r_o^2}{2}\\right) \\left(\\frac{b}{2}\\right)^2\\\\&amp;= \\var{display(Ibary2)} + (\\var{display(A2)}) (\\var{display(b/2)})^2\\\\&amp;=\\var{display(Iy2)} \\\\\\\\ {I_y}_3 &amp;= [\\bar{I} + A d^2]_3 \\\\ &amp;= \\frac{\\pi r_i^4}{4} + \\left(\\pi r_i^2\\right) \\left(\\frac{b}{2}&nbsp;\\right)^2\\\\&amp;= \\var{display(Ibary3)} + (\\var{display(A3)}) (\\var{display(b/2)})^2\\\\&amp;=\\var{display(Iy3)}\\\\\\\\I_y &amp;= {I_y}_1+{I_y}_2-{I_y}_3\\\\&amp;=\\var{display(Iy1)}+\\var{display(Iy2)}-\\var{display(Iy3)}\\\\&amp;=\\var{display(Iy)}\\end{align}$</p>\n<p><strong>Calculate the radius of gyration with respect to the <em>x</em>- and <em>y</em>- axes.</strong></p>\n<p style=\"padding-left: 60px;\">$\\begin{align}\\\\k_x &amp;= \\sqrt{\\dfrac{I_x}{A}}&amp;k_y &amp;= \\sqrt{\\dfrac{I_y}{A}}\\\\ &amp;= \\sqrt{\\dfrac{\\var{display(Ix)}}{\\var{display(A)}}}&amp;&amp;= \\sqrt{\\dfrac{\\var{display(Iy)}}{\\var{display(A)}}}\\\\ &amp;= \\var{display(kx)}&nbsp;&amp;&amp;=\\var{display(ky)} \\end{align}$</p>\n<p style=\"padding-left: 60px;\"></p>", "rulesets": {}, "variables": {"A3": {"name": "A3", "group": "Area", "definition": "3.14159 r_i r_i", "description": "", "templateType": "anything"}, "A2": {"name": "A2", "group": "Area", "definition": "3.14159 r_o r_o /2", "description": "", "templateType": "anything"}, "A1": {"name": "A1", "group": "Area", "definition": "b h", "description": "", "templateType": "anything"}, "r_i": {"name": "r_i", "group": "Inputs", "definition": "random(1/3, 0.5, 2/3,0.75) r_o ", "description": "", "templateType": "anything"}, "h": {"name": "h", "group": "Inputs", "definition": "qty(random(2..8),units)", "description": "", "templateType": "anything"}, "Iy": {"name": "Iy", "group": "Iy", "definition": "Iy1 + Iy2 - Iy3", "description": "", "templateType": "anything"}, "Ibary2": {"name": "Ibary2", "group": "Iy", "definition": "3.14159 r_o  r_o  r_o  r_o /8", "description": "", "templateType": "anything"}, "Iy2": {"name": "Iy2", "group": "Iy", "definition": "Ibary2 + A2 b/2 b/2", "description": "", "templateType": "anything"}, "Ix2": {"name": "Ix2", "group": "Ix", "definition": "Ibarx2 + A2 d2 d2", "description": "", "templateType": "anything"}, "Ix1": {"name": "Ix1", "group": "Ix", "definition": "b h h h /3", "description": "<p>rectangle</p>", "templateType": "anything"}, "kx": {"name": "kx", "group": "Ix", "definition": "qty(sqrt(scalar(Ix/A)),units)", "description": "", "templateType": "anything"}, "Ibary3": {"name": "Ibary3", "group": "Iy", "definition": "Ibarx3", "description": "", "templateType": "anything"}, "d2": {"name": "d2", "group": "Ix", "definition": "h + 4 r_o/3/3.14159", "description": "", "templateType": "anything"}, "b": {"name": "b", "group": "Inputs", "definition": "qty(random(4..12#2),units)", "description": "", "templateType": "anything"}, "ky": {"name": "ky", "group": "Iy", "definition": "qty(sqrt(scalar(Iy/A)),units)", "description": "", "templateType": "anything"}, "Ibarx2": {"name": "Ibarx2", "group": "Ix", "definition": "0.1098 r_o r_o r_o r_o", "description": "", "templateType": "anything"}, "Ibarx3": {"name": "Ibarx3", "group": "Ix", "definition": "3.14159 r_i r_i r_i r_i/4", "description": "", "templateType": "anything"}, "Iy3": {"name": "Iy3", "group": "Iy", "definition": "Ibary3 + A3 b/2 b/2", "description": "", "templateType": "anything"}, "ggbArgs": {"name": "ggbArgs", "group": "Inputs", "definition": "[['A',vector(scalar(b),scalar(h))],['R_o',scalar(r_o)],['R_i',scalar(r_i)]]", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "Area", "definition": "A1 + A2 - A3", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "Inputs", "definition": "random('in','cm')", "description": "", "templateType": "anything"}, "r_o": {"name": "r_o", "group": "Inputs", "definition": "qty(random(2..scalar(b)/2),units)", "description": "<p>r</p>", "templateType": "anything"}, "debug": {"name": "debug", "group": "Inputs", "definition": "false", "description": "", "templateType": "anything"}, "Ix3": {"name": "Ix3", "group": "Ix", "definition": "Ibarx3 + A3 h h", "description": "", "templateType": "anything"}, "Iy1": {"name": "Iy1", "group": "Iy", "definition": "h b b b /3", "description": "", "templateType": "anything"}, "Ix": {"name": "Ix", "group": "Ix", "definition": "Ix1 + Ix2 - Ix3", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "r_i < h", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "Inputs", "variables": ["b", "h", "r_o", "r_i", "units", "debug", "ggbArgs"]}, {"name": "Ix", "variables": ["Ix1", "Ibarx2", "Ix2", "d2", "Ibarx3", "Ix3", "Ix", "kx"]}, {"name": "Area", "variables": ["A1", "A2", "A3", "A"]}, {"name": "Iy", "variables": ["Iy1", "Ibary2", "Iy2", "Ibary3", "Iy3", "Iy", "ky"]}], "functions": {"display": {"parameters": [["q", "quantity"]], "type": "string", "language": "jme", "definition": "string(siground(q,4))"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "For the x-axis", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$I_x$ =&nbsp;[[0]] $k_x$ =&nbsp;[[1]]</p>\n<p><span data-jme-visible=\"debug\">{display(Ix)} &nbsp;</span> <span data-jme-visible=\"debug\">{display(kx)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "I", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "k", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "kx", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "For the y axis", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$I_y$ =&nbsp;[[0]] $k_y$ =&nbsp;[[1]]</p>\n<p><span data-jme-visible=\"debug\">{display(Iy)}</span> <span data-jme-visible=\"debug\">{display(ky)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "I", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "k", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "ky", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Centroidal Moment of inertia: T shape", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/Tshape.ggb", "/srv/numbas/media/question-resources/Tshape.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["centroid", "Mechanics", "mechanics", "moment of inertia", "statics", "Statics"], "metadata": {"description": "<p>Find the centroidal moment of inertia of a sideways T shape. This requires first locating the centroid, then applying&nbsp;the parallel axis theorem.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('wfhyktjn',['A':P1, 'B': P2])}</p>\n<p>Determine the moment of inertia of the T&nbsp;shape with respect to&nbsp;a vertical axis passing through the shape's centroid. &nbsp;Let this axis be designated $a$. Grid units are {units}.</p>", "advice": "<p></p>\n<p>Number the parts: &nbsp;</p>\n<p style=\"padding-left: 30px;\">Part 1 horizontal rectangle: $b_1$ = {qty(b1,units)}, $h_1$ = {qty(h1,units)}.</p>\n<p style=\"padding-left: 30px;\">Part 2 vertical rectangle: $b_2$ = {qty(b2,units)}, $h_2$ = {qty(h2,units)}.</p>\n<p style=\"padding-left: 30px;\"></p>\n<p>Calculate the areas:</p>\n<p style=\"padding-left: 30px;\">$ A_1 = b_1 h_1=\\var{qty(A1,units+'^2')}$</p>\n<p style=\"padding-left: 30px;\">$&nbsp;A_2 =&nbsp;b_2 h_2 = \\var{qty(A2,units+'^2')}$</p>\n<p>Locate the centroids of the parts.</p>\n<p style=\"padding-left: 30px;\">&nbsp; &nbsp; $ \\bar{x}_1 = b_1/2 = \\var{qty(d1,units)} \\qquad \\bar{x}_2 = b_1 + b_2/2 = \\var{qty(d2,units)}$</p>\n<p>Locate the centroid of the whole.</p>\n<p style=\"padding-left: 30px;\">&nbsp; &nbsp;$\\bar{x} = \\dfrac{ A_1 \\bar{x}_1 + A_2 \\bar{x}_2} {A_1 + A_2} = \\var{qty(siground(xbar,4),units)}$</p>\n<p style=\"padding-left: 30px;\">&nbsp; &nbsp;$\\bar{y} = \\var{qty(0, units)} $, by symmetry</p>\n<p>Calculate the moment of inertia with respect to the <em>y</em>-axis for&nbsp;the parts and the whole.</p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\\\{I_y}_1 &amp;= \\tfrac{1}{3} h_1 b_1^3 \\\\&amp;= \\tfrac{1}{3}( \\var{h1})(\\var{b1})^3 \\\\&amp;= \\var{qty(display(Iy1),units+'^4')} \\\\\\\\{I_y}_2 &amp;= [\\bar{I} + A d^2]_2\\\\ &amp;= \\frac{1}{12} h_2 b_2^3 + A_2 d_2^2 \\\\&amp;= \\var{display(Ibar2)} + (\\var{display(A2)}) (\\var{display(d2)})^2\\\\&amp;=\\var{qty(display(Iy2),units+'^4')} \\\\\\\\I_y &amp;= {I_y}_1+{I_y}_2\\\\&amp;=\\var{display(Iy1)}+\\var{display(Iy2)}\\\\&amp;=\\var{qty(display(Iy),units+'^4')}\\end{align}$</p>\n<p>Use the parallel axis theorem $I &nbsp;= &nbsp;\\bar{I} + A d^2$ backwards to find the centroidal moment of inertia.</p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\bar{I}_a &amp;= I_y - A (\\bar{x})^2 \\\\&amp;= \\var{display(Iy)} - \\var{display(A)} (\\var{display(xbar)})^2\\\\&amp;=\\var{qty(display(I_a),units+'^4')}\\end{align}$</p>\n<p></p>", "rulesets": {}, "variables": {"A2": {"name": "A2", "group": "Area", "definition": "b2 * h2 ", "description": "", "templateType": "anything"}, "A1": {"name": "A1", "group": "Area", "definition": "b1 h1", "description": "", "templateType": "anything"}, "Iy2": {"name": "Iy2", "group": "Iy", "definition": "h2  b2^3/12 + A2 * (b1 + b2/2)^2", "description": "", "templateType": "anything"}, "ky": {"name": "ky", "group": "Iy", "definition": "sqrt(Iy/A)", "description": "", "templateType": "anything"}, "applet": {"name": "applet", "group": "Inputs", "definition": "//geogebra_file('Tshape.ggb',['A':P1, 'B': P2])\ngeogebra_applet('wfhyktjn',['A':P1, 'B': P2])", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "Area", "definition": "A1 + A2", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "Inputs", "definition": "random('in','cm')", "description": "<p>width of P1</p>", "templateType": "anything"}, "debug": {"name": "debug", "group": "Inputs", "definition": "false", "description": "<p>true</p>", "templateType": "anything"}, "Iy1": {"name": "Iy1", "group": "Iy", "definition": "h1 b1^3/12 + A1 * (b1/2)^2", "description": "", "templateType": "anything"}, "P1": {"name": "P1", "group": "Inputs", "definition": "vector(random(5..12),random(1..2))", "description": "<p>Point A in GGB</p>", "templateType": "anything"}, "P2": {"name": "P2", "group": "Inputs", "definition": "P1 + vector(random(1..3),random(4..6))", "description": "", "templateType": "anything"}, "b1": {"name": "b1", "group": "Inputs", "definition": "P1[0]", "description": "", "templateType": "anything"}, "h1": {"name": "h1", "group": "Inputs", "definition": "2 P1[1]", "description": "<p>height of p1</p>", "templateType": "anything"}, "b2": {"name": "b2", "group": "Inputs", "definition": "p2[0]-p1[0]", "description": "<p>width of p2</p>", "templateType": "anything"}, "h2": {"name": "h2", "group": "Inputs", "definition": "2 p2[1]", "description": "<p>height of p2</p>", "templateType": "anything"}, "ibar1": {"name": "ibar1", "group": "check", "definition": "h1 b1^3/12", "description": "<p>centroidal moi</p>", "templateType": "anything"}, "Ibar2": {"name": "Ibar2", "group": "check", "definition": "h2 b2^3/12", "description": "", "templateType": "anything"}, "d1": {"name": "d1", "group": "check", "definition": "b1/2", "description": "", "templateType": "anything"}, "d2": {"name": "d2", "group": "check", "definition": "b1 + b2/2", "description": "", "templateType": "anything"}, "Iy1'": {"name": "Iy1'", "group": "check", "definition": "ibar1 + A1 d1^2", "description": "<p>alternate calculation of Iy</p>", "templateType": "anything"}, "Iy2'": {"name": "Iy2'", "group": "check", "definition": "Ibar2 + a2 d2^2", "description": "", "templateType": "anything"}, "Iy": {"name": "Iy", "group": "check", "definition": "Iy1' + Iy2'", "description": "<p>Moment of intertia about y axis</p>", "templateType": "anything"}, "Qy": {"name": "Qy", "group": "check", "definition": "A1 d1 + A2 d2", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "check", "definition": "Qy/A", "description": "", "templateType": "anything"}, "I_a": {"name": "I_a", "group": "check", "definition": "Iy - A xbar^2", "description": "<p>Centroidal moment of inertia of total shape</p>", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "Inputs", "variables": ["units", "debug", "applet", "P1", "P2", "b1", "h1", "b2", "h2"]}, {"name": "Area", "variables": ["A1", "A2", "A"]}, {"name": "Iy", "variables": ["Iy1", "Iy2", "ky"]}, {"name": "check", "variables": ["ibar1", "Ibar2", "d1", "d2", "Iy1'", "Iy2'", "Iy", "Qy", "xbar", "I_a"]}], "functions": {"display": {"parameters": [["q", "number"]], "type": "number", "language": "jme", "definition": "(siground(q,4))"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "Centroid", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$\\bar{x} = $ [[0]]&nbsp;$\\qquad \\bar{y} = $&nbsp;[[1]]</p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "xbar", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "qty(xbar,units)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "ybar", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "qty(0,units)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "For the $a$ axis", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>$\\bar{I}_a$ = [[0]]&nbsp;<span data-jme-visible=\"debug\">{display(I_a')}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_{a}$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "qty(I_a, units+'^4')", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Centroidal moment of inertia: box beam", "extensions": ["geogebra", "quantities", "weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Mechanics", "mechanics", "moment of inertia", "parallel axis theorem", "rectangular beam", "Statics", "statics"], "metadata": {"description": "<p>Calculate the centroidal moment of intertia of a rectangle with a excentric rectangular hole.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('pv5edgwm',[[\"A\",A],[\"B\",B]])}</p>\n<p>The cross-section of a hollow box beam is shown. &nbsp;Grid units are [{units}].&nbsp;</p>", "advice": "<p><strong>Part 1: Big Rectangle:</strong></p>\n<p style=\"padding-left: 30px;\">$b_1$ = {b1}, $h_1$ = {h1}, &nbsp;$A_1$ = {A1}, $\\bar{y}_1$ = {ybar1}</p>\n<p><strong>Part 2: Small rectangle (removed):</strong></p>\n<p style=\"padding-left: 30px;\">$b_2$ = {b2}, $h_2$ = {h2}, &nbsp;$A_2$ = {A2}, $\\bar{y}_2$ = {ybar2}</p>\n<p><strong>Total Area:</strong></p>\n<p style=\"padding-left: 30px;\">$A = \\Sigma A_i = A_1 - A_2 =$ {display(Area)}</p>\n<p><strong>Centroid:</strong></p>\n<p style=\"padding-left: 30px;\">$\\bar{y} = \\dfrac{\\Sigma A_i \\bar{y}_i}{\\Sigma A_i} = \\dfrac{A_1 \\bar{y}_1 - A_2 \\bar{y}_2}{ A_1 - A_2}$ = {display(ybar)}</p>\n<p><strong>Moments of inerta about the <em>x</em>&nbsp;axis:</strong></p>\n<p style=\"padding-left: 30px;\">$I_{x_1} = \\dfrac{b_1 (h_1)^3}{3} = $ {display(Ix1)}</p>\n<p style=\"padding-left: 30px;\">$I_{x_2}= \\bar{I} + A d^2 = \\dfrac{b_2&nbsp;(h_2)^3}{12} + A_2 (\\bar{y}_2)^2 = $ {display(Ix2)}</p>\n<p style=\"padding-left: 30px;\">$I_x = I_{x_1} - I_{x_2}= $ {display(Ix)}</p>\n<p><strong>Centroidal Moment of inertia:</strong></p>\n<p style=\"padding-left: 30px;\">Using the parallel axis theorem,</p>\n<p style=\"padding-left: 30px;\">$I = \\bar{I} + A d^2 \\implies&nbsp;\\bar{I}_x= I_x - A (\\bar{y})^2$ = {display(Ibar)}</p>", "rulesets": {}, "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true}, "constants": [], "variables": {"Ix1": {"name": "Ix1", "group": "Unnamed group", "definition": "b1 h1 h1 h1/3", "description": "", "templateType": "anything", "can_override": false}, "b1": {"name": "b1", "group": "Unnamed group", "definition": "qty(A[0],units)", "description": "<p>base for large rectangle</p>", "templateType": "anything", "can_override": false}, "A": {"name": "A", "group": "Ungrouped variables", "definition": "vector(random(4..20#2),random(8..18))", "description": "<p>top right corner of large rectangle</p>", "templateType": "anything", "can_override": false}, "Area": {"name": "Area", "group": "Unnamed group", "definition": "A1-A2", "description": "", "templateType": "anything", "can_override": false}, "ybar": {"name": "ybar", "group": "Unnamed group", "definition": "(A1 ybar1 - A2 ybar2)/(A1-A2)", "description": "", "templateType": "anything", "can_override": false}, "A1": {"name": "A1", "group": "Unnamed group", "definition": "b1 h1", "description": "", "templateType": "anything", "can_override": false}, "debug": {"name": "debug", "group": "Ungrouped variables", "definition": "false", "description": "", "templateType": "anything", "can_override": false}, "Ibar": {"name": "Ibar", "group": "Unnamed group", "definition": "Ix - area ybar ybar", "description": "", "templateType": "anything", "can_override": false}, "t": {"name": "t", "group": "Ungrouped variables", "definition": "random(1..3)", "description": "<p>thickness of sides and top</p>", "templateType": "anything", "can_override": false}, "Ix": {"name": "Ix", "group": "Unnamed group", "definition": "Ix1 - Ix2", "description": "", "templateType": "anything", "can_override": false}, "b2": {"name": "b2", "group": "Unnamed group", "definition": "qty(A[0] - 2 t,units)", "description": "", "templateType": "anything", "can_override": false}, "h2": {"name": "h2", "group": "Unnamed group", "definition": "qty(A[1]-t - B[1],units)", "description": "", "templateType": "anything", "can_override": false}, "ybar1": {"name": "ybar1", "group": "Unnamed group", "definition": "h1/2", "description": "", "templateType": "anything", "can_override": false}, "B": {"name": "B", "group": "Ungrouped variables", "definition": "vector(t, random(2..(A[1]-t-1)))", "description": "", "templateType": "anything", "can_override": false}, "h1": {"name": "h1", "group": "Unnamed group", "definition": "qty(A[1],units)", "description": "<p>height of large rectangle</p>", "templateType": "anything", "can_override": false}, "Ix2": {"name": "Ix2", "group": "Unnamed group", "definition": "b2 h2 h2 h2 /12 + A2 ybar2 ybar2", "description": "", "templateType": "anything", "can_override": false}, "ybar2": {"name": "ybar2", "group": "Unnamed group", "definition": "qty(B[1] + scalar(h2/2),units)", "description": "", "templateType": "anything", "can_override": false}, "A2": {"name": "A2", "group": "Unnamed group", "definition": "b2 h2", "description": "", "templateType": "anything", "can_override": false}, "units": {"name": "units", "group": "Ungrouped variables", "definition": "random('in','mm','cm','ft')", "description": "", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "B[0]<A[0]/2 and\nybar1<>ybar2", "maxRuns": 100}, "ungrouped_variables": ["t", "A", "B", "units", "debug"], "variable_groups": [{"name": "Unnamed group", "variables": ["b1", "h1", "b2", "h2", "A1", "A2", "ybar", "ybar1", "ybar2", "Ix1", "Ix2", "Ix", "Area", "Ibar"]}], "functions": {"display": {"parameters": [["q", "quantity"]], "type": "string", "language": "jme", "definition": "string(siground(q,5))"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the vertical location of the centroid of the cross section. &nbsp;</p>\n<p>$\\bar{y} = $&nbsp;[[0]] <span data-jme-visible=\"debug\">{display(ybar)}</span></p>\n<p>Determine the moment of inertia of the shape about a horizontal ${x'}$ axis (the <em>neutral axis</em>) passing through the centroid. &nbsp;</p>\n<p>${I_{x'} = }$&nbsp;[[1]] <span data-jme-visible=\"debug\">{display(Ibar)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "{ybar}", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "{Ibar}", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}]}, {"name": "Standard Sections", "pickingStrategy": "all-ordered", "pickQuestions": 1, "questionNames": ["Built-up beam with angles", "2 angles forming box beam", "2 channels and 2 plates"], "variable_overrides": [[], [], []], "questions": [{"name": "Moment of inertia: built-up beam with angles", "extensions": ["geogebra", "quantities", "weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/plate-angles.ggb", "/srv/numbas/media/question-resources/plate-angles.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["beam", "Mechanics", "mechanics", "moment of inertia", "neutral axis", "parallel axis theorem", "standard sections", "Statics", "statics"], "metadata": {"description": "<p>Find the centroid and the centroidal moments of inertia for a beam composed&nbsp;of a flat plate and&nbsp;two angle sections.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('vvcydmsb',['A': A,'d': scalar(depth),'C':[ definition: C, fixed: true]])}</p>\n<p>A built-up beam is made up of two {name} angles&nbsp;welded to a {b} $\\times$ {h} plate, as shown in cross section below. &nbsp;</p>\n<p></p>\n<p>Use this&nbsp;<a href=\"https://weh.maritime.edu/mechanics/HW/reference/unequalangle.html\">table of properties</a>&nbsp;for the angle sections.</p>", "advice": "<p>Let the rectangle be designated by subscript $R$, the rectangle by $L$, and the total composite shape by $T$.</p>\n<p><strong>Find rectangle properties</strong></p>\n<p style=\"padding-left: 30px;\">$b = \\var{b}, h = \\var{h}$</p>\n<p style=\"padding-left: 30px;\">$A_R = b&nbsp;\\cdot h = \\var{A_R}$</p>\n<p style=\"padding-left: 30px;\">$\\bar{y}_R = h/2 = \\var{ybar_R}$</p>\n<p><strong>Find the angle properties</strong></p>\n<p style=\"padding-left: 30px;\">From the table:</p>\n<p style=\"padding-left: 60px;\">$A_L= \\var{A_L}$,</p>\n<p style=\"padding-left: 60px;\">$\\bar{x}=\\var{xbar}, \\bar{y} = \\var{ybar}$, &nbsp;</p>\n<p style=\"padding-left: 60px;\">$I_{xx} = \\var{Ixx}, I_{yy} = \\var{Iyy}$</p>\n<p><strong>Find the centroid of the angle shapes</strong></p>\n<p style=\"padding-left: 30px;\">Note that&nbsp;the angle shape is rotated 90&deg; from the table diagram.</p>\n<p style=\"padding-left: 30px;\">Measuring from the&nbsp;bottom center of the rectangle:</p>\n<p style=\"padding-left: 30px;\">$\\bar{y}_L = h + \\bar{x} = \\var{ybar_L}$&nbsp;</p>\n<p style=\"padding-left: 30px;\">$\\bar{x}_L = \\pm (b/2 - \\bar{y}) = \\pm \\var{xbar_L}$</p>\n<p><strong>Find the centroid of composite shape</strong></p>\n<p style=\"padding-left: 30px;\">Measuring from the bottom center of the rectangle:</p>\n<p style=\"padding-left: 30px;\">$\\begin{align}A_T &amp;= &nbsp;A_R + 2\\, A_L \\\\&amp;= \\var{A_R} + 2 \\,(\\var{A_L})\\\\ &amp;=\\var{A_T}\\end{align}\\\\$</p>\n<p><strong>&nbsp; &nbsp; &nbsp; &nbsp;</strong>$\\bar{x}_T = 0$, by symmetry.</p>\n<p style=\"padding-left: 30px;\">$\\\\\\begin{align} &nbsp;\\bar{y}_T &amp;= \\dfrac{\\Sigma A_i \\bar{y}_i}{\\Sigma A_i}\\\\ &amp;=\\dfrac{A_R \\bar{y}_R + 2\\, A_L&nbsp;\\bar{y}_L}{A_T}\\\\&amp;= \\dfrac{(\\var{A_R}) (\\var{ybar_R}) + 2\\, (\\var{A_L}) (\\var{ybar_L})}{\\var{A_T} }\\\\&amp;=\\var{disp(ybar_T)} = \\bar{y}\\end{align}$&nbsp;</p>\n<p><strong>Find the moment of inertia about the centroidal <em>y-</em> axis</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\bar{I}_y &amp;= (I_y)_R + 2\\, (I_y)_L\\\\&amp;= \\frac{h b^3}{12} + 2\\, [\\bar{I} + A d^2]_L\\\\ &amp;=\\frac{h b^3}{12} + 2\\, [I_{xx} + A_L (\\bar{x}_L)^2]\\\\ &amp;=\\frac{(\\var{h})(\\var{b})^3}{12} + 2\\, [\\var{Ixx} + (\\var{A_L}) (\\var{xbar_L})^2]\\\\&amp;=\\var{disp(Iy_R)} + 2\\,[\\var{disp(Iy_L)}] \\\\&amp;=\\var{disp(Iy_T)}\\end{align}$</p>\n<p><strong>Find the moment of inertia about the x-axis</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} I_x &amp;= (I_x)_R + 2\\, (I_x)_L\\\\&amp;= \\frac{b&nbsp;h^3}{3} + 2\\, [\\bar{I} + A d^2]_L\\\\ &amp;=\\frac{b&nbsp;h^3}{3} + 2\\, [I_{yy} + A_L (\\bar{y}_L)^2]\\\\ &amp;=\\frac{(\\var{b})(\\var{h})^3}{3} + 2\\, [\\var{Iyy} + (\\var{A_L}) (\\var{ybar_L})^2]\\\\&amp;= \\var{disp(Ix_r)} + 2\\, [\\var{disp(Ix_L)}]\\\\&amp;=\\var{disp(Ix_T)}\\end{align}$</p>\n<p><strong>Use the parallel axis theorem to find the moment of inertia about the centroidal x'-axis</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} I &amp;= \\bar{I} + A d^2 \\\\ \\bar{I}_{x'} &amp;= I_x - A d^2\\\\&nbsp;&amp;=I_x - A_T (\\bar{y}_T)^2\\\\ &amp;=\\var{disp(Ix_T)}&nbsp;- (\\var{A_T}) (\\var{disp(ybar_T)})^2\\\\&amp;=\\var{disp(Ibarx')}\\end{align}$</p>\n<p><strong>Find the radius of gyration with respect to the $x'$- axis.</strong></p>\n<p style=\"padding-left: 30px;\">$\\begin{align} k_{x'} &amp;= \\sqrt{\\dfrac{\\bar{I}_{x'}}{A_T}} \\\\&amp;=\\sqrt{\\dfrac{\\var{disp(Ibarx')}}{\\var{A_T}}} \\\\&amp;=\\var{disp(kx')}\\end{align}$&nbsp;</p>", "rulesets": {}, "variables": {"debug": {"name": "debug", "group": "Setup values", "definition": "false", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "Setup values", "definition": "vector(scalar(b)/2,scalar(h))", "description": "<p>coordinates of top right corner of rectangle</p>", "templateType": "anything"}, "Ibarx'": {"name": "Ibarx'", "group": "MOI", "definition": "Ix_T - A_T ybar_T ybar_T", "description": "", "templateType": "anything"}, "ybar_T": {"name": "ybar_T", "group": "centroid", "definition": "Qx/A_T", "description": "", "templateType": "anything"}, "index": {"name": "index", "group": "Setup values", "definition": "random(0..14)", "description": "<p>i</p>", "templateType": "anything"}, "h": {"name": "h", "group": "Setup values", "definition": "qty(random(0.5..2#0.5),'in')", "description": "<p>height of rectangle</p>", "templateType": "anything"}, "xbar_L": {"name": "xbar_L", "group": "centroid", "definition": "b/2 - ybar", "description": "", "templateType": "anything"}, "A_T": {"name": "A_T", "group": "centroid", "definition": "A_R + 2 A_L", "description": "", "templateType": "anything"}, "name": {"name": "name", "group": "angle properties", "definition": "[\"L9  $\\\\times$  4  $\\\\times$  1/2\",\"L8  $\\\\times$  6  $\\\\times$  5/8\",\"L8  $\\\\times$  6  $\\\\times$  1/2\",\"L8  $\\\\times$  4  $\\\\times$  3/4\",\"L8  $\\\\times$  4  $\\\\times$  1/2\",\"L7  $\\\\times$  4  $\\\\times$  3/4\",\"L7  $\\\\times$  4  $\\\\times$  5/8\",\"L7  $\\\\times$  4  $\\\\times$  1/2\",\"L7  $\\\\times$  4  $\\\\times$  3/8\",\"L6  $\\\\times$  4  $\\\\times$  7/8\",\"L6  $\\\\times$  4  $\\\\times$  3/4\",\"L6  $\\\\times$  4  $\\\\times$  1/2\",\"L6  $\\\\times$  4  $\\\\times$  3/8\",\"L5  $\\\\times$  3  $\\\\times$  5/8\",\"L5  $\\\\times$  3  $\\\\times$  1/2\"][index]", "description": "", "templateType": "anything"}, "Ix_L": {"name": "Ix_L", "group": "MOI", "definition": "Iyy + A_L ybar_L ybar_L", "description": "", "templateType": "anything"}, "C": {"name": "C", "group": "Setup values", "definition": "vector(0,scalar(ybar_T))", "description": "<p>centroid of composite shape as a point for geogebra</p>", "templateType": "anything"}, "Iy_L": {"name": "Iy_L", "group": "MOI", "definition": "Ixx + A_L xbar_L xbar_L", "description": "", "templateType": "anything"}, "kx'": {"name": "kx'", "group": "MOI", "definition": "qty(sqrt(scalar(Ibarx'/A_T)),'in')", "description": "", "templateType": "anything"}, "ybar": {"name": "ybar", "group": "angle properties", "definition": "qty([3.31,2.52,2.47,2.95,2.86,2.51,2.46,2.42,2.37,2.12,2.08,1.99,1.94,1.8,1.75][index],'in')", "description": "", "templateType": "anything"}, "Ixx": {"name": "Ixx", "group": "angle properties", "definition": "qty([53.2,54.1,44.3,54.9,38.5,37.8,32.4,26.7,20.6,27.7,24.5,17.4,13.5,11.4,9.45][index],'in^4')", "description": "", "templateType": "anything"}, "b": {"name": "b", "group": "Setup values", "definition": "qty(random(2..4#0.5) scalar(depth),'in')", "description": "<p>base width of rectangle</p>", "templateType": "anything"}, "Iy_T": {"name": "Iy_T", "group": "MOI", "definition": "Iy_R + 2 Iy_L", "description": "", "templateType": "anything"}, "ybar_R": {"name": "ybar_R", "group": "centroid", "definition": "h/2", "description": "", "templateType": "anything"}, "A_L": {"name": "A_L", "group": "angle properties", "definition": "qty([6.25,8.36,6.75,8.44,5.75,7.69,6.48,5.25,3.98,7.98,6.94,4.75,3.61,4.61,3.75][index],'in^2')", "description": "", "templateType": "anything"}, "Qx": {"name": "Qx", "group": "centroid", "definition": "A_R ybar_R + 2 A_L ybar_L", "description": "", "templateType": "anything"}, "Iy_R": {"name": "Iy_R", "group": "MOI", "definition": "h b b b/12", "description": "", "templateType": "anything"}, "depth": {"name": "depth", "group": "angle properties", "definition": "qty([9,8,8,8,8,7,7,7,7,6,6,6,6,5,5][index],'in')", "description": "", "templateType": "anything"}, "Ix_R": {"name": "Ix_R", "group": "MOI", "definition": "b h h h/3", "description": "", "templateType": "anything"}, "ybar_L": {"name": "ybar_L", "group": "centroid", "definition": "h + xbar", "description": "", "templateType": "anything"}, "Iyy": {"name": "Iyy", "group": "angle properties", "definition": "qty([6.92,26.3,21.7,9.36,6.74,9.05,7.84,6.53,5.1,9.75,8.68,6.27,4.9,3.06,2.58][index],'in^4')", "description": "", "templateType": "anything"}, "Ix_T": {"name": "Ix_T", "group": "MOI", "definition": "Ix_R + 2 Ix_L", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "angle properties", "definition": "qty([0.81,1.52,1.47,0.953,0.859,1.01,0.963,0.917,0.87,1.12,1.08,0.987,0.941,0.796,0.75][index],'in')", "description": "", "templateType": "anything"}, "A_R": {"name": "A_R", "group": "centroid", "definition": "b h", "description": "", "templateType": "anything"}, "applet": {"name": "applet", "group": "Setup values", "definition": "geogebra_file('resources/question-resources/plate-angles.ggb',[\n    'A': A,\n    'd': scalar(depth),\n    'C':[definition:  C, fixed: true]\n  ]\n)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "angle properties", "variables": ["name", "depth", "A_L", "Ixx", "ybar", "Iyy", "xbar"]}, {"name": "centroid", "variables": ["A_R", "A_T", "ybar_R", "ybar_L", "xbar_L", "Qx", "ybar_T"]}, {"name": "MOI", "variables": ["Ix_R", "Ix_L", "Ix_T", "Iy_R", "Iy_L", "Iy_T", "Ibarx'", "kx'"]}, {"name": "Setup values", "variables": ["index", "b", "h", "A", "C", "debug", "applet"]}], "functions": {"disp": {"parameters": [["q", "quantity"]], "type": "quantity", "language": "jme", "definition": "siground(q,4)"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Find the area of the composite shape.</p>\n<p>$A_T = $&nbsp;[[0]] <span data-jme-visible=\"debug\">{A_T}</span></p>\n<p>Find the distance between the $x$ axis at&nbsp;the bottom of the plate&nbsp;and the parallel $x'$ axis passing&nbsp;through&nbsp;the centroid of the composite shape.</p>\n<p>$\\bar{y} = $&nbsp;[[1]] <span data-jme-visible=\"debug\">{ybar_T}</span></p>\n<p>Find the moment of inertia of the composite shape about the centroidal $y$ axis.</p>\n<p>$\\bar{I}_y = $&nbsp;[[2]] <span data-jme-visible=\"debug\">{Iy_T}</span></p>\n<p>Find the moment of inertia of the composite shape about the $x$-axis&nbsp;</p>\n<p>$I_x=$&nbsp;[[3]] <span data-jme-visible=\"debug\">{Ix_T}</span></p>\n<p>Use the parallel axis theorem to find the moment of inertia of the composite shape about the centroidal $x'$-axis.</p>\n<p>$\\bar{I}_{x'}= $&nbsp;[[4]] <span data-jme-visible=\"debug\">{Ibarx'}</span></p>\n<p>Find the corresponding radius of gyration</p>\n<p>$k_{x'} = $&nbsp;[[5]] <span data-jme-visible=\"debug\">{kx'}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$A$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "A_T", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{y}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "ybar_T", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_y$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy_T", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_x$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix_T", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_{x'}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ibarx'", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$k_{x'}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "kx'", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Moment of inertia: 2 angles forming box beam", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/2boxbeams_aMoCPFM.ggb", "/srv/numbas/media/question-resources/2boxbeams_aMoCPFM.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["Mechanics", "mechanics", "moment of inertia", "radius of gyration", "standard sections", "Statics", "statics"], "metadata": {"description": "<p>Find&nbsp;centroidal moments of inertia and radius of gyration for a beam composed&nbsp;of &nbsp;two angle sections forming a box beam.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>{geogebra_applet('u9qngrny',[['h',h],['w',w],['t',t],['P',centroid]])}</p>\n<p>A built-up beam is made up of two {name} angles&nbsp;welded together to form a box beam. &nbsp;</p>\n<p>Use this&nbsp;<a href=\"https://weh.maritime.edu/mechanics/HW/reference/unequalangle.html\">table of properties</a>&nbsp;for the angle sections.</p>", "advice": "<p><strong>Channel properties from table</strong></p>\n<p>$\\begin{align}\\text{Area:}&amp; &amp;A&amp;= \\var{A_L}\\\\\\text{Centroid:} &amp; &amp;\\bar{x} &amp;= \\var{xbar} &amp; &nbsp;\\bar{y} &amp;= \\var{ybar}\\\\\\text{MOI:} &amp;&amp; \\bar{I}_{xx} &amp;= \\var{ixx} &amp;&nbsp;\\bar{I}_{yy} &amp;= \\var{Iyy}\\end{align}$</p>\n<p>These properties are for angle sections oriented with the long side vertical.</p>\n<p><strong>Find moment of inertia</strong></p>\n<p><strong></strong>$\\bar{I}_y = 2 \\, [ \\bar{I} + A d^2]$ where,</p>\n<p style=\"padding-left: 30px;\">$\\bar{I} = \\var{latex(if(rotated,safe('\\\\bar{I}_{xx}'),safe('\\\\bar{I}_{yy}')))} =\\var{Ibar_y'}$</p>\n<p style=\"padding-left: 30px;\">$A =\\var{A_L}$, and</p>\n<p style=\"padding-left: 30px;\">$d = \\left(\\dfrac{w+t}{2}-\\var{latex(if(rotated,safe('\\\\bar{y}'),safe('\\\\bar{x}')))} \\right)= \\var{d_x}$, so</p>\n<p style=\"padding-left: 30px;\">$\\bar{I}_y = \\var{disp(Iy)}\\\\$</p>\n<p>$\\bar{I}_x = 2 \\, [ \\bar{I} + A d^2]$ where,</p>\n<p style=\"padding-left: 30px;\">$\\bar{I} = \\var{latex(if(rotated,safe('\\\\bar{I}_{yy}'),safe('\\\\bar{I}_{xx}')))} =\\var{Ibar_x'}$</p>\n<p style=\"padding-left: 30px;\">$A =\\var{A_L}$, and</p>\n<p style=\"padding-left: 30px;\">$d =\\left( \\dfrac{h}{2}-\\var{latex(if(rotated,safe('\\\\bar{x}'),safe('\\\\bar{y}')))}\\right) = \\var{d_y}$, so&nbsp;</p>\n<p style=\"padding-left: 30px;\">$\\bar{I}_x&nbsp;= \\var{disp(Ix)}\\\\$</p>\n<p><strong>Find Radii of gyration</strong></p>\n<p style=\"padding-left: 30px;\">$k_x = \\sqrt{\\dfrac{\\bar{I}_x} {2 A}} = \\var{disp(kx)} \\qquad&nbsp;k_y = \\sqrt{\\dfrac{\\bar{I}_y} {2 A}} = \\var{disp(ky)}$</p>\n<p style=\"padding-left: 30px;\"></p>", "rulesets": {}, "variables": {"name": {"name": "name", "group": "angle properties", "definition": "[\"L9  $\\\\times$  4  $\\\\times$  1/2\",\"L8  $\\\\times$  6  $\\\\times$  5/8\",\"L8  $\\\\times$  6  $\\\\times$  1/2\",\"L8  $\\\\times$  4  $\\\\times$  3/4\",\"L8  $\\\\times$  4  $\\\\times$  1/2\",\"L7  $\\\\times$  4  $\\\\times$  3/4\",\"L7  $\\\\times$  4  $\\\\times$  5/8\",\"L7  $\\\\times$  4  $\\\\times$  1/2\",\"L7  $\\\\times$  4  $\\\\times$  3/8\",\"L6  $\\\\times$  4  $\\\\times$  7/8\",\"L6  $\\\\times$  4  $\\\\times$  3/4\",\"L6  $\\\\times$  4  $\\\\times$  1/2\",\"L6  $\\\\times$  4  $\\\\times$  3/8\",\"L5  $\\\\times$  3  $\\\\times$  5/8\",\"L5  $\\\\times$  3  $\\\\times$  1/2\"][index]", "description": "", "templateType": "anything"}, "centroid": {"name": "centroid", "group": "Setup values", "definition": "if(rotated,\n  vector(scalar(ybar),scalar(xbar)), \n  vector(scalar(xbar),scalar(ybar)))", "description": "<p>true indicates long side is horizontal</p>", "templateType": "anything"}, "h": {"name": "h", "group": "Setup values", "definition": "dimensions[if(rotated,1,0)]", "description": "", "templateType": "anything"}, "t": {"name": "t", "group": "Setup values", "definition": "dimensions[2]", "description": "", "templateType": "anything"}, "kx": {"name": "kx", "group": "MOI", "definition": "qty(sqrt(scalar(Ix)/(2 scalar(A_L))),'in')", "description": "<p>k</p>", "templateType": "anything"}, "w": {"name": "w", "group": "Setup values", "definition": "dimensions[if(rotated,0,1)]", "description": "<p>w</p>", "templateType": "anything"}, "ybar": {"name": "ybar", "group": "angle properties", "definition": "qty([3.31,2.52,2.47,2.95,2.86,2.51,2.46,2.42,2.37,2.12,2.08,1.99,1.94,1.8,1.75][index],'in')", "description": "", "templateType": "anything"}, "ky": {"name": "ky", "group": "MOI", "definition": "qty(sqrt(scalar(Iy)/(2 scalar(A_L))),'in')", "description": "", "templateType": "anything"}, "A_L": {"name": "A_L", "group": "angle properties", "definition": "qty([6.25,8.36,6.75,8.44,5.75,7.69,6.48,5.25,3.98,7.98,6.94,4.75,3.61,4.61,3.75][index],'in^2')", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "angle properties", "definition": "qty([0.81,1.52,1.47,0.953,0.859,1.01,0.963,0.917,0.87,1.12,1.08,0.987,0.941,0.796,0.75][index],'in')", "description": "", "templateType": "anything"}, "debug": {"name": "debug", "group": "Setup values", "definition": "false", "description": "", "templateType": "anything"}, "Ixx": {"name": "Ixx", "group": "angle properties", "definition": "qty([53.2,54.1,44.3,54.9,38.5,37.8,32.4,26.7,20.6,27.7,24.5,17.4,13.5,11.4,9.45][index],'in^4')", "description": "", "templateType": "anything"}, "Ix": {"name": "Ix", "group": "MOI", "definition": "2 (Ibar_x'+A_L d_y d_y)", "description": "<p>MOI of box around x axis</p>", "templateType": "anything"}, "rotated": {"name": "rotated", "group": "Setup values", "definition": " random(false,true)", "description": "", "templateType": "anything"}, "Iy": {"name": "Iy", "group": "MOI", "definition": "2(Ibar_y' + A_L d_x d_x)", "description": "<p>MOI of&nbsp;box around &nbsp;y axis</p>", "templateType": "anything"}, "d_x": {"name": "d_x", "group": "MOI", "definition": "qty(w + t,'in')/2 - if(rotated,ybar,xbar)", "description": "<p>horizontal&nbsp;distance from centroid of angle to y&nbsp;axis</p>", "templateType": "anything"}, "Ibar_x'": {"name": "Ibar_x'", "group": "MOI", "definition": "if(rotated,Iyy,Ixx)", "description": "<p>centroidal MOI for angle about its centroid</p>", "templateType": "anything"}, "dimensions": {"name": "dimensions", "group": "angle properties", "definition": "[[9, 4, 1/2], [8, 6, 5/8], [8, 6, 1/2], [8, 4, 3/4], [8, 4, 1/2], [7, 4, 3/4], [7, 4, 5/8], [7, 4, 1/2], [7, 4, 3/8], [6, 4, 7/8], [6, 4, 3/4], [6, 4, 1/2], [6, 4, 3/8], [5, 3, 5/8], [5, 3, 1/2]][index]\n", "description": "", "templateType": "anything"}, "Ibar_y'": {"name": "Ibar_y'", "group": "MOI", "definition": "if(rotated,Ixx,Iyy)", "description": "<p>centroidal MOI for angle about its centroid&nbsp;</p>", "templateType": "anything"}, "index": {"name": "index", "group": "Setup values", "definition": "random(0..14)", "description": "<p>i</p>", "templateType": "anything"}, "d_y": {"name": "d_y", "group": "MOI", "definition": "qty(h/2,'in')- if(rotated,xbar,ybar)", "description": "<p>vertical distance from centroid of angle to x axis</p>", "templateType": "anything"}, "Iyy": {"name": "Iyy", "group": "angle properties", "definition": "qty([6.92,26.3,21.7,9.36,6.74,9.05,7.84,6.53,5.1,9.75,8.68,6.27,4.9,3.06,2.58][index],'in^4')", "description": "", "templateType": "anything"}, "applet": {"name": "applet", "group": "angle properties", "definition": "geogebra_file('resources/question-resources/2boxbeams_aMoCPFM.ggb',[['h',h],['w',w],['t',t],['P',centroid]])", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "angle properties", "variables": ["name", "A_L", "Ixx", "Iyy", "xbar", "ybar", "dimensions", "applet"]}, {"name": "MOI", "variables": ["Ibar_y'", "Ibar_x'", "d_x", "d_y", "Ix", "Iy", "kx", "ky"]}, {"name": "Setup values", "variables": ["index", "debug", "rotated", "centroid", "h", "w", "t"]}], "functions": {"disp": {"parameters": [["q", "quantity"]], "type": "quantity", "language": "jme", "definition": "siground(q,4)"}, "applet": {"parameters": [], "type": "ggbapplet", "language": "javascript", "definition": ""}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Find the moment of inertia and radius of gyration with respect to the <em>x</em> axis.</p>\n<p>$\\bar{I}_x = $[[0]] $\\quad k_x = $[[1]]</p>\n<p>Find the moment of inertial and radius of gyration with respect to the <em>y</em> axis.</p>\n<p>$\\bar{I}_y = $[[2]] $\\quad k_y = $[[3]]</p>\n<p></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_x$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$k_x$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "kx", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$\\bar{I}_y$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "$k_y$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "ky", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Moment of inertia: 2 channels and 2 plates", "extensions": ["geogebra", "polynomials", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/channel_EfJjxiR.png", "/srv/numbas/media/question-resources/channel_EfJjxiR.png"], ["question-resources/builtupbeam.ggb", "/srv/numbas/media/question-resources/builtupbeam.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["built-up beam", "Mechanics", "mechanics", "moment of inertia", "radius of gyration", "standard sections", "Statics", "statics"], "metadata": {"description": "<p>Find moment of inertia and radius of gyration for a built-up beam made of two channels and two plates.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>A built-up beam is constructed by welding two channels separated by a distance $b = \\var{b}$ to two ({w} $\\times$ {h}) plates.</p>\n<table height=\"34\" style=\"width: 548px;\">\n<tbody>\n<tr>\n<td style=\"width: 223.390625px; text-align: left;\">{geogebra_applet('rgft4vzy',[\"b\":ggb(b),'bf': ggb(bf),'w': ggb(w) ,'d': ggb(d),'t': ggb(t),'h': ggb(h)])}</td>\n<td style=\"width: 501.609375px; text-align: left;\">\n<div style=\"float: right;\">\n<p><strong>Channel properties:</strong></p>\n<p>$\\begin{align}\\var{desc}\\\\\\text{Area}&amp;= \\var{A_C} \\\\D&nbsp;&amp;= \\var{d} \\\\b_f &amp;= \\var{bf}\\\\\\bar{x} &amp;= \\var{xbar}\\\\\\bar{I}_{xx} &amp;= \\var{Ibarx_C} \\\\\\bar{I}_{yy} &amp;= \\var{Ibary_C}\\end{align}$</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<p></p>\n<p></p>", "advice": "<p><strong></strong><strong>Determine moment of inertia with respect to the <em>x</em>-axis</strong></p>\n<p style=\"padding-left: 30px;\"><strong></strong>For the channel, since the&nbsp;x-axis passes through its centroid:</p>\n<p style=\"padding-left: 60px;\">$(I_x)_C = \\bar{I}_{xx} =&nbsp;\\var{Ibarx_C} $</p>\n<p style=\"padding-left: 30px;\">For the plate, the <em>x</em>-axis does not pass through its&nbsp;centroid&nbsp;so&nbsp;the parallel axis theorem must be used.</p>\n<p style=\"padding-left: 60px;\">$(I_x)_R = [\\bar{I} + A d^2] $ where,</p>\n<p style=\"padding-left: 90px;\">$\\bar{I} = \\dfrac{b h^3}{12} = \\dfrac{(\\var{w})(\\var{h})^3}{12} = \\var{siground(Ibarx_R,4)}$</p>\n<p style=\"padding-left: 90px;\">$A &nbsp;= b h = (\\var{w})\\,(\\var{h}) = \\var{A_r}$</p>\n<p style=\"padding-left: 90px;\">$d = D/2 + h/2 = \\dfrac{\\var{d}+ \\var{h}}{2} = \\var{d_y} $</p>\n<p style=\"padding-left: 60px;\">$(I_x)_R = \\var{disp(Ix_R)}$</p>\n<p style=\"padding-left: 30px;\">For the composite shape,</p>\n<p style=\"padding-left: 60px;\">$A = 2 [A_C + A_R] = \\var{disp(A_T)}$</p>\n<p style=\"padding-left: 60px;\">$I_x = 2 [ (I_x)_C + (I_x)_R ] = \\var{disp(Ix)}$, and &nbsp;$k_x = \\sqrt{\\dfrac{I_x}{A}} = \\var{disp(kx)}$</p>\n<p style=\"padding-left: 90px;\"></p>\n<p><strong>Determine moment of inertia with respect to the <em>y-</em>axis</strong></p>\n<p style=\"padding-left: 30px;\">For the rectangle, since the y-axis passes through its centroid:</p>\n<p style=\"padding-left: 60px;\">$(I_y)_R = \\dfrac{h b^3}{12}&nbsp;= \\dfrac{(\\var{h}) (\\var{w})^3}{12} = \\var{disp(Ibary_r)}$</p>\n<p style=\"padding-left: 30px;\">For the channel, the y-axis does not pass through its centroid so the parallel axis theorem must be used.</p>\n<p style=\"padding-left: 60px;\">$(I_y)_C = [\\bar{I} + A d^2] $ where,</p>\n<p style=\"padding-left: 90px;\">$\\bar{I} = \\bar{I}_{yy} = \\var{Ibary_C}$</p>\n<p style=\"padding-left: 90px;\">$A = A_C&nbsp;= \\var{A_C}$</p>\n<p style=\"padding-left: 90px;\">$d = b/2 + \\bar{x}&nbsp;= \\dfrac{\\var{b}}{2} + \\var{xbar}= \\var{d_x} $</p>\n<p style=\"padding-left: 90px;\">$(I_y)_C = \\var{disp(Iy_C)}$</p>\n<p style=\"padding-left: 30px;\">For the composite shape,</p>\n<p style=\"padding-left: 60px;\">$A = 2 [A_C + A_R] = \\var{disp(A_T)}$</p>\n<p style=\"padding-left: 60px;\">$I_y = 2 [ (I_y)_C + (I_y)_R ] = \\var{disp(Iy)}$, and&nbsp;$k_y = \\sqrt{\\dfrac{I_y}{A}} = \\var{disp(ky)}$</p>\n<p style=\"padding-left: 60px;\"><strong>&nbsp;</strong></p>\n<p style=\"padding-left: 60px;\"></p>", "rulesets": {}, "variables": {"xbar": {"name": "xbar", "group": "Channel Properties", "definition": "qty(C_data['x'][unit], if(unit=0,'in','mm'))", "description": "<p>horizontal distance to centroid from flange</p>", "templateType": "anything"}, "A_t": {"name": "A_t", "group": "Solution", "definition": "2(A_r+A_C)", "description": "", "templateType": "anything"}, "Ibarx_c": {"name": "Ibarx_c", "group": "Channel Properties", "definition": "C_data['Ix'][unit] * if(unit=0,qty('in^4'),qty(10^6,'mm^4'))", "description": "", "templateType": "anything"}, "ky": {"name": "ky", "group": "Solution", "definition": "sqrt(scalar(Iy/A_t)) units", "description": "", "templateType": "anything"}, "d_y": {"name": "d_y", "group": "Solution", "definition": "d/2 + h/2", "description": "", "templateType": "anything"}, "index": {"name": "index", "group": "Ungrouped variables", "definition": "random(0..length(data)-1)", "description": "<p>random channel index</p>", "templateType": "anything"}, "A_r": {"name": "A_r", "group": "Solution", "definition": "w h", "description": "", "templateType": "anything"}, "C_data": {"name": "C_data", "group": "Channel Properties", "definition": "data[index]", "description": "<p>hash of data for selected channel</p>", "templateType": "anything"}, "kx": {"name": "kx", "group": "Solution", "definition": "sqrt(scalar(Ix/A_t)) units", "description": "", "templateType": "anything"}, "A_C": {"name": "A_C", "group": "Channel Properties", "definition": "qty(C_data['A'][unit], if(unit=0,'in^2','mm^2'))", "description": "<p>area of channel</p>", "templateType": "anything"}, "unit": {"name": "unit", "group": "Ungrouped variables", "definition": "random(0,1)", "description": "<p>0 = inches, 1 = mm</p>", "templateType": "anything"}, "Iy_C": {"name": "Iy_C", "group": "Solution", "definition": "Ibary_C + A_c d_x d_x", "description": "", "templateType": "anything"}, "Ix": {"name": "Ix", "group": "Solution", "definition": "2 (Ibarx_c + Ix_r)", "description": "", "templateType": "anything"}, "bf": {"name": "bf", "group": "Channel Properties", "definition": "qty(C_data['bf'][unit], if(unit=0,'in','mm'))", "description": "<p>flange width</p>", "templateType": "anything"}, "Iy": {"name": "Iy", "group": "Solution", "definition": "2 (Iy_C + Ibary_R)", "description": "", "templateType": "anything"}, "w": {"name": "w", "group": "Ungrouped variables", "definition": "round ((b/2 + bf + t ) 2 , if(unit=0,'1 in', '10 mm'))", "description": "<p>width&nbsp;of plate &nbsp;a little longer than necessary</p>", "templateType": "anything"}, "t": {"name": "t", "group": "Channel Properties", "definition": "qty(C_data['tf'][unit], if(unit=0,'in','mm'))", "description": "", "templateType": "anything"}, "d_x": {"name": "d_x", "group": "Solution", "definition": "b/2 + xbar", "description": "", "templateType": "anything"}, "d": {"name": "d", "group": "Channel Properties", "definition": "qty(C_data['d'][unit], if(unit=0,'in','mm'))", "description": "<p>depth of channel</p>", "templateType": "anything"}, "Ibary_c": {"name": "Ibary_c", "group": "Channel Properties", "definition": "C_data['Iy'][unit] * if(unit=0,qty('in^4'),qty(10^6,'mm^4'))", "description": "<p>centroidal momentof inertia</p>", "templateType": "anything"}, "Desc": {"name": "Desc", "group": "Channel Properties", "definition": "C_data['DESC'][unit] ", "description": "<p>designation</p>", "templateType": "anything"}, "Ix_R": {"name": "Ix_R", "group": "Solution", "definition": "Ibarx_r + A_r d_y d_y", "description": "", "templateType": "anything"}, "h": {"name": "h", "group": "Ungrouped variables", "definition": "round(random(1..3#0.1)t,if(unit=0,'0.125 in', '5 mm'))", "description": "<p>width of plate</p>", "templateType": "anything"}, "Ibarx_r": {"name": "Ibarx_r", "group": "Solution", "definition": "w h h h /12", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "Channel Properties", "definition": "qty(if(unit=0,'in','mm'))", "description": "", "templateType": "anything"}, "Ibary_R": {"name": "Ibary_R", "group": "Solution", "definition": "h w w w /12", "description": "", "templateType": "anything"}, "data": {"name": "data", "group": "Channel Properties", "definition": "json_decode(safe(\"[\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C15$\\\\\\\\times$50\\\",\\n      \\\"C380$\\\\\\\\times$74\\\"\\n    ],\\n    \\\"W\\\": [\\n      50,\\n      74\\n    ],\\n    \\\"A\\\": [\\n      14.7,\\n      9480\\n    ],\\n    \\\"d\\\": [\\n      15,\\n      381\\n    ],\\n    \\\"bf\\\": [\\n      3.72,\\n      94.5\\n    ],\\n    \\\"tw\\\": [\\n      0.716,\\n      18.2\\n    ],\\n    \\\"tf\\\": [\\n      0.65,\\n      16.5\\n    ],\\n    \\\"x\\\": [\\n      0.799,\\n      20.3\\n    ],\\n    \\\"Ix\\\": [\\n      404,\\n      168\\n    ],\\n    \\\"Iy\\\": [\\n      11,\\n      4.58\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C15$\\\\\\\\times$40\\\",\\n      \\\"C380$\\\\\\\\times$60\\\"\\n    ],\\n    \\\"W\\\": [\\n      40,\\n      60\\n    ],\\n    \\\"A\\\": [\\n      11.8,\\n      7610\\n    ],\\n    \\\"d\\\": [\\n      15,\\n      381\\n    ],\\n    \\\"bf\\\": [\\n      3.52,\\n      89.4\\n    ],\\n    \\\"tw\\\": [\\n      0.52,\\n      13.2\\n    ],\\n    \\\"tf\\\": [\\n      0.65,\\n      16.5\\n    ],\\n    \\\"x\\\": [\\n      0.778,\\n      19.8\\n    ],\\n    \\\"Ix\\\": [\\n      348,\\n      145\\n    ],\\n    \\\"Iy\\\": [\\n      9.17,\\n      3.82\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C15$\\\\\\\\times$33.9\\\",\\n      \\\"C380$\\\\\\\\times$50.4\\\"\\n    ],\\n    \\\"W\\\": [\\n      33.9,\\n      50.4\\n    ],\\n    \\\"A\\\": [\\n      10,\\n      6450\\n    ],\\n    \\\"d\\\": [\\n      15,\\n      381\\n    ],\\n    \\\"bf\\\": [\\n      3.4,\\n      86.4\\n    ],\\n    \\\"tw\\\": [\\n      0.4,\\n      10.2\\n    ],\\n    \\\"tf\\\": [\\n      0.65,\\n      16.5\\n    ],\\n    \\\"x\\\": [\\n      0.788,\\n      20\\n    ],\\n    \\\"Ix\\\": [\\n      315,\\n      131\\n    ],\\n    \\\"Iy\\\": [\\n      8.07,\\n      3.36\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C12$\\\\\\\\times$30\\\",\\n      \\\"C310$\\\\\\\\times$45\\\"\\n    ],\\n    \\\"W\\\": [\\n      30,\\n      45\\n    ],\\n    \\\"A\\\": [\\n      8.81,\\n      5680\\n    ],\\n    \\\"d\\\": [\\n      12,\\n      305\\n    ],\\n    \\\"bf\\\": [\\n      3.17,\\n      80.5\\n    ],\\n    \\\"tw\\\": [\\n      0.51,\\n      13\\n    ],\\n    \\\"tf\\\": [\\n      0.501,\\n      12.7\\n    ],\\n    \\\"x\\\": [\\n      0.674,\\n      17.1\\n    ],\\n    \\\"Ix\\\": [\\n      162,\\n      67.4\\n    ],\\n    \\\"Iy\\\": [\\n      5.12,\\n      2.13\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C12$\\\\\\\\times$25\\\",\\n      \\\"C310$\\\\\\\\times$37\\\"\\n    ],\\n    \\\"W\\\": [\\n      25,\\n      37\\n    ],\\n    \\\"A\\\": [\\n      7.34,\\n      4740\\n    ],\\n    \\\"d\\\": [\\n      12,\\n      305\\n    ],\\n    \\\"bf\\\": [\\n      3.05,\\n      77.5\\n    ],\\n    \\\"tw\\\": [\\n      0.387,\\n      9.83\\n    ],\\n    \\\"tf\\\": [\\n      0.501,\\n      12.7\\n    ],\\n    \\\"x\\\": [\\n      0.674,\\n      17.1\\n    ],\\n    \\\"Ix\\\": [\\n      144,\\n      59.9\\n    ],\\n    \\\"Iy\\\": [\\n      4.45,\\n      1.85\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C12$\\\\\\\\times$20.7\\\",\\n      \\\"C310$\\\\\\\\times$30.8\\\"\\n    ],\\n    \\\"W\\\": [\\n      20.7,\\n      30.8\\n    ],\\n    \\\"A\\\": [\\n      6.08,\\n      3920\\n    ],\\n    \\\"d\\\": [\\n      12,\\n      305\\n    ],\\n    \\\"bf\\\": [\\n      2.94,\\n      74.7\\n    ],\\n    \\\"tw\\\": [\\n      0.282,\\n      7.16\\n    ],\\n    \\\"tf\\\": [\\n      0.501,\\n      12.7\\n    ],\\n    \\\"x\\\": [\\n      0.698,\\n      17.7\\n    ],\\n    \\\"Ix\\\": [\\n      129,\\n      53.7\\n    ],\\n    \\\"Iy\\\": [\\n      3.86,\\n      1.61\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C10$\\\\\\\\times$30\\\",\\n      \\\"C250$\\\\\\\\times$45\\\"\\n    ],\\n    \\\"W\\\": [\\n      30,\\n      45\\n    ],\\n    \\\"A\\\": [\\n      8.81,\\n      5680\\n    ],\\n    \\\"d\\\": [\\n      10,\\n      254\\n    ],\\n    \\\"bf\\\": [\\n      3.03,\\n      77\\n    ],\\n    \\\"tw\\\": [\\n      0.673,\\n      17.1\\n    ],\\n    \\\"tf\\\": [\\n      0.436,\\n      11.1\\n    ],\\n    \\\"x\\\": [\\n      0.649,\\n      16.5\\n    ],\\n    \\\"Ix\\\": [\\n      103,\\n      42.9\\n    ],\\n    \\\"Iy\\\": [\\n      3.93,\\n      1.64\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C10$\\\\\\\\times$25\\\",\\n      \\\"C250$\\\\\\\\times$37\\\"\\n    ],\\n    \\\"W\\\": [\\n      25,\\n      37\\n    ],\\n    \\\"A\\\": [\\n      7.35,\\n      4740\\n    ],\\n    \\\"d\\\": [\\n      10,\\n      254\\n    ],\\n    \\\"bf\\\": [\\n      2.89,\\n      73.4\\n    ],\\n    \\\"tw\\\": [\\n      0.526,\\n      13.4\\n    ],\\n    \\\"tf\\\": [\\n      0.436,\\n      11.1\\n    ],\\n    \\\"x\\\": [\\n      0.617,\\n      15.7\\n    ],\\n    \\\"Ix\\\": [\\n      91.1,\\n      37.9\\n    ],\\n    \\\"Iy\\\": [\\n      3.34,\\n      1.39\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C10$\\\\\\\\times$20\\\",\\n      \\\"C250$\\\\\\\\times$30\\\"\\n    ],\\n    \\\"W\\\": [\\n      20,\\n      30\\n    ],\\n    \\\"A\\\": [\\n      5.87,\\n      3790\\n    ],\\n    \\\"d\\\": [\\n      10,\\n      254\\n    ],\\n    \\\"bf\\\": [\\n      2.74,\\n      69.6\\n    ],\\n    \\\"tw\\\": [\\n      0.379,\\n      9.63\\n    ],\\n    \\\"tf\\\": [\\n      0.436,\\n      11.1\\n    ],\\n    \\\"x\\\": [\\n      0.606,\\n      15.4\\n    ],\\n    \\\"Ix\\\": [\\n      78.9,\\n      32.8\\n    ],\\n    \\\"Iy\\\": [\\n      2.8,\\n      1.17\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C10$\\\\\\\\times$15.3\\\",\\n      \\\"C250$\\\\\\\\times$22.8\\\"\\n    ],\\n    \\\"W\\\": [\\n      15.3,\\n      22.8\\n    ],\\n    \\\"A\\\": [\\n      4.48,\\n      2890\\n    ],\\n    \\\"d\\\": [\\n      10,\\n      254\\n    ],\\n    \\\"bf\\\": [\\n      2.6,\\n      66\\n    ],\\n    \\\"tw\\\": [\\n      0.24,\\n      6.1\\n    ],\\n    \\\"tf\\\": [\\n      0.436,\\n      11.1\\n    ],\\n    \\\"x\\\": [\\n      0.634,\\n      16.1\\n    ],\\n    \\\"Ix\\\": [\\n      67.3,\\n      28\\n    ],\\n    \\\"Iy\\\": [\\n      2.27,\\n      0.945\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C9$\\\\\\\\times$20\\\",\\n      \\\"C230$\\\\\\\\times$30\\\"\\n    ],\\n    \\\"W\\\": [\\n      20,\\n      30\\n    ],\\n    \\\"A\\\": [\\n      5.87,\\n      3790\\n    ],\\n    \\\"d\\\": [\\n      9,\\n      229\\n    ],\\n    \\\"bf\\\": [\\n      2.65,\\n      67.3\\n    ],\\n    \\\"tw\\\": [\\n      0.448,\\n      11.4\\n    ],\\n    \\\"tf\\\": [\\n      0.413,\\n      10.5\\n    ],\\n    \\\"x\\\": [\\n      0.583,\\n      14.8\\n    ],\\n    \\\"Ix\\\": [\\n      60.9,\\n      25.3\\n    ],\\n    \\\"Iy\\\": [\\n      2.41,\\n      1\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C9$\\\\\\\\times$15\\\",\\n      \\\"C230$\\\\\\\\times$22\\\"\\n    ],\\n    \\\"W\\\": [\\n      15,\\n      22\\n    ],\\n    \\\"A\\\": [\\n      4.4,\\n      2840\\n    ],\\n    \\\"d\\\": [\\n      9,\\n      229\\n    ],\\n    \\\"bf\\\": [\\n      2.49,\\n      63.2\\n    ],\\n    \\\"tw\\\": [\\n      0.285,\\n      7.24\\n    ],\\n    \\\"tf\\\": [\\n      0.413,\\n      10.5\\n    ],\\n    \\\"x\\\": [\\n      0.586,\\n      14.9\\n    ],\\n    \\\"Ix\\\": [\\n      51,\\n      21.2\\n    ],\\n    \\\"Iy\\\": [\\n      1.91,\\n      0.795\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C9$\\\\\\\\times$13.4\\\",\\n      \\\"C230$\\\\\\\\times$19.9\\\"\\n    ],\\n    \\\"W\\\": [\\n      13.4,\\n      19.9\\n    ],\\n    \\\"A\\\": [\\n      3.94,\\n      2540\\n    ],\\n    \\\"d\\\": [\\n      9,\\n      229\\n    ],\\n    \\\"bf\\\": [\\n      2.43,\\n      61.7\\n    ],\\n    \\\"tw\\\": [\\n      0.233,\\n      5.92\\n    ],\\n    \\\"tf\\\": [\\n      0.413,\\n      10.5\\n    ],\\n    \\\"x\\\": [\\n      0.601,\\n      15.3\\n    ],\\n    \\\"Ix\\\": [\\n      47.8,\\n      19.9\\n    ],\\n    \\\"Iy\\\": [\\n      1.75,\\n      0.728\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C8$\\\\\\\\times$18.75\\\",\\n      \\\"C200$\\\\\\\\times$27.9\\\"\\n    ],\\n    \\\"W\\\": [\\n      18.75,\\n      27.9\\n    ],\\n    \\\"A\\\": [\\n      5.51,\\n      3550\\n    ],\\n    \\\"d\\\": [\\n      8,\\n      203\\n    ],\\n    \\\"bf\\\": [\\n      2.53,\\n      64.3\\n    ],\\n    \\\"tw\\\": [\\n      0.487,\\n      12.4\\n    ],\\n    \\\"tf\\\": [\\n      0.39,\\n      9.91\\n    ],\\n    \\\"x\\\": [\\n      0.565,\\n      14.4\\n    ],\\n    \\\"Ix\\\": [\\n      43.9,\\n      18.3\\n    ],\\n    \\\"Iy\\\": [\\n      1.97,\\n      0.82\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C8$\\\\\\\\times$13.75\\\",\\n      \\\"C200$\\\\\\\\times$20.5\\\"\\n    ],\\n    \\\"W\\\": [\\n      13.75,\\n      20.5\\n    ],\\n    \\\"A\\\": [\\n      4.03,\\n      2600\\n    ],\\n    \\\"d\\\": [\\n      8,\\n      203\\n    ],\\n    \\\"bf\\\": [\\n      2.34,\\n      59.4\\n    ],\\n    \\\"tw\\\": [\\n      0.303,\\n      7.7\\n    ],\\n    \\\"tf\\\": [\\n      0.39,\\n      9.91\\n    ],\\n    \\\"x\\\": [\\n      0.554,\\n      14.1\\n    ],\\n    \\\"Ix\\\": [\\n      36.1,\\n      15\\n    ],\\n    \\\"Iy\\\": [\\n      1.52,\\n      0.633\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C8$\\\\\\\\times$11.5\\\",\\n      \\\"C200$\\\\\\\\times$17.1\\\"\\n    ],\\n    \\\"W\\\": [\\n      11.5,\\n      17.1\\n    ],\\n    \\\"A\\\": [\\n      3.37,\\n      2170\\n    ],\\n    \\\"d\\\": [\\n      8,\\n      203\\n    ],\\n    \\\"bf\\\": [\\n      2.26,\\n      57.4\\n    ],\\n    \\\"tw\\\": [\\n      0.22,\\n      5.59\\n    ],\\n    \\\"tf\\\": [\\n      0.39,\\n      9.91\\n    ],\\n    \\\"x\\\": [\\n      0.572,\\n      14.5\\n    ],\\n    \\\"Ix\\\": [\\n      32.5,\\n      13.5\\n    ],\\n    \\\"Iy\\\": [\\n      1.31,\\n      0.545\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C7$\\\\\\\\times$14.75\\\",\\n      \\\"C180$\\\\\\\\times$22\\\"\\n    ],\\n    \\\"W\\\": [\\n      14.75,\\n      22\\n    ],\\n    \\\"A\\\": [\\n      4.33,\\n      2790\\n    ],\\n    \\\"d\\\": [\\n      7,\\n      178\\n    ],\\n    \\\"bf\\\": [\\n      2.3,\\n      58.4\\n    ],\\n    \\\"tw\\\": [\\n      0.419,\\n      10.6\\n    ],\\n    \\\"tf\\\": [\\n      0.366,\\n      9.3\\n    ],\\n    \\\"x\\\": [\\n      0.532,\\n      13.5\\n    ],\\n    \\\"Ix\\\": [\\n      27.2,\\n      11.3\\n    ],\\n    \\\"Iy\\\": [\\n      1.37,\\n      0.57\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C7$\\\\\\\\times$12.25\\\",\\n      \\\"C180$\\\\\\\\times$18.2\\\"\\n    ],\\n    \\\"W\\\": [\\n      12.25,\\n      18.2\\n    ],\\n    \\\"A\\\": [\\n      3.59,\\n      2320\\n    ],\\n    \\\"d\\\": [\\n      7,\\n      178\\n    ],\\n    \\\"bf\\\": [\\n      2.19,\\n      55.6\\n    ],\\n    \\\"tw\\\": [\\n      0.314,\\n      7.98\\n    ],\\n    \\\"tf\\\": [\\n      0.366,\\n      9.3\\n    ],\\n    \\\"x\\\": [\\n      0.525,\\n      13.3\\n    ],\\n    \\\"Ix\\\": [\\n      24.2,\\n      10.1\\n    ],\\n    \\\"Iy\\\": [\\n      1.16,\\n      0.483\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C7$\\\\\\\\times$9.8\\\",\\n      \\\"C180$\\\\\\\\times$14.6\\\"\\n    ],\\n    \\\"W\\\": [\\n      9.8,\\n      14.6\\n    ],\\n    \\\"A\\\": [\\n      2.87,\\n      1850\\n    ],\\n    \\\"d\\\": [\\n      7,\\n      178\\n    ],\\n    \\\"bf\\\": [\\n      2.09,\\n      53.1\\n    ],\\n    \\\"tw\\\": [\\n      0.21,\\n      5.33\\n    ],\\n    \\\"tf\\\": [\\n      0.366,\\n      9.3\\n    ],\\n    \\\"x\\\": [\\n      0.541,\\n      13.7\\n    ],\\n    \\\"Ix\\\": [\\n      21.2,\\n      8.82\\n    ],\\n    \\\"Iy\\\": [\\n      0.957,\\n      0.398\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C6$\\\\\\\\times$13\\\",\\n      \\\"C150$\\\\\\\\times$19.3\\\"\\n    ],\\n    \\\"W\\\": [\\n      13,\\n      19.3\\n    ],\\n    \\\"A\\\": [\\n      3.82,\\n      2460\\n    ],\\n    \\\"d\\\": [\\n      6,\\n      152\\n    ],\\n    \\\"bf\\\": [\\n      2.16,\\n      54.9\\n    ],\\n    \\\"tw\\\": [\\n      0.437,\\n      11.1\\n    ],\\n    \\\"tf\\\": [\\n      0.343,\\n      8.71\\n    ],\\n    \\\"x\\\": [\\n      0.514,\\n      13.1\\n    ],\\n    \\\"Ix\\\": [\\n      17.3,\\n      7.2\\n    ],\\n    \\\"Iy\\\": [\\n      1.05,\\n      0.437\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C6$\\\\\\\\times$10.5\\\",\\n      \\\"C150$\\\\\\\\times$15.6\\\"\\n    ],\\n    \\\"W\\\": [\\n      10.5,\\n      15.6\\n    ],\\n    \\\"A\\\": [\\n      3.07,\\n      1980\\n    ],\\n    \\\"d\\\": [\\n      6,\\n      152\\n    ],\\n    \\\"bf\\\": [\\n      2.03,\\n      51.6\\n    ],\\n    \\\"tw\\\": [\\n      0.314,\\n      7.98\\n    ],\\n    \\\"tf\\\": [\\n      0.343,\\n      8.71\\n    ],\\n    \\\"x\\\": [\\n      0.5,\\n      12.7\\n    ],\\n    \\\"Ix\\\": [\\n      15.1,\\n      6.29\\n    ],\\n    \\\"Iy\\\": [\\n      0.86,\\n      0.358\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C6$\\\\\\\\times$8.2\\\",\\n      \\\"C150$\\\\\\\\times$12.2\\\"\\n    ],\\n    \\\"W\\\": [\\n      8.2,\\n      12.2\\n    ],\\n    \\\"A\\\": [\\n      2.39,\\n      1540\\n    ],\\n    \\\"d\\\": [\\n      6,\\n      152\\n    ],\\n    \\\"bf\\\": [\\n      1.92,\\n      48.8\\n    ],\\n    \\\"tw\\\": [\\n      0.2,\\n      5.08\\n    ],\\n    \\\"tf\\\": [\\n      0.343,\\n      8.71\\n    ],\\n    \\\"x\\\": [\\n      0.512,\\n      13\\n    ],\\n    \\\"Ix\\\": [\\n      13.1,\\n      5.45\\n    ],\\n    \\\"Iy\\\": [\\n      0.687,\\n      0.286\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C5$\\\\\\\\times$9\\\",\\n      \\\"C130$\\\\\\\\times$13\\\"\\n    ],\\n    \\\"W\\\": [\\n      9,\\n      13\\n    ],\\n    \\\"A\\\": [\\n      2.64,\\n      1700\\n    ],\\n    \\\"d\\\": [\\n      5,\\n      127\\n    ],\\n    \\\"bf\\\": [\\n      1.89,\\n      48\\n    ],\\n    \\\"tw\\\": [\\n      0.325,\\n      8.26\\n    ],\\n    \\\"tf\\\": [\\n      0.32,\\n      8.13\\n    ],\\n    \\\"x\\\": [\\n      0.478,\\n      12.1\\n    ],\\n    \\\"Ix\\\": [\\n      8.89,\\n      3.7\\n    ],\\n    \\\"Iy\\\": [\\n      0.624,\\n      0.26\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C5$\\\\\\\\times$6.7\\\",\\n      \\\"C130$\\\\\\\\times$10.4\\\"\\n    ],\\n    \\\"W\\\": [\\n      6.7,\\n      10.4\\n    ],\\n    \\\"A\\\": [\\n      1.97,\\n      1270\\n    ],\\n    \\\"d\\\": [\\n      5,\\n      127\\n    ],\\n    \\\"bf\\\": [\\n      1.75,\\n      44.5\\n    ],\\n    \\\"tw\\\": [\\n      0.19,\\n      4.83\\n    ],\\n    \\\"tf\\\": [\\n      0.32,\\n      8.13\\n    ],\\n    \\\"x\\\": [\\n      0.484,\\n      12.3\\n    ],\\n    \\\"Ix\\\": [\\n      7.48,\\n      3.11\\n    ],\\n    \\\"Iy\\\": [\\n      0.47,\\n      0.196\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C4$\\\\\\\\times$7.25\\\",\\n      \\\"C100$\\\\\\\\times$10.8\\\"\\n    ],\\n    \\\"W\\\": [\\n      7.25,\\n      10.8\\n    ],\\n    \\\"A\\\": [\\n      2.13,\\n      1370\\n    ],\\n    \\\"d\\\": [\\n      4,\\n      102\\n    ],\\n    \\\"bf\\\": [\\n      1.72,\\n      43.7\\n    ],\\n    \\\"tw\\\": [\\n      0.321,\\n      8.15\\n    ],\\n    \\\"tf\\\": [\\n      0.296,\\n      7.52\\n    ],\\n    \\\"x\\\": [\\n      0.459,\\n      11.7\\n    ],\\n    \\\"Ix\\\": [\\n      4.58,\\n      1.91\\n    ],\\n    \\\"Iy\\\": [\\n      0.425,\\n      0.177\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C4$\\\\\\\\times$6.25\\\",\\n      \\\"C100$\\\\\\\\times$9.3\\\"\\n    ],\\n    \\\"W\\\": [\\n      6.25,\\n      9.3\\n    ],\\n    \\\"A\\\": [\\n      1.84,\\n      1190\\n    ],\\n    \\\"d\\\": [\\n      4,\\n      102\\n    ],\\n    \\\"bf\\\": [\\n      1.65,\\n      41.9\\n    ],\\n    \\\"tw\\\": [\\n      0.247,\\n      6.27\\n    ],\\n    \\\"tf\\\": [\\n      0.296,\\n      7.52\\n    ],\\n    \\\"x\\\": [\\n      0.453,\\n      11.5\\n    ],\\n    \\\"Ix\\\": [\\n      4.19,\\n      1.74\\n    ],\\n    \\\"Iy\\\": [\\n      0.374,\\n      0.156\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C4$\\\\\\\\times$5.4\\\",\\n      \\\"C100$\\\\\\\\times$8\\\"\\n    ],\\n    \\\"W\\\": [\\n      5.4,\\n      8\\n    ],\\n    \\\"A\\\": [\\n      1.58,\\n      1020\\n    ],\\n    \\\"d\\\": [\\n      4,\\n      102\\n    ],\\n    \\\"bf\\\": [\\n      1.58,\\n      40.1\\n    ],\\n    \\\"tw\\\": [\\n      0.184,\\n      4.67\\n    ],\\n    \\\"tf\\\": [\\n      0.296,\\n      7.52\\n    ],\\n    \\\"x\\\": [\\n      0.457,\\n      11.6\\n    ],\\n    \\\"Ix\\\": [\\n      3.85,\\n      1.6\\n    ],\\n    \\\"Iy\\\": [\\n      0.312,\\n      0.13\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C4$\\\\\\\\times$4.5\\\",\\n      \\\"C100$\\\\\\\\times$6.7\\\"\\n    ],\\n    \\\"W\\\": [\\n      4.5,\\n      6.7\\n    ],\\n    \\\"A\\\": [\\n      1.34,\\n      865\\n    ],\\n    \\\"d\\\": [\\n      4,\\n      102\\n    ],\\n    \\\"bf\\\": [\\n      1.52,\\n      38.6\\n    ],\\n    \\\"tw\\\": [\\n      0.125,\\n      3.18\\n    ],\\n    \\\"tf\\\": [\\n      0.296,\\n      7.52\\n    ],\\n    \\\"x\\\": [\\n      0.473,\\n      12\\n    ],\\n    \\\"Ix\\\": [\\n      3.53,\\n      1.47\\n    ],\\n    \\\"Iy\\\": [\\n      0.265,\\n      0.11\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C3$\\\\\\\\times$6\\\",\\n      \\\"C75$\\\\\\\\times$8.9\\\"\\n    ],\\n    \\\"W\\\": [\\n      6,\\n      8.9\\n    ],\\n    \\\"A\\\": [\\n      1.76,\\n      1140\\n    ],\\n    \\\"d\\\": [\\n      3,\\n      76.2\\n    ],\\n    \\\"bf\\\": [\\n      1.6,\\n      40.6\\n    ],\\n    \\\"tw\\\": [\\n      0.356,\\n      9.04\\n    ],\\n    \\\"tf\\\": [\\n      0.273,\\n      6.93\\n    ],\\n    \\\"x\\\": [\\n      0.455,\\n      11.6\\n    ],\\n    \\\"Ix\\\": [\\n      2.07,\\n      0.862\\n    ],\\n    \\\"Iy\\\": [\\n      0.3,\\n      0.125\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C3$\\\\\\\\times$5\\\",\\n      \\\"C75$\\\\\\\\times$7.4\\\"\\n    ],\\n    \\\"W\\\": [\\n      5,\\n      7.4\\n    ],\\n    \\\"A\\\": [\\n      1.47,\\n      948\\n    ],\\n    \\\"d\\\": [\\n      3,\\n      76.2\\n    ],\\n    \\\"bf\\\": [\\n      1.5,\\n      38.1\\n    ],\\n    \\\"tw\\\": [\\n      0.258,\\n      6.55\\n    ],\\n    \\\"tf\\\": [\\n      0.273,\\n      6.93\\n    ],\\n    \\\"x\\\": [\\n      0.439,\\n      11.2\\n    ],\\n    \\\"Ix\\\": [\\n      1.85,\\n      0.77\\n    ],\\n    \\\"Iy\\\": [\\n      0.241,\\n      0.1\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C3$\\\\\\\\times$4.1\\\",\\n      \\\"C75$\\\\\\\\times$6.1\\\"\\n    ],\\n    \\\"W\\\": [\\n      4.1,\\n      6.1\\n    ],\\n    \\\"A\\\": [\\n      1.2,\\n      774\\n    ],\\n    \\\"d\\\": [\\n      3,\\n      76.2\\n    ],\\n    \\\"bf\\\": [\\n      1.41,\\n      35.8\\n    ],\\n    \\\"tw\\\": [\\n      0.17,\\n      4.32\\n    ],\\n    \\\"tf\\\": [\\n      0.273,\\n      6.93\\n    ],\\n    \\\"x\\\": [\\n      0.437,\\n      11.1\\n    ],\\n    \\\"Ix\\\": [\\n      1.65,\\n      0.687\\n    ],\\n    \\\"Iy\\\": [\\n      0.191,\\n      0.0795\\n    ]\\n  },\\n  {\\n    \\\"DESC\\\": [\\n      \\\"C3$\\\\\\\\times$3.5\\\",\\n      \\\"C75$\\\\\\\\times$5.2\\\"\\n    ],\\n    \\\"W\\\": [\\n      3.5,\\n      5.2\\n    ],\\n    \\\"A\\\": [\\n      1.09,\\n      703\\n    ],\\n    \\\"d\\\": [\\n      3,\\n      76.2\\n    ],\\n    \\\"bf\\\": [\\n      1.37,\\n      34.8\\n    ],\\n    \\\"tw\\\": [\\n      0.132,\\n      3.35\\n    ],\\n    \\\"tf\\\": [\\n      0.273,\\n      6.93\\n    ],\\n    \\\"x\\\": [\\n      0.443,\\n      11.3\\n    ],\\n    \\\"Ix\\\": [\\n      1.57,\\n      0.653\\n    ],\\n    \\\"Iy\\\": [\\n      0.169,\\n      0.0703\\n    ]\\n  }\\n]\"))", "description": "<p>AISC data for channels</p>", "templateType": "json"}, "b": {"name": "b", "group": "Ungrouped variables", "definition": "round( random(0.4.. 1.2) d, if(unit=0,'0.25 in', '10 mm'))", "description": "<p>distance between channels</p>", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["unit", "index", "b", "w", "h"], "variable_groups": [{"name": "Channel Properties", "variables": ["data", "C_data", "Desc", "units", "Ibary_c", "Ibarx_c", "A_C", "xbar", "d", "bf", "t"]}, {"name": "Solution", "variables": ["Ibarx_r", "A_r", "d_y", "Ix_R", "Ix", "A_t", "kx", "Ibary_R", "d_x", "Iy_C", "Iy", "ky"]}], "functions": {"disp": {"parameters": [["q", "quantity"]], "type": "number", "language": "jme", "definition": "siground(q,4)"}, "ggb": {"parameters": [["q", "quantity"]], "type": "number", "language": "jme", "definition": "siground(scalar(q in 'in'),4)"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the moment of inertia and radii of gyration of the composite beam with respect to the $x$- and $y$-axes.</p>\n<p>$I_x = $[[0]] $\\qquad k_x = $[[1]]</p>\n<p>$I_y = $[[2]] $\\qquad k_y = $[[3]]</p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "Ix", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Ix", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "kx", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "kx", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "Iy", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "Iy", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "ky", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "ky", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}]}], "allowPrinting": true, "navigation": {"allowregen": true, "reverse": true, "browse": true, "allowsteps": true, "showfrontpage": false, "showresultspage": "oncompletion", "navigatemode": "menu", "onleave": {"action": "none", "message": ""}, "preventleave": false, "startpassword": ""}, "timing": {"allowPause": true, "timeout": {"action": "none", "message": ""}, "timedwarning": {"action": "none", "message": ""}}, "feedback": {"showactualmark": true, "showtotalmark": true, "showanswerstate": true, "allowrevealanswer": true, "advicethreshold": 0, "intro": "", "end_message": "", "reviewshowscore": true, "reviewshowfeedback": true, "reviewshowexpectedanswer": true, "reviewshowadvice": true, "feedbackmessages": []}, "diagnostic": {"knowledge_graph": {"topics": [], "learning_objectives": []}, "script": "diagnosys", "customScript": ""}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/20/polynomials", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/moi.png", "/srv/numbas/media/question-resources/moi.png"], ["question-resources/PastedGraphic-1.png", "/srv/numbas/media/question-resources/PastedGraphic-1.png"], ["question-resources/basicShapes.ggb", "/srv/numbas/media/question-resources/basicShapes.ggb"], ["question-resources/MOI_table.pdf", "/srv/numbas/media/question-resources/MOI_table.pdf"], ["question-resources/MOI_table.png", "/srv/numbas/media/question-resources/MOI_table.png"], ["question-resources/triangle-rectangle.ggb", "/srv/numbas/media/question-resources/triangle-rectangle.ggb"], ["question-resources/Tshape.ggb", "/srv/numbas/media/question-resources/Tshape.ggb"], ["question-resources/plate-angles.ggb", "/srv/numbas/media/question-resources/plate-angles.ggb"], ["question-resources/2boxbeams_aMoCPFM.ggb", "/srv/numbas/media/question-resources/2boxbeams_aMoCPFM.ggb"], ["question-resources/channel_EfJjxiR.png", "/srv/numbas/media/question-resources/channel_EfJjxiR.png"], ["question-resources/builtupbeam.ggb", "/srv/numbas/media/question-resources/builtupbeam.ggb"]]}