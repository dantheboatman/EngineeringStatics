// Numbas version: finer_feedback_settings
{"name": "24-6/7   IEEE  Minimum Insulation Resistance and Temp Correction", "extensions": ["quantities"], "custom_part_types": [{"source": {"pk": 264, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/264/edit"}, "name": "Electrical Quantity", "short_name": "quantity-1", "description": "<p>This extension considers active , reactive and apparent power units as incompatble. &nbsp;This prevents the student from using the wrong unit.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "plain_string(siground(settings[\"correctAnswer\"],settings[\"digits\"]))", "hint": {"static": false, "value": "settings[\"hint\"]"}, "allowEmpty": {"static": true, "value": false}}, "can_be_gap": true, "can_be_step": true, "marking_script": "sig_digits:\n(settings[\"digits\"])\n\nmark:\ncorrectif(right and good_units);\napply(student_number);\napply(unit_feedback)\n\n\nstudent_unit_string:\nreplace_regex('ohms','ohm',\n replace_regex('\u00b0', ' deg',\n   replace_regex('-', ' ' ,\n     studentAnswer[len(student_number)..len(studentAnswer)])),\"i\")\n\n\nstudent_number:\nassert(studentAnswer[0]<>'.', warn('Did you mean 0' + studentAnswer + '?'));\nmatchnumber(studentAnswer,[\"plain\",\"en\"])[0]\n\nstudent_units:\ntry(qty(1, student_unit_string),msg, feedback(msg))\n\nstudent_quantity:\ntry(decimal(student_number) * student_units,msg,qty(0,''))\n\ninterpreted_answer:\nstudent_quantity\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\ncorrect_units:\nunits(correct_quantity)\n\nright:\nif(settings[\"exact\"], same(answers[0],answers[1]), answers[0]=answers[1])\n\nunits:\n[student_units,units(correct_quantity)]\n\ngood_units:\nif(settings[\"exact\"],\n   same(student_units,correct_units),\n   switch( //\n    student_units='Unit not recognized', \n      false,\n    answer_is_P,\n      same(student_units,qty(1,'kW')) or same(student_units, qty(1,'W'))\n    ,\n    answer_is_Q,\n      same(student_units,qty(1,'kvar')) or same(student_units, qty(1,'var'))\n    ,\n    answer_is_S,\n      same(student_units,qty(1,'kVA')) or same(student_units, qty(1,'VA'))\n    ,\n    compatible(correct_units,student_units)\n  ))\n \n\nanswers:\n[siground(student_quantity,sig_digits),siground(correct_quantity,sig_digits)]\n\nanswer_is_P:\nsame(correct_units,qty(1,'kW')) or same(correct_units, qty(1,'W'))\n\nanswer_is_Q:\nsame(correct_units,qty(1,'kvar')) or same(correct_units, qty(1,'var'))\n\nanswer_is_S:\nsame(correct_units,qty(1,'kVA')) or same(correct_units, qty(1,'VA'))\n\nunit_feedback:\nassert(! settings[\"show_hint\"],\n    assert(good_units,\n    switch(\n       settings[\"exact\"], feedback(\"Give answer in \" + units_string(correct_units) + \".\"),\n       answer_is_P , feedback(\"Did you mean 'W' or 'kW'?\"),\n       answer_is_Q , feedback(\"Did you mean 'VAR' or 'kVAR'?\"),\n       answer_is_S , feedback(\"Did you mean 'VA' or 'kVA'?\"),\n       feedback(\"Units are incorrect.\"))))", "marking_notes": [{"name": "sig_digits", "description": "", "definition": "(settings[\"digits\"])"}, {"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "correctif(right and good_units);\napply(student_number);\napply(unit_feedback)\n"}, {"name": "student_unit_string", "description": "<p>Extracts units from submitted</p>", "definition": "replace_regex('ohms','ohm',\n replace_regex('\u00b0', ' deg',\n   replace_regex('-', ' ' ,\n     studentAnswer[len(student_number)..len(studentAnswer)])),\"i\")\n"}, {"name": "student_number", "description": "<p>string?</p>", "definition": "assert(studentAnswer[0]<>'.', warn('Did you mean 0' + studentAnswer + '?'));\nmatchnumber(studentAnswer,[\"plain\",\"en\"])[0]"}, {"name": "student_units", "description": "", "definition": "try(qty(1, student_unit_string),msg, feedback(msg))"}, {"name": "student_quantity", "description": "<p>The student's answer, interpreted as a quantity.</p>", "definition": "try(decimal(student_number) * student_units,msg,qty(0,''))"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "student_quantity"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)"}, {"name": "right", "description": "<p>if setting is checked, answers must be exactly the same, otherwise compatible units are accepted.</p>", "definition": "if(settings[\"exact\"], same(answers[0],answers[1]), answers[0]=answers[1])"}, {"name": "units", "description": "", "definition": "[student_units,units(correct_quantity)]"}, {"name": "good_units", "description": "<p>If exact option is chosen, units must exactly match answer.</p>\n<p>Otherwise, this enforces the compatable units for P, Q, and S and all other quantites. &nbsp;js_quantities considers kW, kvar, and kVA compatible.</p>", "definition": "if(settings[\"exact\"],\n   same(student_units,correct_units),\n   switch( //\n    student_units='Unit not recognized', \n      false,\n    answer_is_P,\n      same(student_units,qty(1,'kW')) or same(student_units, qty(1,'W'))\n    ,\n    answer_is_Q,\n      same(student_units,qty(1,'kvar')) or same(student_units, qty(1,'var'))\n    ,\n    answer_is_S,\n      same(student_units,qty(1,'kVA')) or same(student_units, qty(1,'VA'))\n    ,\n    compatible(correct_units,student_units)\n  ))\n "}, {"name": "answers", "description": "<p>student and correct answers in an array</p>", "definition": "[siground(student_quantity,sig_digits),siground(correct_quantity,sig_digits)]"}, {"name": "answer_is_P", "description": "", "definition": "same(correct_units,qty(1,'kW')) or same(correct_units, qty(1,'W'))"}, {"name": "answer_is_Q", "description": "", "definition": "same(correct_units,qty(1,'kvar')) or same(correct_units, qty(1,'var'))"}, {"name": "answer_is_S", "description": "", "definition": "same(correct_units,qty(1,'kVA')) or same(correct_units, qty(1,'VA'))"}, {"name": "unit_feedback", "description": "", "definition": "assert(! settings[\"show_hint\"],\n    assert(good_units,\n    switch(\n       settings[\"exact\"], feedback(\"Give answer in \" + units_string(correct_units) + \".\"),\n       answer_is_P , feedback(\"Did you mean 'W' or 'kW'?\"),\n       answer_is_Q , feedback(\"Did you mean 'VAR' or 'kVAR'?\"),\n       answer_is_S , feedback(\"Did you mean 'VA' or 'kVA'?\"),\n       feedback(\"Units are incorrect.\"))))"}], "settings": [{"name": "correctAnswer", "label": "Correct answer", "help_url": "", "hint": "The expected quantity.", "input_type": "code", "default_value": "qty(0,'')", "evaluate": true}, {"name": "digits", "label": "Significant Digits", "help_url": "", "hint": "Student answer must be correct to this number of significant digits", "input_type": "code", "default_value": "3", "evaluate": true}, {"name": "exact", "label": "Exact Units Required", "help_url": "", "hint": "If checked, answer units must exactly match expected units; if unchecked compatible units will be accepted.", "input_type": "checkbox", "default_value": false}, {"name": "show_hint", "label": "Show unit hint.", "help_url": "", "hint": "When checked, unit feedback is provided.", "input_type": "checkbox", "default_value": true}, {"name": "hint", "label": "Input Hint", "help_url": "", "hint": "If given, this hint will be shown to the students next to the answer input box.", "input_type": "string", "default_value": "", "subvars": true}], "public_availability": "restricted", "published": false, "extensions": ["quantities"]}], "resources": [["question-resources/IEEE-min.png", "IEEE-min_FsSBEui.png"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false, "typeendtoleave": false}, "question_groups": [{"pickingStrategy": "all-ordered", "questions": [{"name": "24-6/7   IEEE  Minimum Insulation Resistance and Temp Correction", "tags": [], "metadata": {"description": "", "licence": "Creative Commons Attribution-ShareAlike 4.0 International"}, "statement": "<p>The {description[0]} of a {V}, {P}, {n} {description[1]} manufactured in {year} has a measured insulation resistance of {R_T} at a temperature of {T}&deg;C. The insulation is Class {class}, and the test was made with a {megger} megger applied for 1 min.</p>\n<p></p>", "advice": "<p>$k_T = 0.5 ^\\left (\\frac{40-T}{H} \\right)$</p>\n<p>$T_{40} = k_T \\times R_T$</p>\n<p><img src=\"resources/question-resources/IEEE-min.png\" width=\"640\" height=\"488\"/></p>", "rulesets": {}, "extensions": ["quantities"], "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true, "j": false}, "constants": [], "variables": {"p": {"name": "p", "group": "Ungrouped variables", "definition": "if(scalar(v)<= 600, qty( random(5..100#5), 'hp'),qty( random(200..750#50),'hp'))", "description": "", "templateType": "anything", "can_override": false}, "v": {"name": "v", "group": "Ungrouped variables", "definition": "qty(random(240, 440, 600,1200, 6000), \"V\")", "description": "", "templateType": "anything", "can_override": false}, "year": {"name": "year", "group": "Ungrouped variables", "definition": "weighted_random([ [random(1950..1965#5), 1], [random(1975..2025#5), 1] ])", "description": "", "templateType": "anything", "can_override": false}, "type": {"name": "type", "group": "Ungrouped variables", "definition": "random(0..2)", "description": "", "templateType": "anything", "can_override": false}, "answer": {"name": "answer", "group": "Ungrouped variables", "definition": "switch(\ntype = 0, if(year > 1970, qty(100, \"M\u03a9\"), qty(scalar(V)/1000 + 1,\"M\u03a9\")), \ntype = 1, if(year > 1970, qty(100, \"M\u03a9\"), if(scalar(v) < 1000, qty(5, \"M\u03a9\"),  qty(scalar(V)/1000 + 1,\"M\u03a9\"))),\ntype = 2, qty(scalar(V)/1000 + 1,\"M\u03a9\"))", "description": "", "templateType": "anything", "can_override": false}, "n": {"name": "n", "group": "Ungrouped variables", "definition": "qty(random(3600,1800),'rpm')", "description": "", "templateType": "anything", "can_override": false}, "r_T": {"name": "r_T", "group": "Ungrouped variables", "definition": "qty(random(100..500),\"M\u03a9\")", "description": "", "templateType": "anything", "can_override": false}, "T": {"name": "T", "group": "Ungrouped variables", "definition": "random(60..110#10)", "description": "", "templateType": "anything", "can_override": false}, "class": {"name": "class", "group": "Ungrouped variables", "definition": "random(\"A\", \"B\", \"F\", \"H\")", "description": "", "templateType": "anything", "can_override": false}, "megger": {"name": "megger", "group": "Ungrouped variables", "definition": "qty(random(500,1000), \"V\")", "description": "", "templateType": "anything", "can_override": false}, "description": {"name": "description", "group": "Ungrouped variables", "definition": "[[\"armature\",\"DC generator\"], [\"stator\",\"induction motor\"], [\"shunt field winding\",\"DC motor\"]][type]", "description": "", "templateType": "anything", "can_override": false}, "k_t": {"name": "k_t", "group": "Ungrouped variables", "definition": "0.5 ^ ((40-T)/H)", "description": "", "templateType": "anything", "can_override": false}, "h": {"name": "h", "group": "Ungrouped variables", "definition": "random(10,20)", "description": "", "templateType": "anything", "can_override": false}, "R_40": {"name": "R_40", "group": "Ungrouped variables", "definition": "R_T k_t", "description": "", "templateType": "anything", "can_override": false}, "good": {"name": "good", "group": "Ungrouped variables", "definition": "R_40 > answer", "description": "", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["p", "v", "year", "type", "answer", "n", "r_T", "T", "class", "megger", "description", "k_t", "h", "R_40", "good"], "variable_groups": [], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Using a halving factor of {H}, determine</p>\n<p>The &nbsp;resistance at 40&deg;C;</p>\n<p>$R_{40} =$ [[0]]</p>\n<p>The recommended minimum resistance;</p>\n<p>$R_\\text{min} = $ [[1]]</p>\n<p>The status of the insulation.</p>\n<p>[[2]]</p>\n<p></p>", "gaps": [{"type": "quantity-1", "useCustomName": true, "customName": "$R_{40}$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "R_40", "digits": "3", "exact": false, "show_hint": true, "hint": ""}}, {"type": "quantity-1", "useCustomName": true, "customName": "$R_\\text{min}$", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "answer", "digits": "3", "exact": false, "show_hint": true, "hint": ""}}, {"type": "1_n_2", "useCustomName": true, "customName": "Status", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": false, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "minMarks": 0, "maxMarks": 0, "shuffleChoices": false, "displayType": "radiogroup", "displayColumns": "1", "showCellAnswerState": true, "choices": ["Insulation is good.", "Insulation is no good."], "matrix": ["if(good,10,0)", "if(good,0,10)"], "distractors": ["", ""]}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always", "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "resources": ["question-resources/IEEE-min.png"]}]}], "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}]}