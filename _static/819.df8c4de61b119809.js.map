{"version":3,"file":"819.df8c4de61b119809.js","mappings":"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","sources":["webpack://WebComponents/./runestone/shortanswer/js/shortanswer.js","webpack://WebComponents/./runestone/shortanswer/js/timed_shortanswer.js"],"sourcesContent":["/*==========================================\n=======    Master shortanswer.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone shortanswer component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/2/15                ===\n===              Brad Miller             ===\n===                2019                  ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./../css/shortanswer.css\";\n\nexport default class ShortAnswer extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        if (opts) {\n            var orig = opts.orig; // entire <p> element that will be replaced by new HTML\n            this.useRunestoneServices =\n                opts.useRunestoneServices || eBookConfig.useRunestoneServices;\n            this.origElem = orig;\n            this.divid = orig.id;\n            this.question = this.origElem.innerHTML;\n            this.optional = false;\n            this.attachURL = opts.attachURL;\n            if ($(this.origElem).is(\"[data-optional]\")) {\n                this.optional = true;\n            }\n            if ($(this.origElem).is(\"[data-mathjax]\")) {\n                this.mathjax = true;\n            }\n            this.mathjax = true;\n            if ($(this.origElem).is(\"[data-attachment]\")) {\n                this.attachment = true;\n            }\n            this.placeholder =\n                $(this.origElem).data(\"placeholder\") ||\n                \"Write your answer here\";\n            this.renderHTML();\n            this.caption = \"shortanswer\";\n            this.addCaption(\"runestone\");\n            this.checkServer(\"shortanswer\", true);\n            if (typeof Prism !== \"undefined\") {\n                Prism.highlightAllUnder(this.containerDiv);\n            }\n            if (this.attachment) {\n                this.getAttachmentName();\n            }\n        }\n    }\n\n    renderHTML() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newForm = document.createElement(\"form\");\n        this.newForm.id = this.divid + \"_journal\";\n        this.newForm.name = this.newForm.id;\n        this.newForm.action = \"\";\n        this.containerDiv.appendChild(this.newForm);\n        this.fieldSet = document.createElement(\"fieldset\");\n        this.newForm.appendChild(this.fieldSet);\n        this.firstLegendDiv = document.createElement(\"div\");\n        this.firstLegendDiv.innerHTML = this.question;\n        $(this.firstLegendDiv).addClass(\"journal-question\");\n        this.fieldSet.appendChild(this.firstLegendDiv);\n        this.jInputDiv = document.createElement(\"div\");\n        this.jInputDiv.id = this.divid + \"_journal_input\";\n        this.fieldSet.appendChild(this.jInputDiv);\n        this.jOptionsDiv = document.createElement(\"div\");\n        $(this.jOptionsDiv).addClass(\"journal-options\");\n        this.jInputDiv.appendChild(this.jOptionsDiv);\n        this.jTextArea = document.createElement(\"textarea\");\n        let self = this;\n        this.jTextArea.onchange = function () {\n            self.isAnswered = true;\n        };\n        this.jTextArea.id = this.divid + \"_solution\";\n        $(this.jTextArea).attr(\"aria-label\", \"textarea\");\n        this.jTextArea.placeholder = this.placeholder;\n        $(this.jTextArea).css(\"display:inline, width:530px\");\n        $(this.jTextArea).addClass(\"form-control\");\n        this.jTextArea.rows = 4;\n        this.jTextArea.cols = 50;\n        this.jOptionsDiv.appendChild(this.jTextArea);\n        this.jTextArea.onchange = function () {\n            this.isAnswered = true;\n            if (this.isTimed) {\n                this.feedbackDiv.innerHTML = \"Your answer is automatically saved.\";\n            } else {\n                this.feedbackDiv.innerHTML = \"Your answer has not been saved yet!\";\n            }\n            $(this.feedbackDiv).removeClass(\"alert-success\");\n            $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        }.bind(this);\n        this.fieldSet.appendChild(document.createElement(\"br\"));\n        if (this.mathjax) {\n            this.renderedAnswer = document.createElement(\"div\");\n            $(this.renderedAnswer).addClass(\"latexoutput\");\n            this.fieldSet.appendChild(this.renderedAnswer);\n        }\n        this.buttonDiv = document.createElement(\"div\");\n        this.fieldSet.appendChild(this.buttonDiv);\n        this.submitButton = document.createElement(\"button\");\n        $(this.submitButton).addClass(\"btn btn-success\");\n        this.submitButton.type = \"button\";\n        this.submitButton.textContent = \"Save\";\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.randomSpan = document.createElement(\"span\");\n        this.randomSpan.innerHTML = \"Instructor's Feedback\";\n        this.fieldSet.appendChild(this.randomSpan);\n        this.otherOptionsDiv = document.createElement(\"div\");\n        $(this.otherOptionsDiv).css(\"padding-left:20px\");\n        $(this.otherOptionsDiv).addClass(\"journal-options\");\n        this.fieldSet.appendChild(this.otherOptionsDiv);\n        // add a feedback div to give user feedback\n        this.feedbackDiv = document.createElement(\"div\");\n        //$(this.feedbackDiv).addClass(\"bg-info form-control\");\n        //$(this.feedbackDiv).css(\"width:530px, background-color:#eee, font-style:italic\");\n        $(this.feedbackDiv).css(\"width:530px, font-style:italic\");\n        this.feedbackDiv.id = this.divid + \"_feedback\";\n        this.feedbackDiv.innerHTML = \"You have not answered this question yet.\";\n        $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        //this.otherOptionsDiv.appendChild(this.feedbackDiv);\n        this.fieldSet.appendChild(this.feedbackDiv);\n        if (this.attachment) {\n            let attachDiv = document.createElement(\"div\")\n            this.attachDiv = attachDiv;\n            if (this.graderactive) {\n                // If in grading mode make a button to create a popup with the image\n                let viewButton = document.createElement(\"button\")\n                viewButton.type = \"button\"\n                viewButton.innerHTML = \"View Attachment\"\n                viewButton.onclick = this.viewFile.bind(this);\n                attachDiv.appendChild(viewButton);\n            } else {\n                // Otherwise make a button for the student to select a file to upload.\n                this.fileUpload = document.createElement(\"input\")\n                this.fileUpload.type = \"file\";\n                this.fileUpload.id = `${this.divid}_fileme`;\n                attachDiv.appendChild(this.fileUpload);\n            }\n            this.containerDiv.appendChild(attachDiv);\n        }\n        //this.fieldSet.appendChild(document.createElement(\"br\"));\n        $(this.origElem).replaceWith(this.containerDiv);\n        // This is a stopgap measure for when MathJax is not loaded at all.  There is another\n        // more difficult case that when MathJax is loaded asynchronously we will get here\n        // before MathJax is loaded.  In that case we will need to implement something\n        // like `the solution described here <https://stackoverflow.com/questions/3014018/how-to-detect-when-mathjax-is-fully-loaded>`_\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(this.containerDiv);\n        }\n    }\n\n    renderMath(value) {\n        if (this.mathjax) {\n            value = value.replace(/\\$\\$(.*?)\\$\\$/g, \"\\\\[ $1 \\\\]\");\n            value = value.replace(/\\$(.*?)\\$/g, \"\\\\( $1 \\\\)\");\n            value = value.replace(/\\n/g, \"<br/>\"); // add line breaks\n            $(this.renderedAnswer).html(value);\n            this.queueMathJax(this.renderedAnswer);\n        }\n    }\n\n    async checkCurrentAnswer() {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n    }\n\n    async logCurrentAnswer(sid) {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"shortanswer\",\n            act: value,\n            answer: value,\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n        if (this.attachment) {\n            await this.uploadFile();\n        }\n    }\n\n    renderFeedback() {\n        this.feedbackDiv.innerHTML = \"Your answer has been saved.\";\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n    setLocalStorage(data) {\n        if (!this.graderactive) {\n            let key = this.localStorageKey();\n            localStorage.setItem(key, JSON.stringify(data));\n        }\n    }\n    checkLocalStorage() {\n        // Repopulates the short answer text\n        // which was stored into local storage.\n        var answer = \"\";\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    var storedData = JSON.parse(ex);\n                    answer = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                let solution = $(\"#\" + this.divid + \"_solution\");\n                solution.text(answer);\n                this.renderMath(answer);\n                this.feedbackDiv.innerHTML =\n                    \"Your current saved answer is shown above.\";\n                $(this.feedbackDiv).removeClass(\"alert-danger\");\n                $(this.feedbackDiv).addClass(\"alert alert-success\");\n            }\n        }\n    }\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        this.answer = data.answer;\n        this.jTextArea.value = this.answer;\n        this.renderMath(this.answer);\n\n        let p = document.createElement(\"p\");\n        this.jInputDiv.appendChild(p);\n        var tsString = \"\";\n        if (data.timestamp) {\n            tsString = new Date(data.timestamp).toLocaleString();\n        } else {\n            tsString = \"\";\n        }\n        $(p).text(tsString);\n        if (data.last_answer) {\n            this.current_answer = \"ontime\";\n            let toggle_answer_button = document.createElement(\"button\");\n            toggle_answer_button.type = \"button\";\n            $(toggle_answer_button).text(\"Show Late Answer\");\n            $(toggle_answer_button).addClass(\"btn btn-warning\");\n            $(toggle_answer_button).css(\"margin-left\", \"5px\");\n\n            $(toggle_answer_button).click(\n                function () {\n                    var display_timestamp, button_text;\n                    if (this.current_answer === \"ontime\") {\n                        this.jTextArea.value = data.last_answer;\n                        this.answer = data.last_answer;\n                        display_timestamp = new Date(\n                            data.last_timestamp\n                        ).toLocaleString();\n                        button_text = \"Show on-Time Answer\";\n                        this.current_answer = \"late\";\n                    } else {\n                        this.jTextArea.value = data.answer;\n                        this.answer = data.answer;\n                        display_timestamp = tsString;\n                        button_text = \"Show Late Answer\";\n                        this.current_answer = \"ontime\";\n                    }\n                    this.renderMath(this.answer);\n                    $(p).text(`Submitted: ${display_timestamp}`);\n                    $(toggle_answer_button).text(button_text);\n                }.bind(this)\n            );\n\n            this.buttonDiv.appendChild(toggle_answer_button);\n        }\n        let feedbackStr = \"Your current saved answer is shown above.\";\n        if (typeof data.score !== \"undefined\") {\n            feedbackStr = `Score: ${data.score}`;\n        }\n        if (data.comment) {\n            feedbackStr += ` -- ${data.comment}`;\n        }\n        this.feedbackDiv.innerHTML = feedbackStr;\n\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n\n    disableInteraction() {\n        this.jTextArea.disabled = true;\n    }\n\n    async getAttachmentName() {\n        // Get the attachment name from the /ns/assessment/has_attachment endpoint\n        let requestUrl = `/ns/assessment/has_attachment/${this.divid}`;\n        if (this.sid) {\n            requestUrl += `?sid=${this.sid}`;\n        }\n        const response = await fetch(requestUrl);\n        if (!response.ok) {\n            console.error(\"Error fetching attachment name:\", response.statusText);\n            return null;\n        }\n        const obj = await response.json();\n            if (obj.detail.hasAttachment) {\n            // Return the S3 key for the attachment\n            let filename = obj.detail.hasAttachment;\n            // filename is everthing after the last slash\n            filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n            let fmess = document.createElement(\"span\");\n            fmess.innerHTML = `Attachment: ${filename}`;\n            this.attachDiv.appendChild(fmess);\n        }\n    }\n\n    async uploadFile() {\n        const files = this.fileUpload.files\n        // get the suffix from the file name\n        const fileName = files[0].name;\n        const suffix = fileName.split('.').pop();\n        // if the suffix is not in the list of allowed suffixes, return\n        if (!['jpg', 'jpeg', 'png', 'gif', 'pdf'].includes(suffix)) {\n            alert(\"File type not allowed. Please upload a jpg, jpeg, png, gif, or pdf file.\");\n            return;\n        }\n        // if the file size is greater than 5MB, return\n        if (files[0].size > 5 * 1024 * 1024) {\n            alert(\"File size exceeds 5MB limit. Please upload a smaller file.\");\n            return;\n        }\n        const data = new FormData()\n        if (this.fileUpload.files.length > 0) {\n            data.append('file', files[0])\n            fetch(`/ns/logger/upload/${this.divid}`, {\n                method: 'POST',\n                body: data\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                })\n                .catch(error => {\n                    console.error(error)\n                })\n        }\n    }\n\n    viewFile() {\n        // Get the URL from the S3 API -- saved when we display in grader mode\n        if (this.attachURL) {\n            //window.open(this.attachURL, \"_blank\");\n            //<embed src=\"example.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n            //switch to \n            const image_window = window.open(\"\", \"_blank\")\n            if (this.attachURL.indexOf('.pdf?') !== -1) {\n                const embed = image_window.document.createElement(\"object\");\n                embed.setAttribute(\"data\", this.attachURL);\n                embed.setAttribute(\"type\", \"application/pdf\");\n                embed.setAttribute(\"width\", \"800px\");\n                embed.setAttribute(\"height\", \"1040px\");\n                image_window.document.body.appendChild(embed);\n                let alt = image_window.document.createElement(\"a\");\n                alt.setAttribute(\"href\", this.attachURL);\n                alt.innerText = \"Download PDF\";\n                embed.appendChild(alt);\n            }\n            else {\n                const img = image_window.document.createElement(\"img\");\n                img.setAttribute(\"src\", this.attachURL);\n                img.setAttribute(\"style\", \"width:100%; height:auto;\");\n                image_window.document.body.appendChild(img);\n            }\n        } else {\n            alert(\"No attachment for this student.\")\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=shortanswer]\").each(function () {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                window.componentMap[this.id] = new ShortAnswer({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ShortAnswer Problem ${this.id}\n                Details: ${err}`);\n            }\n        }\n    });\n});\n","import ShortAnswer from \"./shortanswer.js\";\n\nexport default class TimedShortAnswer extends ShortAnswer {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.isTimed = true;\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        return \"I\"; // we ignore this in the grading\n    }\n    hideFeedback() {\n        $(this.feedbackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.shortanswer = function (opts) {\n    if (opts.timed) {\n        return new TimedShortAnswer(opts);\n    }\n    return new ShortAnswer(opts);\n};\n"],"names":["ShortAnswer","constructor","opts","super","orig","this","useRunestoneServices","eBookConfig","origElem","divid","id","question","innerHTML","optional","attachURL","$","is","mathjax","attachment","placeholder","data","renderHTML","caption","addCaption","checkServer","Prism","highlightAllUnder","containerDiv","getAttachmentName","document","createElement","addClass","getAttribute","newForm","name","action","appendChild","fieldSet","firstLegendDiv","jInputDiv","jOptionsDiv","jTextArea","self","onchange","isAnswered","attr","css","rows","cols","isTimed","feedbackDiv","removeClass","bind","renderedAnswer","buttonDiv","submitButton","type","textContent","onclick","checkCurrentAnswer","logCurrentAnswer","renderFeedback","randomSpan","otherOptionsDiv","attachDiv","graderactive","viewButton","viewFile","fileUpload","replaceWith","MathJax","queueMathJax","renderMath","value","replace","html","getElementById","val","setLocalStorage","answer","timestamp","Date","sid","event","act","div_id","logBookEvent","uploadFile","key","localStorageKey","localStorage","setItem","JSON","stringify","checkLocalStorage","length","ex","getItem","parse","err","console","log","message","removeItem","text","restoreAnswers","p","tsString","toLocaleString","last_answer","current_answer","toggle_answer_button","click","display_timestamp","button_text","last_timestamp","feedbackStr","score","comment","disableInteraction","disabled","requestUrl","response","fetch","ok","error","statusText","obj","json","detail","hasAttachment","filename","substring","lastIndexOf","fmess","files","suffix","split","pop","includes","alert","size","FormData","append","method","body","then","catch","image_window","window","open","indexOf","embed","setAttribute","alt","innerText","img","on","each","closest","componentMap","TimedShortAnswer","renderTimedIcon","hideButtons","hide","component","timeIconDiv","timeIcon","src","style","className","title","prepend","checkCorrectTimed","hideFeedback","component_factory","shortanswer","timed"],"sourceRoot":""}